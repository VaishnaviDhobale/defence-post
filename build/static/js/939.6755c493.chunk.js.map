{"version":3,"file":"static/js/939.6755c493.chunk.js","mappings":"gKAEA,MA8BA,EA9BeA,IAAkB,IAAjB,UAACC,GAAUD,EACvB,MAAOE,EAAeC,IAAoBC,EAAAA,EAAAA,UAAS,IAqBrD,OAnBEC,EAAAA,EAAAA,YAAU,KACaC,WACnB,OACE,IAAK,MAAMC,KAAQN,EAAW,CAC5B,IAAK,MAAMO,KAAQD,EACjBJ,GAAkBM,GAAaA,EAAWD,UAEpC,IAAIE,SAAQC,GAAWC,WAAWD,EAAS,aAG7C,IAAID,SAAQC,GAAWC,WAAWD,EAAS,QACjDR,EAAiB,GACnB,CACF,EAGFU,EAAc,GACb,KAGHC,EAAAA,EAAAA,KAAA,OAAAC,SAEGb,GACG,C","sources":["components/WordRun.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst WordRun= ({wordArray}) => {\r\n    const [displayedText, setDisplayedText] = useState('');\r\n\r\n    useEffect(() => {\r\n      const displayWords = async () => {\r\n        while (true) {\r\n          for (const word of wordArray) {\r\n            for (const char of word) {\r\n              setDisplayedText((prevText) => prevText + char);\r\n              // Replace the setDisplayedText with your display logic\r\n              await new Promise(resolve => setTimeout(resolve, 500)); // Adjust the delay as needed\r\n            }\r\n  \r\n            await new Promise(resolve => setTimeout(resolve, 1500)); // 2-second pause between words\r\n            setDisplayedText('');\r\n          }\r\n        }\r\n      };\r\n  \r\n      displayWords();\r\n    }, []);  // Empty dependency array ensures the effect runs only once\r\n\r\n  return (\r\n    <div>\r\n      {/* Display the text as it gets updated */}\r\n      {displayedText}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WordRun;"],"names":["_ref","wordArray","displayedText","setDisplayedText","useState","useEffect","async","word","char","prevText","Promise","resolve","setTimeout","displayWords","_jsx","children"],"sourceRoot":""}