{"version":3,"file":"static/js/660.c2112b18.chunk.js","mappings":"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","sources":["BaseUrl.jsx","Pages/Login.jsx","components/Navbar.jsx","../node_modules/@chakra-ui/toast/src/use-toast.tsx"],"sourcesContent":["\r\n\r\nexport const baseUrl = \"https://backend.defencepost.in\"\r\n// export const baseUrl = \"http://localhost:8000\"","import { Box, Text, useToast } from \"@chakra-ui/react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AiFillEye, AiFillEyeInvisible } from \"react-icons/ai\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { AiOutlineLeft } from \"react-icons/ai\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../BaseUrl\";\r\nimport Navbar from \"../components/Navbar\";\r\n\r\nfunction Login() {\r\n  const navigate = useNavigate();\r\n  let [showPass, setShowPass] = useState(false);\r\n  let [userData, setUserData] = useState({});\r\n  const toast = useToast();\r\n\r\n  async function loginPostUser() {\r\n    try {\r\n      const loginData = await axios.post(`${baseUrl}/user/login`, userData);\r\n      if (loginData?.status === 200 && loginData?.data?.msg) {\r\n        toast({\r\n          title: \"Login successful\",\r\n          description: \"Have a great day\",\r\n          status: \"success\",\r\n          duration: 4000,\r\n          isClosable: true,\r\n          position: \"top\",\r\n        });\r\n\r\n        let obj = {\r\n          token: loginData.data.token,\r\n          userName: loginData.data.name,\r\n          email: userData.email,\r\n        };\r\n        localStorage.setItem(\"DefencePostUserDetails\", JSON.stringify(obj));\r\n        navigate(\"/\");\r\n      } else {\r\n        toast({\r\n          title: \"Check your credentials\",\r\n          status: \"error\",\r\n          duration: 4000,\r\n          isClosable: true,\r\n          position: \"top\",\r\n        });\r\n      }\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Something went wrong\",\r\n        status: \"error\",\r\n        duration: 4000,\r\n        isClosable: true,\r\n        position: \"top\",\r\n      });\r\n    }\r\n  }\r\n\r\n  // css starts\r\n  const inputStyle = {\r\n    border: \"1.5px solid #29a4de\",\r\n    marginBottom: \"40px\",\r\n    outline: \"none\",\r\n    padding: \"10px\",\r\n    width: \"100%\",\r\n    fontSize: \"17.5px\",\r\n    borderRadius: \"10px\",\r\n    color: \"#29a4de\",\r\n  };\r\n\r\n  const button = {\r\n    outline: \"none\",\r\n    padding: \"10px\",\r\n    width: \"100%\",\r\n    backgroundColor: \"#29a4de\",\r\n    cursor: \"pointer\",\r\n    color: \"white\",\r\n    fontSize: \"17.5px\",\r\n  };\r\n  // css ends\r\n\r\n  // Login form functionality start\r\n  const loginForm = (event) => {\r\n    event.preventDefault();\r\n    event.target.reset(); // This will reset all form fields\r\n    loginPostUser();\r\n  };\r\n\r\n  // handleling input here\r\n  const handleInput = (event) => {\r\n    let name = event.target.name;\r\n    let value = event.target.value;\r\n\r\n    setUserData({ ...userData, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <Navbar />\r\n      <Text\r\n        textAlign={{\r\n          base: \"Center\",\r\n          lg: \"left\",\r\n        }}\r\n        marginLeft={{\r\n          base: \"0\",\r\n          lg: \"50px\",\r\n        }}\r\n        marginBottom={\"20px\"}\r\n        fontSize={\"20px\"}\r\n        color={\"#27395F\"}\r\n        cursor={\"Pointer\"}\r\n        display={{ base: \"none\", md: \"flex\" }}\r\n        fontFamily={\"Barlow\"}\r\n      >\r\n        <AiOutlineLeft\r\n          style={{ position: \"relative\", top: \"6px\", fontSize: \"17px\" }}\r\n        />\r\n        <Link to=\"/\">Back</Link>\r\n      </Text>\r\n      <Box\r\n        width={{\r\n          base: \"100%\",\r\n          md: \"50%\",\r\n          lg: \"40%\",\r\n        }}\r\n        margin={\"auto\"}\r\n        boxShadow=\"rgba(0, 0, 0, 0.24) 0px 3px 8px\"\r\n        padding={\"30px\"}\r\n        marginBottom={\"100px\"}\r\n        borderRadius={\"20px\"}\r\n        position={\"relative\"}\r\n        fontFamily={\"Barlow\"}\r\n      >\r\n        <Text fontSize={\"30px\"} fontWeight={\"Bold\"} marginBottom={\"30px\"}>\r\n          Login\r\n        </Text>\r\n\r\n        {/* Login form  */}\r\n        <form onSubmit={loginForm} style={{ textAlign: \"left\" }}>\r\n          <label\r\n            htmlFor=\"\"\r\n            style={{ alignItems: \"left\", fontSize: \"20px\", marginLeft: \"2px\" }}\r\n          >\r\n            Email\r\n          </label>\r\n          <input\r\n            style={inputStyle}\r\n            placeholder=\"Email or Phone Number\"\r\n            onChange={handleInput}\r\n            name=\"email\"\r\n          />\r\n\r\n          <label\r\n            htmlFor=\"\"\r\n            style={{ alignItems: \"left\", fontSize: \"20px\", marginLeft: \"2px\" }}\r\n          >\r\n            Password\r\n          </label>\r\n          <input\r\n            type={showPass ? \"password\" : \"text\"}\r\n            style={inputStyle}\r\n            placeholder=\"Password\"\r\n            onChange={handleInput}\r\n            name=\"password\"\r\n          />\r\n\r\n          {/* Forget password start */}\r\n          <Box textAlign={\"right\"} paddingBottom={\"10px\"}>\r\n            <Link\r\n              to={\"/forgotpassword\"}\r\n              style={{ textDecoration: \"underline\", fontSize: \"17.5px\" }}\r\n            >\r\n              Forget Password?\r\n            </Link>\r\n          </Box>\r\n          {/* Forget password ends  */}\r\n\r\n          <input style={button} type=\"submit\" value={\"Login\"} />\r\n        </form>\r\n\r\n        {/* Don't have account start  */}\r\n        <Text fontSize={\"17.5px\"} marginTop={\"20px\"}>\r\n          Don't have account?{\" \"}\r\n          <Link\r\n            style={{\r\n              textDecoration: \"underline\",\r\n              color: \"#27395F\",\r\n            }}\r\n            to={\"/signup\"}\r\n          >\r\n            Sign Up\r\n          </Link>\r\n        </Text>\r\n\r\n        <Box\r\n          fontSize={\"25px\"}\r\n          position={\"absolute\"}\r\n          right={\"40px\"}\r\n          top={\"266px\"}\r\n          cursor={\"pointer\"}\r\n        >\r\n          {showPass ? (\r\n            <AiFillEye\r\n              onClick={() => {\r\n                setShowPass(false);\r\n              }}\r\n            />\r\n          ) : (\r\n            <AiFillEyeInvisible\r\n              onClick={() => {\r\n                setShowPass(true);\r\n              }}\r\n            />\r\n          )}\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import { NavLink, useNavigate } from \"react-router-dom\";\r\nimport { Box, Image, Select, Input, Button, Text } from \"@chakra-ui/react\";\r\nimport logoImg from \"../Images/Logo-black.jpeg\";\r\n// import { VscThreeBars } from \"react-icons/vsc\";\r\nimport { IoReorderThreeOutline } from \"react-icons/io5\";\r\nimport { ChevronDownIcon } from \"@chakra-ui/icons\";\r\nimport { IoMdLogOut } from \"react-icons/io\";\r\nimport \"../css/navbar.css\";\r\nimport \"animate.css/animate.min.css\";\r\nimport { VscThreeBars } from \"react-icons/vsc\";\r\n\r\n// import for Drawer\r\nimport {\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerFooter,\r\n  DrawerHeader,\r\n  DrawerOverlay,\r\n  DrawerContent,\r\n  DrawerCloseButton,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { AlertBox } from \"./AlertBox\";\r\nimport { baseUrl } from \"../BaseUrl\";\r\n\r\n// import \"../css/navbar.css\";\r\n function Navbar() {\r\nconst navigate = useNavigate();\r\n  const { isOpen, onClose, onToggle } = useDisclosure();\r\n  const [showPostDropdown, setShowPostDropdown] = useState(false);\r\n  const [showCourseDropdown, setShowCourseDropdown] = useState(false);\r\n  const [courseData, setCourseData] = useState([]);\r\n  const [postData, setPostData] = useState([]);\r\n  const [isHovered, setIsHovered] = useState(true);\r\n\r\n  // logout\r\n  let [showLogout, setShowLogout] = useState(false);\r\n  let [token, setToken] = useState(\r\n    JSON.parse(localStorage.getItem(\"DefencePostUserDetails\"))?.token\r\n  );\r\n  let [userName, setUserName] = useState(\r\n    JSON.parse(localStorage.getItem(\"DefencePostUserDetails\"))?.userName\r\n  );\r\n  let [email, setEmail] = useState(\r\n    JSON.parse(localStorage.getItem(\"DefencePostUserDetails\"))?.email\r\n  );\r\n\r\n\r\n  const handlePostMouseEnter = () => {\r\n    setShowPostDropdown(true);\r\n  };\r\n\r\n  const handlePostMouseLeave = () => {\r\n    setShowPostDropdown(false);\r\n  };\r\n\r\n  // Course dropdown handle\r\n  const handleCourseMouseEnter = () => {\r\n    setShowCourseDropdown(true);\r\n  };\r\n\r\n  const handleCourseMouseLeave = () => {\r\n    setShowCourseDropdown(false);\r\n  };\r\n\r\n  // get all course data\r\n  let getCourseData = async () => {\r\n    try {\r\n      let dataCourse = await axios.get(`${baseUrl}/course/`);\r\n      setCourseData(dataCourse.data);\r\n    } catch (err) {\r\n      alert(err);\r\n    }\r\n  };\r\n\r\n  // get all course data\r\n  let getPostData = async () => {\r\n    try {\r\n      let dataPost = await axios.get(`${baseUrl}/post/`);\r\n      \r\n      // Extract unique categories using Set\r\n      const uniquePosts = Array.from(new Map(dataPost.data.map(post => [post.category, post])).values());\r\n  \r\n      // Set the unique categories in your state or wherever needed\r\n      setPostData(uniquePosts);\r\n    } catch (err) {\r\n      alert(err);\r\n    }\r\n  };\r\n  \r\n\r\n  // handle logout\r\n  let handleLogout = () => {\r\n    const userResponse = window.confirm(\"Are you sure you want to logout?\");\r\n    let obj = { token: null, userName: null, email: null };\r\n    if (userResponse) {\r\n      localStorage.setItem(\"DefencePostUserDetails\", JSON.stringify(obj));\r\n      navigate(\"/\")\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPostData();\r\n    getCourseData();\r\n  }, []);\r\n\r\n  \r\n  // console.log(postData);\r\n  return (\r\n    <>\r\n      <Box\r\n        className=\"header\"\r\n        display={{\r\n          base: \"none\",\r\n          lg: \"grid\",\r\n        }}\r\n        gridTemplateColumns={token ? \"30% 1fr\" : \"30% 1fr 10%\"}\r\n        alignItems={\"center\"}\r\n        backgroundColor={\"white\"}\r\n        color={\"black\"}\r\n        boxShadow={\r\n          \"rgba(0, 0, 0, 0.1) 0px 4px 6px -1px, rgba(0, 0, 0, 0.06) 0px 2px 4px -1px\"\r\n        }\r\n        fontFamily={\"Barlow\"}\r\n        height={\"70px\"}\r\n        position={\"fixed\"} //pehele sticky than mene ye add kiya he\r\n        width={\"100%\"} // isko add kiya he\r\n        top={\"0px\"}\r\n        marginBottom={\"50px\"}\r\n        zIndex={1000}\r\n        paddingRight={\"30px\"}\r\n        // mb={\"740px\"}\r\n      >\r\n        <NavLink className=\"logo nav-link\" to={\"/\"}>\r\n          <Image src={logoImg} width={\"200px\"} height={\"100%\"}></Image>\r\n        </NavLink>\r\n\r\n        <Box\r\n          className=\"nav\"\r\n          display={\"flex\"}\r\n          justifyContent={\"flex-end\"}\r\n          fontSize={\"18px\"}\r\n          alignItems={\"center\"}\r\n        >\r\n          <NavLink className=\"navContent nav-link\" to=\"/\">\r\n            Home\r\n          </NavLink>\r\n          <Box\r\n            display={\"flex\"}\r\n            className=\"navContent\"\r\n            // border={\"1px solid red\"}\r\n            // paddingBottom={\"2px\"}\r\n            onMouseEnter={handlePostMouseEnter}\r\n            onMouseLeave={handlePostMouseLeave}\r\n          >\r\n            <NavLink className=\"nav-link\" to=\"/posts\">\r\n              Posts\r\n            </NavLink>{\" \"}\r\n            <ChevronDownIcon\r\n              style={{ position: \"relative\", top: \"5px\", marginLeft: \"5px\" }}\r\n            />\r\n            {showPostDropdown && (\r\n              <Box\r\n                className={`dropdown ${\r\n                  isHovered ? \"animate_animated animate_zoomIn\" : \"\"\r\n                }`}\r\n                position={\"absolute\"}\r\n                top={\"45px\"}\r\n                display={\"flex\"}\r\n                flexDirection={\"column\"}\r\n                backgroundColor={\"white\"}\r\n                textAlign={\"left\"}\r\n                boxShadow=\"rgba(0, 0, 0, 0.16) 0px 1px 4px\"\r\n                padding={\"10px 20px\"}\r\n                borderRadius={\"10px\"}\r\n              >\r\n                {postData.map((ele, index) => {\r\n                  return (\r\n                    <NavLink to={`/singlepostpage/${ele._id}/${index}/${ele.category}`}>\r\n                      {ele.category}\r\n                    </NavLink>\r\n                  );\r\n                })}\r\n              </Box>\r\n            )}\r\n          </Box>\r\n\r\n          <Box\r\n            display={\"flex\"}\r\n            className=\"navContent\"\r\n            onMouseEnter={handleCourseMouseEnter}\r\n            onMouseLeave={handleCourseMouseLeave}\r\n          >\r\n            <NavLink to=\"/course\" className={\"nav-link\"}>\r\n              Course\r\n            </NavLink>{\" \"}\r\n            <ChevronDownIcon\r\n              style={{ position: \"relative\", top: \"5px\", marginLeft: \"5px\" }}\r\n            />\r\n            {showCourseDropdown && (\r\n              <Box\r\n                className={`dropdown ${\r\n                  isHovered ? \"animate_animated animate_zoomIn\" : \"\"\r\n                }`}\r\n                position={\"absolute\"}\r\n                top={\"45px\"}\r\n                display={\"flex\"}\r\n                flexDirection={\"column\"}\r\n                backgroundColor={\"white\"}\r\n                textAlign={\"left\"}\r\n                padding={\"10px 20px\"}\r\n                borderRadius={\"10px\"}\r\n                boxShadow=\"rgba(0, 0, 0, 0.16) 0px 1px 4px\"\r\n              >\r\n                {showCourseDropdown &&\r\n                  courseData.map((ele, index) => {\r\n                    return (\r\n                      <NavLink\r\n                        to={`/viewdetails/${ele._id}`}\r\n                        className={\"nav-link\"}\r\n                      >\r\n                        {ele.name}\r\n                      </NavLink>\r\n                    );\r\n                  })}\r\n              </Box>\r\n            )}\r\n          </Box>\r\n          {token && (\r\n            <NavLink className=\"navContent nav-link\" to=\"/mycourse\">\r\n              My Course\r\n            </NavLink>\r\n          )}\r\n\r\n          <NavLink className=\"navContent nav-link\" to=\"/free\">\r\n            Free\r\n          </NavLink>\r\n\r\n          {/* Data */}\r\n          {email == \"masaieducation17@gmail.com\" && (\r\n            <NavLink className=\"navContent nav-link\" to={\"/datahub\"}>\r\n              DataHub\r\n            </NavLink>\r\n          )}\r\n\r\n          {!token && (\r\n            <NavLink className=\"navContent nav-link\" to=\"/login\">\r\n              Login\r\n            </NavLink>\r\n          )}\r\n          {token && (\r\n            <Text\r\n              backgroundColor={\"green.300\"}\r\n              borderRadius={\"50%\"}\r\n              width={\"40px\"}\r\n              h={\"40px\"}\r\n              // marginRight={\"20px\"}\r\n              color={\"white\"}\r\n              ml={\"20px\"}\r\n              cursor={\"pointer\"}\r\n              display={\"flex\"}\r\n              alignItems={\"center\"}\r\n              justifyContent={\"center\"}\r\n              onClick={() => {\r\n                setShowLogout(!showLogout);\r\n              }}\r\n            >\r\n              {userName[0].toUpperCase()}\r\n            </Text>\r\n          )}\r\n        </Box>\r\n        <Box display={\"flex\"} gap={\"10px\"}>\r\n          {!token && (\r\n            <NavLink\r\n              className=\"navContent\"\r\n              style={{ marginLeft: \"0px\" }}\r\n              to=\"/signup\"\r\n            >\r\n              <Button\r\n                marginLeft={\"30px\"}\r\n                backgroundColor={\"#28a4de\"}\r\n                color={\"white\"}\r\n                fontWeight={\"500\"}\r\n              >\r\n                Sign Up\r\n              </Button>\r\n            </NavLink>\r\n          )}\r\n\r\n          {showLogout && (\r\n            <Box\r\n              boxShadow={\r\n                \" rgba(50, 50, 93, 0.25) 0px 6px 12px -2px, rgba(0, 0, 0, 0.3) 0px 3px 7px -3px\"\r\n              }\r\n              position={\"absolute\"}\r\n              top={\"75px\"}\r\n              right={\"20px\"}\r\n              padding={\"10px 40px\"}\r\n              backgroundColor={\"white\"}\r\n            >\r\n              <Text fontSize={\"15px\"}>{email}</Text>\r\n              <Box\r\n                display={\"flex\"}\r\n                alignItems={\"center\"}\r\n                gap={\"10px\"}\r\n                fontSize={\"20px\"}\r\n                cursor={\"pointer\"}\r\n                onClick={handleLogout}\r\n              >\r\n                <Text>Logout</Text>\r\n                <IoMdLogOut color=\"red\" />\r\n              </Box>\r\n            </Box>\r\n          )}\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* responsive navbar  */}\r\n      <Box\r\n        display={{\r\n          base: \"flex\",\r\n          lg: \"none\",\r\n        }}\r\n        justifyContent={\"space-between\"}\r\n        // backgroundColor={\"#27395F\"}\r\n        color={\"#28a4de\"}\r\n        marginBottom={\"50px\"}\r\n        marginTop={\"10px\"}\r\n        boxShadow={\"rgba(17, 17, 26, 0.1) 0px 1px 0px\"}\r\n      >\r\n        <Image src={logoImg} width={\"180px\"}></Image>\r\n        <Box className=\"ThreeLines\" cursor={\"pointer\"}>\r\n          <VscThreeBars\r\n            style={{ height: \"40px\", width: \"30px\" }}\r\n            onClick={() => {\r\n              onToggle();\r\n              isOpen;\r\n            }}\r\n          />\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* navbar Drawer/responsive code  */}\r\n      <Drawer isOpen={isOpen} placement=\"right\" onClose={() => {}}>\r\n        <DrawerOverlay />\r\n        <DrawerContent>\r\n          <DrawerCloseButton onClick={onClose} />\r\n\r\n          <DrawerBody>\r\n            <Box display={\"grid\"} gap={\"15px\"} fontSize={\"20px\"}>\r\n              <Text fontSize={\"14px\"} textDecoration={\"underline\"}>{email}</Text>\r\n              <NavLink className={\"nav-link\"} to=\"/\" onClick={onClose}>\r\n                Home\r\n              </NavLink>\r\n              <Box display={\"flex\"}>\r\n                <NavLink to=\"/posts\" className={\"nav-link\"}>\r\n                  Posts\r\n                </NavLink>{\" \"}\r\n                {/* <ChevronDownIcon\r\n                  style={{\r\n                    position: \"relative\",\r\n                    top: \"5px\",\r\n                    marginLeft: \"10px\",\r\n                  }}\r\n                /> */}\r\n              </Box>\r\n              <Box display={\"flex\"}>\r\n                <NavLink to=\"/course\" className={\"nav-link\"}>\r\n                  Course\r\n                </NavLink>{\" \"}\r\n                {/* <ChevronDownIcon\r\n                  style={{\r\n                    position: \"relative\",\r\n                    top: \"5px\",\r\n                    marginLeft: \"5px\",\r\n                  }}\r\n                /> */}\r\n              </Box>\r\n              {token && <NavLink to=\"/mycourse\" onClick={onClose} className={\"nav-link\"}>\r\n                My Course\r\n              </NavLink>}\r\n              <NavLink to=\"/free\" onClick={onClose} className={\"nav-link\"}>\r\n                Free Resources\r\n              </NavLink>\r\n              {token ? (\r\n                <Text onClick={handleLogout} className={\"nav-link\"}>\r\n                  Logout\r\n                </Text>\r\n              ) : (\r\n                <NavLink to=\"/login\" onClick={onClose} className={\"nav-link\"}>\r\n                  Login\r\n                </NavLink>\r\n              )}\r\n\r\n              <NavLink to=\"/signup\" onClick={onClose} className={\"nav-link\"}>\r\n                Sign Up\r\n              </NavLink>\r\n            </Box>\r\n          </DrawerBody>\r\n\r\n          <DrawerFooter>\r\n            <Button variant=\"outline\" mr={3} onClick={onClose}>\r\n              Cancel\r\n            </Button>\r\n          </DrawerFooter>\r\n        </DrawerContent>\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\nexport default Navbar;","import type { AlertStatus } from \"@chakra-ui/alert\"\nimport { StyleProps, ThemingProps, useChakra } from \"@chakra-ui/system\"\nimport type { RenderProps, ToastId, ToastOptions } from \"./toast.types\"\nimport { createToastFn, CreateToastFnReturn } from \"./toast\"\nimport { ToastPosition } from \"./toast.placement\"\nimport { useMemo } from \"react\"\nimport { useToastOptionContext } from \"./toast.provider\"\n\nexport interface UseToastOptions extends ThemingProps<\"Alert\"> {\n  /**\n   * The placement of the toast\n   *\n   * @default \"bottom\"\n   */\n  position?: ToastPosition\n  /**\n   * The delay before the toast hides (in milliseconds)\n   * If set to `null`, toast will never dismiss.\n   *\n   * @default 5000 ( = 5000ms )\n   */\n  duration?: ToastOptions[\"duration\"]\n  /**\n   * Render a component toast component.\n   * Any component passed will receive 2 props: `id` and `onClose`.\n   */\n  render?(props: RenderProps): React.ReactNode\n  /**\n   * The title of the toast\n   */\n  title?: React.ReactNode\n  /**\n   * The description of the toast\n   */\n  description?: React.ReactNode\n  /**\n   * If `true`, toast will show a close button\n   * @default false\n   */\n  isClosable?: boolean\n  /**\n   * The status of the toast.\n   */\n  status?: AlertStatus\n  /**\n   * A custom icon that will be displayed by the toast.\n   */\n  icon?: React.ReactNode\n  /**\n   * The `id` of the toast.\n   *\n   * Mostly used when you need to prevent duplicate.\n   * By default, we generate a unique `id` for each toast\n   */\n  id?: ToastId\n  /**\n   * Callback function to run side effects after the toast has closed.\n   */\n  onCloseComplete?: () => void\n  /**\n   * Optional style overrides for the container wrapping the toast component.\n   */\n  containerStyle?: StyleProps\n}\n\n/**\n * React hook used to create a function that can be used\n * to show toasts in an application.\n */\nexport function useToast(options?: UseToastOptions): CreateToastFnReturn {\n  const { theme } = useChakra()\n  const defaultOptions = useToastOptionContext()\n\n  return useMemo(\n    () =>\n      createToastFn(theme.direction, {\n        ...defaultOptions,\n        ...options,\n      }),\n    [options, theme.direction, defaultOptions],\n  )\n}\n\nexport default useToast\n"],"names":["baseUrl","navigate","useNavigate","showPass","setShowPass","useState","userData","setUserData","toast","useToast","inputStyle","border","marginBottom","outline","padding","width","fontSize","borderRadius","color","handleInput","event","name","target","value","_jsxs","_Fragment","children","_jsx","Navbar","Text","textAlign","base","lg","marginLeft","cursor","display","md","fontFamily","AiOutlineLeft","style","position","top","Link","to","Box","margin","boxShadow","fontWeight","onSubmit","preventDefault","reset","async","_loginData$data","loginData","axios","post","concat","status","data","msg","title","description","duration","isClosable","obj","token","userName","email","localStorage","setItem","JSON","stringify","error","loginPostUser","htmlFor","alignItems","placeholder","onChange","type","paddingBottom","textDecoration","backgroundColor","marginTop","right","AiFillEye","onClick","AiFillEyeInvisible","_JSON$parse","_JSON$parse2","_JSON$parse3","isOpen","onClose","onToggle","useDisclosure","showPostDropdown","setShowPostDropdown","showCourseDropdown","setShowCourseDropdown","courseData","setCourseData","postData","setPostData","isHovered","setIsHovered","showLogout","setShowLogout","setToken","parse","getItem","setUserName","setEmail","handleLogout","window","confirm","useEffect","dataPost","get","uniquePosts","Array","from","Map","map","category","values","err","alert","getPostData","dataCourse","getCourseData","className","gridTemplateColumns","height","zIndex","paddingRight","NavLink","Image","src","logoImg","justifyContent","onMouseEnter","handlePostMouseEnter","onMouseLeave","handlePostMouseLeave","ChevronDownIcon","flexDirection","ele","index","_id","handleCourseMouseEnter","handleCourseMouseLeave","h","ml","toUpperCase","gap","Button","IoMdLogOut","VscThreeBars","Drawer","placement","DrawerOverlay","DrawerContent","DrawerCloseButton","DrawerBody","DrawerFooter","variant","mr","options","theme","useChakra","defaultOptions","useToastOptionContext","useMemo","createToastFn","direction"],"sourceRoot":""}