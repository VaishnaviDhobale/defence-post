{"version":3,"file":"static/js/890.d97a93d7.chunk.js","mappings":"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","sources":["BaseUrl.jsx","Pages/ViewFreeData.jsx","components/Navbar.jsx"],"sourcesContent":["\r\n\r\nexport const baseUrl = \"https://backend.defencepost.in\"\r\n// export const baseUrl = \"http://localhost:8000\"","import { useEffect, useState } from \"react\";\r\n\r\nimport axios from \"axios\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { AiOutlineFilePdf } from \"react-icons/ai\";\r\nimport { Box, Text } from \"@chakra-ui/react\";\r\nimport { Spinar } from \"../components/Spinar\";\r\nimport { baseUrl } from \"../BaseUrl\";\r\nimport Navbar from \"../components/Navbar\";\r\n\r\nfunction ViewFreeData() {\r\n  let [freeData, setFreeData] = useState({});\r\n  let [isLoading, setIsLoading] = useState(false);\r\n\r\n  let id = useParams().freeDataId;\r\n  // console.log(id)\r\n  async function getSingleFreeData() {\r\n    try {\r\n      setIsLoading(true);\r\n      let data = await axios.get(`${baseUrl}/free/${id}`);\r\n      //   console.log(data?.data)\r\n      setFreeData(data?.data);\r\n      setIsLoading(false);\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      alert(err);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    getSingleFreeData();\r\n  }, []);\r\n\r\n  console.log(freeData.freePdfName);\r\n  if (isLoading) {\r\n    return (\r\n      <>\r\n        <Spinar />\r\n      </>\r\n    );\r\n  }\r\n  return <>\r\n  <Navbar />\r\n    <Box mt={{base : \"-30px\",sm: \"100px\"}}>\r\n      {freeData?.freePdf?.map((ele, index) => {\r\n        return (\r\n          <Box>\r\n            <Box\r\n              display={\"flex\"}\r\n              gap={\"20px\"}\r\n              alignItems={\"center\"}\r\n              marginBottom={\"20px\"}\r\n              fontFamily={\"Barlow\"}\r\n            >\r\n              <AiOutlineFilePdf\r\n                style={{ color: \"red\", fontSize: \"40px\", marginLeft: \"20px\" }}\r\n              />\r\n\r\n              <Link to={ele} target=\"_blank\" style={{ fontSize: \"20px\" }}>\r\n                {freeData.freePdfName[index]}\r\n              </Link>\r\n              <Text\r\n                fontSize={\"15px\"}\r\n                textAlign={\"right\"}\r\n                position={\"absolute\"}\r\n                right={\"0px\"}\r\n                color={\"white\"}\r\n                fontWeight={\"bold\"}\r\n                backgroundColor={\"green\"}\r\n                padding={\"2px 10px\"}\r\n                borderRadius={\"10px\"}\r\n                mr={\"20px\"}\r\n              >\r\n                Free\r\n              </Text>\r\n            </Box>\r\n            <hr style={{ border: \"1px solid gray.400\", margin: \"20px 0px\" }} />\r\n          </Box>\r\n        );\r\n      })}\r\n    </Box>\r\n    </>\r\n}\r\n\r\nexport default ViewFreeData;\r\n","import { NavLink, useNavigate } from \"react-router-dom\";\r\nimport { Box, Image, Select, Input, Button, Text } from \"@chakra-ui/react\";\r\nimport logoImg from \"../Images/Logo-black.jpeg\";\r\n// import { VscThreeBars } from \"react-icons/vsc\";\r\nimport { IoReorderThreeOutline } from \"react-icons/io5\";\r\nimport { ChevronDownIcon } from \"@chakra-ui/icons\";\r\nimport { IoMdLogOut } from \"react-icons/io\";\r\nimport \"../css/navbar.css\";\r\nimport \"animate.css/animate.min.css\";\r\nimport { VscThreeBars } from \"react-icons/vsc\";\r\n\r\n// import for Drawer\r\nimport {\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerFooter,\r\n  DrawerHeader,\r\n  DrawerOverlay,\r\n  DrawerContent,\r\n  DrawerCloseButton,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { AlertBox } from \"./AlertBox\";\r\nimport { baseUrl } from \"../BaseUrl\";\r\n\r\n// import \"../css/navbar.css\";\r\n function Navbar() {\r\nconst navigate = useNavigate();\r\n  const { isOpen, onClose, onToggle } = useDisclosure();\r\n  const [showPostDropdown, setShowPostDropdown] = useState(false);\r\n  const [showCourseDropdown, setShowCourseDropdown] = useState(false);\r\n  const [courseData, setCourseData] = useState([]);\r\n  const [postData, setPostData] = useState([]);\r\n  const [isHovered, setIsHovered] = useState(true);\r\n\r\n  // logout\r\n  let [showLogout, setShowLogout] = useState(false);\r\n  let [token, setToken] = useState(\r\n    JSON.parse(localStorage.getItem(\"DefencePostUserDetails\"))?.token\r\n  );\r\n  let [userName, setUserName] = useState(\r\n    JSON.parse(localStorage.getItem(\"DefencePostUserDetails\"))?.userName\r\n  );\r\n  let [email, setEmail] = useState(\r\n    JSON.parse(localStorage.getItem(\"DefencePostUserDetails\"))?.email\r\n  );\r\n\r\n\r\n  const handlePostMouseEnter = () => {\r\n    setShowPostDropdown(true);\r\n  };\r\n\r\n  const handlePostMouseLeave = () => {\r\n    setShowPostDropdown(false);\r\n  };\r\n\r\n  // Course dropdown handle\r\n  const handleCourseMouseEnter = () => {\r\n    setShowCourseDropdown(true);\r\n  };\r\n\r\n  const handleCourseMouseLeave = () => {\r\n    setShowCourseDropdown(false);\r\n  };\r\n\r\n  // get all course data\r\n  let getCourseData = async () => {\r\n    try {\r\n      let dataCourse = await axios.get(`${baseUrl}/course/`);\r\n      setCourseData(dataCourse.data);\r\n    } catch (err) {\r\n      alert(err);\r\n    }\r\n  };\r\n\r\n  // get all course data\r\n  let getPostData = async () => {\r\n    try {\r\n      let dataPost = await axios.get(`${baseUrl}/post/`);\r\n      \r\n      // Extract unique categories using Set\r\n      const uniquePosts = Array.from(new Map(dataPost.data.map(post => [post.category, post])).values());\r\n  \r\n      // Set the unique categories in your state or wherever needed\r\n      setPostData(uniquePosts);\r\n    } catch (err) {\r\n      alert(err);\r\n    }\r\n  };\r\n  \r\n\r\n  // handle logout\r\n  let handleLogout = () => {\r\n    const userResponse = window.confirm(\"Are you sure you want to logout?\");\r\n    let obj = { token: null, userName: null, email: null };\r\n    if (userResponse) {\r\n      localStorage.setItem(\"DefencePostUserDetails\", JSON.stringify(obj));\r\n      navigate(\"/\")\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPostData();\r\n    getCourseData();\r\n  }, []);\r\n\r\n  \r\n  // console.log(postData);\r\n  return (\r\n    <>\r\n      <Box\r\n        className=\"header\"\r\n        display={{\r\n          base: \"none\",\r\n          lg: \"grid\",\r\n        }}\r\n        gridTemplateColumns={token ? \"30% 1fr\" : \"30% 1fr 10%\"}\r\n        alignItems={\"center\"}\r\n        backgroundColor={\"white\"}\r\n        color={\"black\"}\r\n        boxShadow={\r\n          \"rgba(0, 0, 0, 0.1) 0px 4px 6px -1px, rgba(0, 0, 0, 0.06) 0px 2px 4px -1px\"\r\n        }\r\n        fontFamily={\"Barlow\"}\r\n        height={\"70px\"}\r\n        position={\"fixed\"} //pehele sticky than mene ye add kiya he\r\n        width={\"100%\"} // isko add kiya he\r\n        top={\"0px\"}\r\n        marginBottom={\"50px\"}\r\n        zIndex={1000}\r\n        paddingRight={\"30px\"}\r\n        // mb={\"740px\"}\r\n      >\r\n        <NavLink className=\"logo nav-link\" to={\"/\"}>\r\n          <Image src={logoImg} width={\"200px\"} height={\"100%\"}></Image>\r\n        </NavLink>\r\n\r\n        <Box\r\n          className=\"nav\"\r\n          display={\"flex\"}\r\n          justifyContent={\"flex-end\"}\r\n          fontSize={\"18px\"}\r\n          alignItems={\"center\"}\r\n        >\r\n          <NavLink className=\"navContent nav-link\" to=\"/\">\r\n            Home\r\n          </NavLink>\r\n          <Box\r\n            display={\"flex\"}\r\n            className=\"navContent\"\r\n            // border={\"1px solid red\"}\r\n            // paddingBottom={\"2px\"}\r\n            onMouseEnter={handlePostMouseEnter}\r\n            onMouseLeave={handlePostMouseLeave}\r\n          >\r\n            <NavLink className=\"nav-link\" to=\"/posts\">\r\n              Posts\r\n            </NavLink>{\" \"}\r\n            <ChevronDownIcon\r\n              style={{ position: \"relative\", top: \"5px\", marginLeft: \"5px\" }}\r\n            />\r\n            {showPostDropdown && (\r\n              <Box\r\n                className={`dropdown ${\r\n                  isHovered ? \"animate_animated animate_zoomIn\" : \"\"\r\n                }`}\r\n                position={\"absolute\"}\r\n                top={\"45px\"}\r\n                display={\"flex\"}\r\n                flexDirection={\"column\"}\r\n                backgroundColor={\"white\"}\r\n                textAlign={\"left\"}\r\n                boxShadow=\"rgba(0, 0, 0, 0.16) 0px 1px 4px\"\r\n                padding={\"10px 20px\"}\r\n                borderRadius={\"10px\"}\r\n              >\r\n                {postData.map((ele, index) => {\r\n                  return (\r\n                    <NavLink to={`/singlepostpage/${ele._id}/${index}/${ele.category}`}>\r\n                      {ele.category}\r\n                    </NavLink>\r\n                  );\r\n                })}\r\n              </Box>\r\n            )}\r\n          </Box>\r\n\r\n          <Box\r\n            display={\"flex\"}\r\n            className=\"navContent\"\r\n            onMouseEnter={handleCourseMouseEnter}\r\n            onMouseLeave={handleCourseMouseLeave}\r\n          >\r\n            <NavLink to=\"/course\" className={\"nav-link\"}>\r\n              Course\r\n            </NavLink>{\" \"}\r\n            <ChevronDownIcon\r\n              style={{ position: \"relative\", top: \"5px\", marginLeft: \"5px\" }}\r\n            />\r\n            {showCourseDropdown && (\r\n              <Box\r\n                className={`dropdown ${\r\n                  isHovered ? \"animate_animated animate_zoomIn\" : \"\"\r\n                }`}\r\n                position={\"absolute\"}\r\n                top={\"45px\"}\r\n                display={\"flex\"}\r\n                flexDirection={\"column\"}\r\n                backgroundColor={\"white\"}\r\n                textAlign={\"left\"}\r\n                padding={\"10px 20px\"}\r\n                borderRadius={\"10px\"}\r\n                boxShadow=\"rgba(0, 0, 0, 0.16) 0px 1px 4px\"\r\n              >\r\n                {showCourseDropdown &&\r\n                  courseData.map((ele, index) => {\r\n                    return (\r\n                      <NavLink\r\n                        to={`/viewdetails/${ele._id}`}\r\n                        className={\"nav-link\"}\r\n                      >\r\n                        {ele.name}\r\n                      </NavLink>\r\n                    );\r\n                  })}\r\n              </Box>\r\n            )}\r\n          </Box>\r\n          {token && (\r\n            <NavLink className=\"navContent nav-link\" to=\"/mycourse\">\r\n              My Course\r\n            </NavLink>\r\n          )}\r\n\r\n          <NavLink className=\"navContent nav-link\" to=\"/free\">\r\n            Free\r\n          </NavLink>\r\n\r\n          {/* Data */}\r\n          {email == \"masaieducation17@gmail.com\" && (\r\n            <NavLink className=\"navContent nav-link\" to={\"/datahub\"}>\r\n              DataHub\r\n            </NavLink>\r\n          )}\r\n\r\n          {!token && (\r\n            <NavLink className=\"navContent nav-link\" to=\"/login\">\r\n              Login\r\n            </NavLink>\r\n          )}\r\n          {token && (\r\n            <Text\r\n              backgroundColor={\"green.300\"}\r\n              borderRadius={\"50%\"}\r\n              width={\"40px\"}\r\n              h={\"40px\"}\r\n              // marginRight={\"20px\"}\r\n              color={\"white\"}\r\n              ml={\"20px\"}\r\n              cursor={\"pointer\"}\r\n              display={\"flex\"}\r\n              alignItems={\"center\"}\r\n              justifyContent={\"center\"}\r\n              onClick={() => {\r\n                setShowLogout(!showLogout);\r\n              }}\r\n            >\r\n              {userName[0].toUpperCase()}\r\n            </Text>\r\n          )}\r\n        </Box>\r\n        <Box display={\"flex\"} gap={\"10px\"}>\r\n          {!token && (\r\n            <NavLink\r\n              className=\"navContent\"\r\n              style={{ marginLeft: \"0px\" }}\r\n              to=\"/signup\"\r\n            >\r\n              <Button\r\n                marginLeft={\"30px\"}\r\n                backgroundColor={\"#28a4de\"}\r\n                color={\"white\"}\r\n                fontWeight={\"500\"}\r\n              >\r\n                Sign Up\r\n              </Button>\r\n            </NavLink>\r\n          )}\r\n\r\n          {showLogout && (\r\n            <Box\r\n              boxShadow={\r\n                \" rgba(50, 50, 93, 0.25) 0px 6px 12px -2px, rgba(0, 0, 0, 0.3) 0px 3px 7px -3px\"\r\n              }\r\n              position={\"absolute\"}\r\n              top={\"75px\"}\r\n              right={\"20px\"}\r\n              padding={\"10px 40px\"}\r\n              backgroundColor={\"white\"}\r\n            >\r\n              <Text fontSize={\"15px\"}>{email}</Text>\r\n              <Box\r\n                display={\"flex\"}\r\n                alignItems={\"center\"}\r\n                gap={\"10px\"}\r\n                fontSize={\"20px\"}\r\n                cursor={\"pointer\"}\r\n                onClick={handleLogout}\r\n              >\r\n                <Text>Logout</Text>\r\n                <IoMdLogOut color=\"red\" />\r\n              </Box>\r\n            </Box>\r\n          )}\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* responsive navbar  */}\r\n      <Box\r\n        display={{\r\n          base: \"flex\",\r\n          lg: \"none\",\r\n        }}\r\n        justifyContent={\"space-between\"}\r\n        // backgroundColor={\"#27395F\"}\r\n        color={\"#28a4de\"}\r\n        marginBottom={\"50px\"}\r\n        marginTop={\"10px\"}\r\n        boxShadow={\"rgba(17, 17, 26, 0.1) 0px 1px 0px\"}\r\n      >\r\n        <Image src={logoImg} width={\"180px\"}></Image>\r\n        <Box className=\"ThreeLines\" cursor={\"pointer\"}>\r\n          <VscThreeBars\r\n            style={{ height: \"40px\", width: \"30px\" }}\r\n            onClick={() => {\r\n              onToggle();\r\n              isOpen;\r\n            }}\r\n          />\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* navbar Drawer/responsive code  */}\r\n      <Drawer isOpen={isOpen} placement=\"right\" onClose={() => {}}>\r\n        <DrawerOverlay />\r\n        <DrawerContent>\r\n          <DrawerCloseButton onClick={onClose} />\r\n\r\n          <DrawerBody>\r\n            <Box display={\"grid\"} gap={\"15px\"} fontSize={\"20px\"}>\r\n              <Text fontSize={\"14px\"} textDecoration={\"underline\"}>{email}</Text>\r\n              <NavLink className={\"nav-link\"} to=\"/\" onClick={onClose}>\r\n                Home\r\n              </NavLink>\r\n              <Box display={\"flex\"}>\r\n                <NavLink to=\"/posts\" className={\"nav-link\"}>\r\n                  Posts\r\n                </NavLink>{\" \"}\r\n                {/* <ChevronDownIcon\r\n                  style={{\r\n                    position: \"relative\",\r\n                    top: \"5px\",\r\n                    marginLeft: \"10px\",\r\n                  }}\r\n                /> */}\r\n              </Box>\r\n              <Box display={\"flex\"}>\r\n                <NavLink to=\"/course\" className={\"nav-link\"}>\r\n                  Course\r\n                </NavLink>{\" \"}\r\n                {/* <ChevronDownIcon\r\n                  style={{\r\n                    position: \"relative\",\r\n                    top: \"5px\",\r\n                    marginLeft: \"5px\",\r\n                  }}\r\n                /> */}\r\n              </Box>\r\n              {token && <NavLink to=\"/mycourse\" onClick={onClose} className={\"nav-link\"}>\r\n                My Course\r\n              </NavLink>}\r\n              <NavLink to=\"/free\" onClick={onClose} className={\"nav-link\"}>\r\n                Free Resources\r\n              </NavLink>\r\n              {token ? (\r\n                <Text onClick={handleLogout} className={\"nav-link\"}>\r\n                  Logout\r\n                </Text>\r\n              ) : (\r\n                <NavLink to=\"/login\" onClick={onClose} className={\"nav-link\"}>\r\n                  Login\r\n                </NavLink>\r\n              )}\r\n\r\n              <NavLink to=\"/signup\" onClick={onClose} className={\"nav-link\"}>\r\n                Sign Up\r\n              </NavLink>\r\n            </Box>\r\n          </DrawerBody>\r\n\r\n          <DrawerFooter>\r\n            <Button variant=\"outline\" mr={3} onClick={onClose}>\r\n              Cancel\r\n            </Button>\r\n          </DrawerFooter>\r\n        </DrawerContent>\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\nexport default Navbar;"],"names":["baseUrl","_freeData$freePdf","freeData","setFreeData","useState","isLoading","setIsLoading","id","useParams","freeDataId","useEffect","async","data","axios","get","concat","err","alert","getSingleFreeData","console","log","freePdfName","_jsx","_Fragment","children","Spinar","_jsxs","Navbar","Box","mt","base","sm","freePdf","map","ele","index","display","gap","alignItems","marginBottom","fontFamily","AiOutlineFilePdf","style","color","fontSize","marginLeft","Link","to","target","Text","textAlign","position","right","fontWeight","backgroundColor","padding","borderRadius","mr","border","margin","_JSON$parse","_JSON$parse2","_JSON$parse3","navigate","useNavigate","isOpen","onClose","onToggle","useDisclosure","showPostDropdown","setShowPostDropdown","showCourseDropdown","setShowCourseDropdown","courseData","setCourseData","postData","setPostData","isHovered","setIsHovered","showLogout","setShowLogout","token","setToken","JSON","parse","localStorage","getItem","userName","setUserName","email","setEmail","handleLogout","obj","window","confirm","setItem","stringify","dataPost","uniquePosts","Array","from","Map","post","category","values","getPostData","dataCourse","getCourseData","className","lg","gridTemplateColumns","boxShadow","height","width","top","zIndex","paddingRight","NavLink","Image","src","logoImg","justifyContent","onMouseEnter","handlePostMouseEnter","onMouseLeave","handlePostMouseLeave","ChevronDownIcon","flexDirection","_id","handleCourseMouseEnter","handleCourseMouseLeave","name","h","ml","cursor","onClick","toUpperCase","Button","IoMdLogOut","marginTop","VscThreeBars","Drawer","placement","DrawerOverlay","DrawerContent","DrawerCloseButton","DrawerBody","textDecoration","DrawerFooter","variant"],"sourceRoot":""}