{"version":3,"file":"static/js/936.68d41516.chunk.js","mappings":"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","sources":["BaseUrl.jsx","Pages/Data.jsx","components/Navbar.jsx"],"sourcesContent":["\r\n\r\nexport const baseUrl = \"https://backend.defencepost.in\"\r\n// export const baseUrl = \"http://localhost:8000\"","import { Box, Text } from \"@chakra-ui/react\";\r\nimport { Suspense, lazy } from \"react\";\r\nimport { Spinar } from \"../components/Spinar\";\r\nimport Navbar from \"../components/Navbar\";\r\n\r\nconst QuillEditor = lazy(() => import(\"../components/QuillEditor\"));\r\n\r\nfunction Data() {\r\n  return (\r\n    <Box mt={\"70px\"} bg={\"#141925\"} p={\"50px\"}>\r\n      <Suspense fallback={<Spinar />}>\r\n        <Navbar />\r\n        <Text color={\"white\"} fontSize={\"40px\"} fontWeight={\"bold\"}>Welcome, This is <span style={{color : \"teal\"}}>Vaishnavi Dhobale</span></Text>\r\n        <Text mt={\"20px\"} color={\"white\"} fontSize={\"20px\"} fontWeight={\"bold\"}>Full Stack Web Developer (MERN)</Text>\r\n        <Text mt={\"20px\"} color={\"white\"}>A passionate aspiring Full Stack Web Developer Skilled in MERN stack. Developing websites using JavaScript, React, Node, Chakra-UI, MongoDB and having more than 1000+ hours of coding experience in above mentioned skills. Looking forward to opportunities that can bring challenges and learning to leverage.</Text>\r\n      </Suspense>\r\n    </Box>\r\n  );\r\n}\r\nexport default Data;\r\n","import { NavLink, useNavigate } from \"react-router-dom\";\r\nimport { Box, Image, Select, Input, Button, Text } from \"@chakra-ui/react\";\r\nimport logoImg from \"../Images/Logo-black.jpeg\";\r\n// import { VscThreeBars } from \"react-icons/vsc\";\r\nimport { IoReorderThreeOutline } from \"react-icons/io5\";\r\nimport { ChevronDownIcon } from \"@chakra-ui/icons\";\r\nimport { IoMdLogOut } from \"react-icons/io\";\r\nimport \"../css/navbar.css\";\r\nimport \"animate.css/animate.min.css\";\r\nimport { VscThreeBars } from \"react-icons/vsc\";\r\n\r\n// import for Drawer\r\nimport {\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerFooter,\r\n  DrawerHeader,\r\n  DrawerOverlay,\r\n  DrawerContent,\r\n  DrawerCloseButton,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { AlertBox } from \"./AlertBox\";\r\nimport { baseUrl } from \"../BaseUrl\";\r\n\r\n// import \"../css/navbar.css\";\r\n function Navbar() {\r\nconst navigate = useNavigate();\r\n  const { isOpen, onClose, onToggle } = useDisclosure();\r\n  const [showPostDropdown, setShowPostDropdown] = useState(false);\r\n  const [showCourseDropdown, setShowCourseDropdown] = useState(false);\r\n  const [courseData, setCourseData] = useState([]);\r\n  const [postData, setPostData] = useState([]);\r\n  const [isHovered, setIsHovered] = useState(true);\r\n\r\n  // logout\r\n  let [showLogout, setShowLogout] = useState(false);\r\n  let [token, setToken] = useState(\r\n    JSON.parse(localStorage.getItem(\"DefencePostUserDetails\"))?.token\r\n  );\r\n  let [userName, setUserName] = useState(\r\n    JSON.parse(localStorage.getItem(\"DefencePostUserDetails\"))?.userName\r\n  );\r\n  let [email, setEmail] = useState(\r\n    JSON.parse(localStorage.getItem(\"DefencePostUserDetails\"))?.email\r\n  );\r\n\r\n\r\n  const handlePostMouseEnter = () => {\r\n    setShowPostDropdown(true);\r\n  };\r\n\r\n  const handlePostMouseLeave = () => {\r\n    setShowPostDropdown(false);\r\n  };\r\n\r\n  // Course dropdown handle\r\n  const handleCourseMouseEnter = () => {\r\n    setShowCourseDropdown(true);\r\n  };\r\n\r\n  const handleCourseMouseLeave = () => {\r\n    setShowCourseDropdown(false);\r\n  };\r\n\r\n  // get all course data\r\n  let getCourseData = async () => {\r\n    try {\r\n      let dataCourse = await axios.get(`${baseUrl}/course/`);\r\n      setCourseData(dataCourse.data);\r\n    } catch (err) {\r\n      alert(err);\r\n    }\r\n  };\r\n\r\n  // get all course data\r\n  let getPostData = async () => {\r\n    try {\r\n      let dataPost = await axios.get(`${baseUrl}/post/`);\r\n      \r\n      // Extract unique categories using Set\r\n      const uniquePosts = Array.from(new Map(dataPost.data.map(post => [post.category, post])).values());\r\n  \r\n      // Set the unique categories in your state or wherever needed\r\n      setPostData(uniquePosts);\r\n    } catch (err) {\r\n      alert(err);\r\n    }\r\n  };\r\n  \r\n\r\n  // handle logout\r\n  let handleLogout = () => {\r\n    const userResponse = window.confirm(\"Are you sure you want to logout?\");\r\n    let obj = { token: null, userName: null, email: null };\r\n    if (userResponse) {\r\n      localStorage.setItem(\"DefencePostUserDetails\", JSON.stringify(obj));\r\n      navigate(\"/\")\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPostData();\r\n    getCourseData();\r\n  }, []);\r\n\r\n  \r\n  // console.log(postData);\r\n  return (\r\n    <>\r\n      <Box\r\n        className=\"header\"\r\n        display={{\r\n          base: \"none\",\r\n          lg: \"grid\",\r\n        }}\r\n        gridTemplateColumns={token ? \"30% 1fr\" : \"30% 1fr 10%\"}\r\n        alignItems={\"center\"}\r\n        backgroundColor={\"white\"}\r\n        color={\"black\"}\r\n        boxShadow={\r\n          \"rgba(0, 0, 0, 0.1) 0px 4px 6px -1px, rgba(0, 0, 0, 0.06) 0px 2px 4px -1px\"\r\n        }\r\n        fontFamily={\"Barlow\"}\r\n        height={\"70px\"}\r\n        position={\"fixed\"} //pehele sticky than mene ye add kiya he\r\n        width={\"100%\"} // isko add kiya he\r\n        top={\"0px\"}\r\n        marginBottom={\"50px\"}\r\n        zIndex={1000}\r\n        paddingRight={\"30px\"}\r\n        // mb={\"740px\"}\r\n      >\r\n        <NavLink className=\"logo nav-link\" to={\"/\"}>\r\n          <Image src={logoImg} width={\"200px\"} height={\"100%\"}></Image>\r\n        </NavLink>\r\n\r\n        <Box\r\n          className=\"nav\"\r\n          display={\"flex\"}\r\n          justifyContent={\"flex-end\"}\r\n          fontSize={\"18px\"}\r\n          alignItems={\"center\"}\r\n        >\r\n          <NavLink className=\"navContent nav-link\" to=\"/\">\r\n            Home\r\n          </NavLink>\r\n          <Box\r\n            display={\"flex\"}\r\n            className=\"navContent\"\r\n            // border={\"1px solid red\"}\r\n            // paddingBottom={\"2px\"}\r\n            onMouseEnter={handlePostMouseEnter}\r\n            onMouseLeave={handlePostMouseLeave}\r\n          >\r\n            <NavLink className=\"nav-link\" to=\"/posts\">\r\n              Posts\r\n            </NavLink>{\" \"}\r\n            <ChevronDownIcon\r\n              style={{ position: \"relative\", top: \"5px\", marginLeft: \"5px\" }}\r\n            />\r\n            {showPostDropdown && (\r\n              <Box\r\n                className={`dropdown ${\r\n                  isHovered ? \"animate_animated animate_zoomIn\" : \"\"\r\n                }`}\r\n                position={\"absolute\"}\r\n                top={\"45px\"}\r\n                display={\"flex\"}\r\n                flexDirection={\"column\"}\r\n                backgroundColor={\"white\"}\r\n                textAlign={\"left\"}\r\n                boxShadow=\"rgba(0, 0, 0, 0.16) 0px 1px 4px\"\r\n                padding={\"10px 20px\"}\r\n                borderRadius={\"10px\"}\r\n              >\r\n                {postData.map((ele, index) => {\r\n                  return (\r\n                    <NavLink to={`/singlepostpage/${ele._id}/${index}/${ele.category}`}>\r\n                      {ele.category}\r\n                    </NavLink>\r\n                  );\r\n                })}\r\n              </Box>\r\n            )}\r\n          </Box>\r\n\r\n          <Box\r\n            display={\"flex\"}\r\n            className=\"navContent\"\r\n            onMouseEnter={handleCourseMouseEnter}\r\n            onMouseLeave={handleCourseMouseLeave}\r\n          >\r\n            <NavLink to=\"/course\" className={\"nav-link\"}>\r\n              Course\r\n            </NavLink>{\" \"}\r\n            <ChevronDownIcon\r\n              style={{ position: \"relative\", top: \"5px\", marginLeft: \"5px\" }}\r\n            />\r\n            {showCourseDropdown && (\r\n              <Box\r\n                className={`dropdown ${\r\n                  isHovered ? \"animate_animated animate_zoomIn\" : \"\"\r\n                }`}\r\n                position={\"absolute\"}\r\n                top={\"45px\"}\r\n                display={\"flex\"}\r\n                flexDirection={\"column\"}\r\n                backgroundColor={\"white\"}\r\n                textAlign={\"left\"}\r\n                padding={\"10px 20px\"}\r\n                borderRadius={\"10px\"}\r\n                boxShadow=\"rgba(0, 0, 0, 0.16) 0px 1px 4px\"\r\n              >\r\n                {showCourseDropdown &&\r\n                  courseData.map((ele, index) => {\r\n                    return (\r\n                      <NavLink\r\n                        to={`/viewdetails/${ele._id}`}\r\n                        className={\"nav-link\"}\r\n                      >\r\n                        {ele.name}\r\n                      </NavLink>\r\n                    );\r\n                  })}\r\n              </Box>\r\n            )}\r\n          </Box>\r\n          {token && (\r\n            <NavLink className=\"navContent nav-link\" to=\"/mycourse\">\r\n              My Course\r\n            </NavLink>\r\n          )}\r\n\r\n          <NavLink className=\"navContent nav-link\" to=\"/free\">\r\n            Free\r\n          </NavLink>\r\n\r\n          {/* Data */}\r\n          {email == \"masaieducation17@gmail.com\" && (\r\n            <NavLink className=\"navContent nav-link\" to={\"/datahub\"}>\r\n              DataHub\r\n            </NavLink>\r\n          )}\r\n\r\n          {!token && (\r\n            <NavLink className=\"navContent nav-link\" to=\"/login\">\r\n              Login\r\n            </NavLink>\r\n          )}\r\n          {token && (\r\n            <Text\r\n              backgroundColor={\"green.300\"}\r\n              borderRadius={\"50%\"}\r\n              width={\"40px\"}\r\n              h={\"40px\"}\r\n              // marginRight={\"20px\"}\r\n              color={\"white\"}\r\n              ml={\"20px\"}\r\n              cursor={\"pointer\"}\r\n              display={\"flex\"}\r\n              alignItems={\"center\"}\r\n              justifyContent={\"center\"}\r\n              onClick={() => {\r\n                setShowLogout(!showLogout);\r\n              }}\r\n            >\r\n              {userName[0].toUpperCase()}\r\n            </Text>\r\n          )}\r\n        </Box>\r\n        <Box display={\"flex\"} gap={\"10px\"}>\r\n          {!token && (\r\n            <NavLink\r\n              className=\"navContent\"\r\n              style={{ marginLeft: \"0px\" }}\r\n              to=\"/signup\"\r\n            >\r\n              <Button\r\n                marginLeft={\"30px\"}\r\n                backgroundColor={\"#28a4de\"}\r\n                color={\"white\"}\r\n                fontWeight={\"500\"}\r\n              >\r\n                Sign Up\r\n              </Button>\r\n            </NavLink>\r\n          )}\r\n\r\n          {showLogout && (\r\n            <Box\r\n              boxShadow={\r\n                \" rgba(50, 50, 93, 0.25) 0px 6px 12px -2px, rgba(0, 0, 0, 0.3) 0px 3px 7px -3px\"\r\n              }\r\n              position={\"absolute\"}\r\n              top={\"75px\"}\r\n              right={\"20px\"}\r\n              padding={\"10px 40px\"}\r\n              backgroundColor={\"white\"}\r\n            >\r\n              <Text fontSize={\"15px\"}>{email}</Text>\r\n              <Box\r\n                display={\"flex\"}\r\n                alignItems={\"center\"}\r\n                gap={\"10px\"}\r\n                fontSize={\"20px\"}\r\n                cursor={\"pointer\"}\r\n                onClick={handleLogout}\r\n              >\r\n                <Text>Logout</Text>\r\n                <IoMdLogOut color=\"red\" />\r\n              </Box>\r\n            </Box>\r\n          )}\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* responsive navbar  */}\r\n      <Box\r\n        display={{\r\n          base: \"flex\",\r\n          lg: \"none\",\r\n        }}\r\n        justifyContent={\"space-between\"}\r\n        // backgroundColor={\"#27395F\"}\r\n        color={\"#28a4de\"}\r\n        marginBottom={\"50px\"}\r\n        marginTop={\"10px\"}\r\n        boxShadow={\"rgba(17, 17, 26, 0.1) 0px 1px 0px\"}\r\n      >\r\n        <Image src={logoImg} width={\"180px\"}></Image>\r\n        <Box className=\"ThreeLines\" cursor={\"pointer\"}>\r\n          <VscThreeBars\r\n            style={{ height: \"40px\", width: \"30px\" }}\r\n            onClick={() => {\r\n              onToggle();\r\n              isOpen;\r\n            }}\r\n          />\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* navbar Drawer/responsive code  */}\r\n      <Drawer isOpen={isOpen} placement=\"right\" onClose={() => {}}>\r\n        <DrawerOverlay />\r\n        <DrawerContent>\r\n          <DrawerCloseButton onClick={onClose} />\r\n\r\n          <DrawerBody>\r\n            <Box display={\"grid\"} gap={\"15px\"} fontSize={\"20px\"}>\r\n              <Text fontSize={\"14px\"} textDecoration={\"underline\"}>{email}</Text>\r\n              <NavLink className={\"nav-link\"} to=\"/\" onClick={onClose}>\r\n                Home\r\n              </NavLink>\r\n              <Box display={\"flex\"}>\r\n                <NavLink to=\"/posts\" className={\"nav-link\"}>\r\n                  Posts\r\n                </NavLink>{\" \"}\r\n                {/* <ChevronDownIcon\r\n                  style={{\r\n                    position: \"relative\",\r\n                    top: \"5px\",\r\n                    marginLeft: \"10px\",\r\n                  }}\r\n                /> */}\r\n              </Box>\r\n              <Box display={\"flex\"}>\r\n                <NavLink to=\"/course\" className={\"nav-link\"}>\r\n                  Course\r\n                </NavLink>{\" \"}\r\n                {/* <ChevronDownIcon\r\n                  style={{\r\n                    position: \"relative\",\r\n                    top: \"5px\",\r\n                    marginLeft: \"5px\",\r\n                  }}\r\n                /> */}\r\n              </Box>\r\n              {token && <NavLink to=\"/mycourse\" onClick={onClose} className={\"nav-link\"}>\r\n                My Course\r\n              </NavLink>}\r\n              <NavLink to=\"/free\" onClick={onClose} className={\"nav-link\"}>\r\n                Free Resources\r\n              </NavLink>\r\n              {token ? (\r\n                <Text onClick={handleLogout} className={\"nav-link\"}>\r\n                  Logout\r\n                </Text>\r\n              ) : (\r\n                <NavLink to=\"/login\" onClick={onClose} className={\"nav-link\"}>\r\n                  Login\r\n                </NavLink>\r\n              )}\r\n\r\n              <NavLink to=\"/signup\" onClick={onClose} className={\"nav-link\"}>\r\n                Sign Up\r\n              </NavLink>\r\n            </Box>\r\n          </DrawerBody>\r\n\r\n          <DrawerFooter>\r\n            <Button variant=\"outline\" mr={3} onClick={onClose}>\r\n              Cancel\r\n            </Button>\r\n          </DrawerFooter>\r\n        </DrawerContent>\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\nexport default Navbar;"],"names":["baseUrl","_jsx","Box","mt","bg","p","children","_jsxs","Suspense","fallback","Spinar","Navbar","Text","color","fontSize","fontWeight","style","_JSON$parse","_JSON$parse2","_JSON$parse3","navigate","useNavigate","isOpen","onClose","onToggle","useDisclosure","showPostDropdown","setShowPostDropdown","useState","showCourseDropdown","setShowCourseDropdown","courseData","setCourseData","postData","setPostData","isHovered","setIsHovered","showLogout","setShowLogout","token","setToken","JSON","parse","localStorage","getItem","userName","setUserName","email","setEmail","handleLogout","obj","window","confirm","setItem","stringify","useEffect","async","dataPost","axios","get","concat","uniquePosts","Array","from","Map","data","map","post","category","values","err","alert","getPostData","dataCourse","getCourseData","_Fragment","className","display","base","lg","gridTemplateColumns","alignItems","backgroundColor","boxShadow","fontFamily","height","position","width","top","marginBottom","zIndex","paddingRight","NavLink","to","Image","src","logoImg","justifyContent","onMouseEnter","handlePostMouseEnter","onMouseLeave","handlePostMouseLeave","ChevronDownIcon","marginLeft","flexDirection","textAlign","padding","borderRadius","ele","index","_id","handleCourseMouseEnter","handleCourseMouseLeave","name","h","ml","cursor","onClick","toUpperCase","gap","Button","right","IoMdLogOut","marginTop","VscThreeBars","Drawer","placement","DrawerOverlay","DrawerContent","DrawerCloseButton","DrawerBody","textDecoration","DrawerFooter","variant","mr"],"sourceRoot":""}