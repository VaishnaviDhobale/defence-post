{"version":3,"file":"static/js/530.b0f55fcf.chunk.js","mappings":"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","sources":["BaseUrl.jsx","components/PDFSViewer.jsx","Pages/MyCourseDetails.jsx","components/Navbar.jsx","components/PdfViewer.jsx"],"sourcesContent":["\r\n\r\nexport const baseUrl = \"https://backend.defencepost.in\"\r\n// export const baseUrl = \"http://localhost:8000\"","// PDFSViewer.jsx\r\nimport React, { useState } from 'react';\r\nimport { Document, Page } from 'react-pdf';\r\n\r\nconst PDFSViewer = ({ pdf }) => {\r\n    const [numPages, setNumPages] = useState(null);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n\r\n    const onDocumentLoadSuccess = ({ numPages }) => {\r\n        setNumPages(numPages);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Document\r\n                file={pdf} // Replace with the actual path to your PDF file\r\n                onLoadSuccess={onDocumentLoadSuccess}\r\n            >\r\n                <Page pageNumber={pageNumber} />\r\n            </Document>\r\n            <p>\r\n                Page {pageNumber} of {numPages}\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PDFSViewer;\r\n","import axios from \"axios\";\r\n\r\nimport { Link, useParams, useSearchParams } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Box, Text, Button, useToast } from \"@chakra-ui/react\";\r\nimport { FaUnlockAlt } from \"react-icons/fa\";\r\nimport { AiOutlineFilePdf } from \"react-icons/ai\";\r\nimport { FaFolder } from \"react-icons/fa\";\r\nimport { Spinar } from \"../components/Spinar\";\r\nimport { BiHappy, BiSad } from \"react-icons/bi\";\r\nimport Rating from \"react-rating-stars-component\";\r\nimport PdfViewer from \"../components/PdfViewer\";\r\nimport { baseUrl } from \"../BaseUrl\";\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  AccordionButton,\r\n  AccordionPanel,\r\n  AccordionIcon,\r\n} from \"@chakra-ui/react\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport PDFSViewer, { YourPDFComponent } from \"../components/PDFSViewer\";\r\n\r\nfunction MyCourseDetails() {\r\n  const { id, courseId, param } = useParams();\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const token = JSON.parse(\r\n    localStorage.getItem(\"DefencePostUserDetails\")\r\n  )?.token;\r\n  const headers = {\r\n    token: token, // Replace with your actual authorization token\r\n    \"Content-Type\": \"application/json\", // Adjust content type as needed\r\n    // Add any other headers you need\r\n  };\r\n\r\n  let [singleMyCourseData, setSingleMyCourseData] = useState({});\r\n  let [isLoading, setIsLoading] = useState(false);\r\n  let [displayReviewButton, setDisplayReviewButton] = useState(false);\r\n  const [rating, setRating] = useState(0);\r\n  const [reviewData, setReviewData] = useState(\"\");\r\n  // let { courseId } = useParams();\r\n  let toast = useToast();\r\n  const pdfUrl = \"https://www.africau.edu/images/default/sample.pdf\";\r\n  const driveLik =\r\n    \"https://drive.google.com/file/d/1v5smo5mk6VrFMqpQvLvkpq3YR7AGz1Sn/view?usp=sharing\";\r\n\r\n  async function getMyCourseData() {\r\n    try {\r\n      setIsLoading(true);\r\n      let myCourseData = await axios.get(`${baseUrl}/mycourse/${id}`, {\r\n        headers,\r\n      });\r\n      console.log(myCourseData.data.data);\r\n      setSingleMyCourseData(myCourseData?.data?.data);\r\n      setIsLoading(false);\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  let handlePostReview = (e) => {\r\n    e.preventDefault();\r\n    let userName = JSON.parse(\r\n      localStorage.getItem(\"DefencePostUserDetails\")\r\n    )?.userName;\r\n    let email = JSON.parse(\r\n      localStorage.getItem(\"DefencePostUserDetails\")\r\n    )?.email;\r\n\r\n    // console.log(email);\r\n    const currentDate = new Date();\r\n    // Format the date as desired (e.g., \"MM/DD/YYYY HH:MM AM/PM\")\r\n    const formattedDate = `${currentDate?.toLocaleDateString()} ${currentDate?.toLocaleTimeString()}`;\r\n    let userReviewData = {\r\n      name: userName,\r\n      review: reviewData,\r\n      rating,\r\n      date: formattedDate,\r\n      courseId,\r\n      email,\r\n    };\r\n\r\n    let postReviewData = async () => {\r\n      try {\r\n        let reviewData = await axios.post(\r\n          `${baseUrl}/review/add`,\r\n          userReviewData\r\n        );\r\n        if (reviewData.status == 200) {\r\n          toast({\r\n            title: \"Review Added\",\r\n            // description: \"Have a great day\",\r\n            status: \"success\",\r\n            duration: 4000,\r\n            isClosable: true,\r\n            position: \"top\",\r\n          });\r\n          // getReviewData();\r\n\r\n          // Reset form fields\r\n          setRating(0);\r\n          setReviewData(\"\");\r\n\r\n          setDisplayReviewButton(!displayReviewButton);\r\n        } else {\r\n          toast({\r\n            title: \"Something is wrong\",\r\n            status: \"error\",\r\n            duration: 4000,\r\n            isClosable: true,\r\n            position: \"top\",\r\n          });\r\n        }\r\n      } catch (err) {\r\n        alert(err);\r\n      }\r\n    };\r\n\r\n    postReviewData();\r\n  };\r\n\r\n  function extractVideoId(url) {\r\n    if (!url) {\r\n      return null; // Return null or handle the case when the URL is undefined\r\n    }\r\n\r\n    const videoIdMatch = url.match(\r\n      /(?:https?:\\/\\/)?(?:www\\.)?(?:youtube\\.com\\/(?:[^\\/\\n\\s]+\\/\\S+\\/|(?:v|e(?:mbed)?)\\/|\\S*?[?&]v=)|youtu\\.be\\/)([a-zA-Z0-9_-]{11})/\r\n    );\r\n    return videoIdMatch ? videoIdMatch[1] : null;\r\n  }\r\n\r\n  // Function to process each drive link removing last 16 charactor\r\n  function removeLastCharacters(inputString, charactersToRemove) {\r\n    // Check if the inputString is long enough to remove characters\r\n    if (inputString.length <= charactersToRemove) {\r\n      return \"\"; // or handle the case based on your requirements\r\n    }\r\n\r\n    // Use slice to get the substring excluding the last charactersToRemove\r\n    const modifiedString = inputString?.slice(0, -charactersToRemove);\r\n\r\n    return modifiedString;\r\n  }\r\n\r\n  useEffect(() => {\r\n    getMyCourseData();\r\n  }, []);\r\n\r\n  const navigateToRouteWithParams = () => {\r\n    // Build the URL with parameters\r\n    const url = `/destination-route/${param}`;\r\n\r\n    // Use window.location.href to navigate to the new route\r\n    window.location.href = url;\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <>\r\n        <Spinar />\r\n      </>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <Box>\r\n        <Box\r\n          textAlign={\"left\"}\r\n          ml={\"20px \"}\r\n          fontFamily={\"Barlow\"}\r\n          mt={{ base: \"-50px\", sm: \"70px\" }}\r\n        >\r\n          <Accordion allowToggle>\r\n            {singleMyCourseData?.folders?.map((ele, eleIndex) => {\r\n              return (\r\n                <AccordionItem key={eleIndex}>\r\n                  <h2>\r\n                    <AccordionButton>\r\n                      <Box\r\n                        as=\"span\"\r\n                        flex=\"1\"\r\n                        textAlign=\"left\"\r\n                        display={\"flex\"}\r\n                        gap={\"20px\"}\r\n                        alignItems={\"center\"}\r\n                        marginBottom={\"20px\"}\r\n                        position={\"relative\"}\r\n                      >\r\n                        <FaFolder\r\n                          style={{ color: \"#F8D775\", fontSize: \"40px\" }}\r\n                        />\r\n                        <Text fontSize={\"20px\"}> {ele?.name}</Text>\r\n                      </Box>\r\n                      <AccordionIcon />\r\n                    </AccordionButton>\r\n                  </h2>\r\n                  <AccordionPanel pb={4}>\r\n                    {ele?.contents?.map((content, index) => {\r\n                      console.log(content.coursePDF,\"okkkkkkkkkkkkkkkkkkk\")\r\n                      return (\r\n                        <Box\r\n                          display={\"flex\"}\r\n                          gap={\"20px\"}\r\n                          alignItems={\"center\"}\r\n                          marginBottom={\"20px\"}\r\n                          position={\"relative\"}\r\n                          key={index}\r\n                        >\r\n                          <Link\r\n                            style={{ fontSize: \"19px\" }}\r\n                            // to={driveLik.includes(\"drive\") ? `/previewPdf/${encodeURIComponent(\"https://drive.google.com/file/d/1v5smo5mk6VrFMqpQvLvkpq3YR7AGz1Sn/preview\")}`: `/previewPdf/${encodeURIComponent(extractVideoId(singleMyCourseData?.coursePDF[index]))}`}\r\n                            to={content?.coursePDF}\r\n                          >\r\n                            <PDFSViewer pdf = {content.coursePDF}/>\r\n                            <Box\r\n                              display={\"flex\"}\r\n                              justifyContent={\"center\"}\r\n                              alignItems={\"center\"}\r\n                            >\r\n                              <AiOutlineFilePdf\r\n                                style={{\r\n                                  color: \"red\",\r\n                                  fontSize: \"40px\",\r\n                                  marginRight: \"30px\",\r\n                                }}\r\n                              />\r\n                              {content?.coursePDFName}\r\n                            </Box>\r\n                          </Link>\r\n                        </Box>\r\n                      );\r\n                    })}\r\n                  </AccordionPanel>\r\n                </AccordionItem>\r\n              );\r\n            })}\r\n          </Accordion>\r\n        </Box>\r\n        <Box>\r\n          {/* review form  */}\r\n          {displayReviewButton && (\r\n            <Box\r\n              margin={\"auto\"}\r\n              width={{ base: \"100%\", sm: \"100%\", md: \"60%\", lg: \"40%\" }}\r\n              mb={\"0p8x\"}\r\n            >\r\n              <form onSubmit={handlePostReview}>\r\n                {/* Star rating component */}\r\n                <Box\r\n                  textAlign={\"left\"}\r\n                  boxShadow=\"rgba(50, 50, 93, 0.25) 0px 2px 5px -1px, rgba(0, 0, 0, 0.3) 0px 1px 3px -1px\"\r\n                  padding={\"20px\"}\r\n                  backgroundColor={\"#e7e8ea\"}\r\n                  borderRadius={\"10px\"}\r\n                >\r\n                  <Text\r\n                    fontSize={\"20px\"}\r\n                    fontWeight={\"bold\"}\r\n                    marginBottom={\"20px\"}\r\n                  >\r\n                    Give Your Feedback\r\n                  </Text>\r\n                  <Box display={\"flex\"} gap={\"20px\"} alignItems={\"center\"}>\r\n                    <Box>\r\n                      <BiSad fontSize={\"25px\"} style={{ marginLeft: \"3px\" }} />\r\n                      <Text>Poor</Text>\r\n                    </Box>\r\n                    <Box\r\n                      // width={\"250px\"}\r\n                      // m={\"auto\"}\r\n                      display={\"flex\"}\r\n                      alignItems={\"center\"}\r\n                      gap={\"20px\"}\r\n                      // border={\"1px solid red\"}\r\n                    >\r\n                      <Rating\r\n                        count={5} // Number of stars\r\n                        value={rating} // Current rating value\r\n                        onChange={(newRating) => setRating(newRating)} // Handle rating change\r\n                        size={45} // Size of the stars\r\n                        activeColor=\"#daa520\" // Color of the active (filled) stars\r\n                        inactiveColor=\"#c0bebf\" // Color of the inactive (empty) stars\r\n                        fontSize=\"20px\"\r\n                      />\r\n                    </Box>\r\n                    <Box>\r\n                      <BiHappy\r\n                        fontSize={\"25px\"}\r\n                        style={{ marginLeft: \"3px\" }}\r\n                      />\r\n                      <Text>Best</Text>\r\n                    </Box>\r\n                  </Box>\r\n                </Box>\r\n\r\n                {/* textarea  */}\r\n                <Box\r\n                  boxShadow=\"rgba(50, 50, 93, 0.25) 0px 2px 5px -1px, rgba(0, 0, 0, 0.3) 0px 1px 3px -1px\"\r\n                  padding={\"20px\"}\r\n                  borderRadius={\"10px\"}\r\n                  mt={\"15px\"}\r\n                  backgroundColor={\"#e7e8ea\"}\r\n                >\r\n                  <Text\r\n                    fontSize={\"20px\"}\r\n                    fontWeight={\"bold\"}\r\n                    textAlign={\"left\"}\r\n                    // marginBottom={\"20px\"}\r\n                  >\r\n                    Write-Up\r\n                  </Text>\r\n\r\n                  <textarea\r\n                    name=\"\"\r\n                    id=\"\"\r\n                    rows=\"3\"\r\n                    value={reviewData}\r\n                    onChange={(e) => setReviewData(e.target.value)}\r\n                    placeholder=\"Write your review...\"\r\n                    style={{\r\n                      // border: \"1px solid gray\",\r\n                      boxShadow:\r\n                        \"rgba(50, 50, 93, 0.25) 0px 2px 5px -1px, rgba(0, 0, 0, 0.3) 0px 1px 3px -1px\",\r\n                      outline: \"none\",\r\n                      padding: \"20px\",\r\n                      fontSize: \"19px\",\r\n                      width: \"100%\",\r\n                      borderRadius: \"10px\",\r\n                      marginTop: \"10px\",\r\n                    }}\r\n                    required\r\n                  ></textarea>\r\n                </Box>\r\n                <br />\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"Submit Feedback\"\r\n                  style={{\r\n                    padding: \"8px 20px\",\r\n                    backgroundColor: \"#29a4de\",\r\n                    color: \"white\",\r\n                    borderRadius: \"5px\",\r\n                    cursor: \"pointer\",\r\n                    // marginTop: \"10px\",\r\n                    marginBottom: \"50px\",\r\n                  }}\r\n                />\r\n              </form>\r\n            </Box>\r\n          )}\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\nexport default MyCourseDetails;\r\n","import { NavLink, useNavigate } from \"react-router-dom\";\r\nimport { Box, Image, Select, Input, Button, Text } from \"@chakra-ui/react\";\r\nimport logoImg from \"../Images/Logo-black.jpeg\";\r\n// import { VscThreeBars } from \"react-icons/vsc\";\r\nimport { IoReorderThreeOutline } from \"react-icons/io5\";\r\nimport { ChevronDownIcon } from \"@chakra-ui/icons\";\r\nimport { IoMdLogOut } from \"react-icons/io\";\r\nimport \"../css/navbar.css\";\r\nimport \"animate.css/animate.min.css\";\r\nimport { VscThreeBars } from \"react-icons/vsc\";\r\n\r\n// import for Drawer\r\nimport {\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerFooter,\r\n  DrawerHeader,\r\n  DrawerOverlay,\r\n  DrawerContent,\r\n  DrawerCloseButton,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { AlertBox } from \"./AlertBox\";\r\nimport { baseUrl } from \"../BaseUrl\";\r\n\r\n// import \"../css/navbar.css\";\r\n function Navbar() {\r\nconst navigate = useNavigate();\r\n  const { isOpen, onClose, onToggle } = useDisclosure();\r\n  const [showPostDropdown, setShowPostDropdown] = useState(false);\r\n  const [showCourseDropdown, setShowCourseDropdown] = useState(false);\r\n  const [courseData, setCourseData] = useState([]);\r\n  const [postData, setPostData] = useState([]);\r\n  const [isHovered, setIsHovered] = useState(true);\r\n\r\n  // logout\r\n  let [showLogout, setShowLogout] = useState(false);\r\n  let [token, setToken] = useState(\r\n    JSON.parse(localStorage.getItem(\"DefencePostUserDetails\"))?.token\r\n  );\r\n  let [userName, setUserName] = useState(\r\n    JSON.parse(localStorage.getItem(\"DefencePostUserDetails\"))?.userName\r\n  );\r\n  let [email, setEmail] = useState(\r\n    JSON.parse(localStorage.getItem(\"DefencePostUserDetails\"))?.email\r\n  );\r\n\r\n\r\n  const handlePostMouseEnter = () => {\r\n    setShowPostDropdown(true);\r\n  };\r\n\r\n  const handlePostMouseLeave = () => {\r\n    setShowPostDropdown(false);\r\n  };\r\n\r\n  // Course dropdown handle\r\n  const handleCourseMouseEnter = () => {\r\n    setShowCourseDropdown(true);\r\n  };\r\n\r\n  const handleCourseMouseLeave = () => {\r\n    setShowCourseDropdown(false);\r\n  };\r\n\r\n  // get all course data\r\n  let getCourseData = async () => {\r\n    try {\r\n      let dataCourse = await axios.get(`${baseUrl}/course/`);\r\n      setCourseData(dataCourse.data);\r\n    } catch (err) {\r\n      alert(err);\r\n    }\r\n  };\r\n\r\n  // get all course data\r\n  let getPostData = async () => {\r\n    try {\r\n      let dataPost = await axios.get(`${baseUrl}/post/`);\r\n      \r\n      // Extract unique categories using Set\r\n      const uniquePosts = Array.from(new Map(dataPost.data.map(post => [post.category, post])).values());\r\n  \r\n      // Set the unique categories in your state or wherever needed\r\n      setPostData(uniquePosts);\r\n    } catch (err) {\r\n      alert(err);\r\n    }\r\n  };\r\n  \r\n\r\n  // handle logout\r\n  let handleLogout = () => {\r\n    const userResponse = window.confirm(\"Are you sure you want to logout?\");\r\n    let obj = { token: null, userName: null, email: null };\r\n    if (userResponse) {\r\n      localStorage.setItem(\"DefencePostUserDetails\", JSON.stringify(obj));\r\n      navigate(\"/\")\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPostData();\r\n    getCourseData();\r\n  }, []);\r\n\r\n  \r\n  // console.log(postData);\r\n  return (\r\n    <>\r\n      <Box\r\n        className=\"header\"\r\n        display={{\r\n          base: \"none\",\r\n          lg: \"grid\",\r\n        }}\r\n        gridTemplateColumns={token ? \"30% 1fr\" : \"30% 1fr 10%\"}\r\n        alignItems={\"center\"}\r\n        backgroundColor={\"white\"}\r\n        color={\"black\"}\r\n        boxShadow={\r\n          \"rgba(0, 0, 0, 0.1) 0px 4px 6px -1px, rgba(0, 0, 0, 0.06) 0px 2px 4px -1px\"\r\n        }\r\n        fontFamily={\"Barlow\"}\r\n        height={\"70px\"}\r\n        position={\"fixed\"} //pehele sticky than mene ye add kiya he\r\n        width={\"100%\"} // isko add kiya he\r\n        top={\"0px\"}\r\n        marginBottom={\"50px\"}\r\n        zIndex={1000}\r\n        paddingRight={\"30px\"}\r\n        // mb={\"740px\"}\r\n      >\r\n        <NavLink className=\"logo nav-link\" to={\"/\"}>\r\n          <Image src={logoImg} width={\"200px\"} height={\"100%\"}></Image>\r\n        </NavLink>\r\n\r\n        <Box\r\n          className=\"nav\"\r\n          display={\"flex\"}\r\n          justifyContent={\"flex-end\"}\r\n          fontSize={\"18px\"}\r\n          alignItems={\"center\"}\r\n        >\r\n          <NavLink className=\"navContent nav-link\" to=\"/\">\r\n            Home\r\n          </NavLink>\r\n          <Box\r\n            display={\"flex\"}\r\n            className=\"navContent\"\r\n            // border={\"1px solid red\"}\r\n            // paddingBottom={\"2px\"}\r\n            onMouseEnter={handlePostMouseEnter}\r\n            onMouseLeave={handlePostMouseLeave}\r\n          >\r\n            <NavLink className=\"nav-link\" to=\"/posts\">\r\n              Posts\r\n            </NavLink>{\" \"}\r\n            <ChevronDownIcon\r\n              style={{ position: \"relative\", top: \"5px\", marginLeft: \"5px\" }}\r\n            />\r\n            {showPostDropdown && (\r\n              <Box\r\n                className={`dropdown ${\r\n                  isHovered ? \"animate_animated animate_zoomIn\" : \"\"\r\n                }`}\r\n                position={\"absolute\"}\r\n                top={\"45px\"}\r\n                display={\"flex\"}\r\n                flexDirection={\"column\"}\r\n                backgroundColor={\"white\"}\r\n                textAlign={\"left\"}\r\n                boxShadow=\"rgba(0, 0, 0, 0.16) 0px 1px 4px\"\r\n                padding={\"10px 20px\"}\r\n                borderRadius={\"10px\"}\r\n              >\r\n                {postData.map((ele, index) => {\r\n                  return (\r\n                    <NavLink to={`/singlepostpage/${ele._id}/${index}/${ele.category}`}>\r\n                      {ele.category}\r\n                    </NavLink>\r\n                  );\r\n                })}\r\n              </Box>\r\n            )}\r\n          </Box>\r\n\r\n          <Box\r\n            display={\"flex\"}\r\n            className=\"navContent\"\r\n            onMouseEnter={handleCourseMouseEnter}\r\n            onMouseLeave={handleCourseMouseLeave}\r\n          >\r\n            <NavLink to=\"/course\" className={\"nav-link\"}>\r\n              Course\r\n            </NavLink>{\" \"}\r\n            <ChevronDownIcon\r\n              style={{ position: \"relative\", top: \"5px\", marginLeft: \"5px\" }}\r\n            />\r\n            {showCourseDropdown && (\r\n              <Box\r\n                className={`dropdown ${\r\n                  isHovered ? \"animate_animated animate_zoomIn\" : \"\"\r\n                }`}\r\n                position={\"absolute\"}\r\n                top={\"45px\"}\r\n                display={\"flex\"}\r\n                flexDirection={\"column\"}\r\n                backgroundColor={\"white\"}\r\n                textAlign={\"left\"}\r\n                padding={\"10px 20px\"}\r\n                borderRadius={\"10px\"}\r\n                boxShadow=\"rgba(0, 0, 0, 0.16) 0px 1px 4px\"\r\n              >\r\n                {showCourseDropdown &&\r\n                  courseData.map((ele, index) => {\r\n                    return (\r\n                      <NavLink\r\n                        to={`/viewdetails/${ele._id}`}\r\n                        className={\"nav-link\"}\r\n                      >\r\n                        {ele.name}\r\n                      </NavLink>\r\n                    );\r\n                  })}\r\n              </Box>\r\n            )}\r\n          </Box>\r\n          {token && (\r\n            <NavLink className=\"navContent nav-link\" to=\"/mycourse\">\r\n              My Course\r\n            </NavLink>\r\n          )}\r\n\r\n          <NavLink className=\"navContent nav-link\" to=\"/free\">\r\n            Free\r\n          </NavLink>\r\n\r\n          {/* Data */}\r\n          {email == \"masaieducation17@gmail.com\" && (\r\n            <NavLink className=\"navContent nav-link\" to={\"/datahub\"}>\r\n              DataHub\r\n            </NavLink>\r\n          )}\r\n\r\n          {!token && (\r\n            <NavLink className=\"navContent nav-link\" to=\"/login\">\r\n              Login\r\n            </NavLink>\r\n          )}\r\n          {token && (\r\n            <Text\r\n              backgroundColor={\"green.300\"}\r\n              borderRadius={\"50%\"}\r\n              width={\"40px\"}\r\n              h={\"40px\"}\r\n              // marginRight={\"20px\"}\r\n              color={\"white\"}\r\n              ml={\"20px\"}\r\n              cursor={\"pointer\"}\r\n              display={\"flex\"}\r\n              alignItems={\"center\"}\r\n              justifyContent={\"center\"}\r\n              onClick={() => {\r\n                setShowLogout(!showLogout);\r\n              }}\r\n            >\r\n              {userName[0].toUpperCase()}\r\n            </Text>\r\n          )}\r\n        </Box>\r\n        <Box display={\"flex\"} gap={\"10px\"}>\r\n          {!token && (\r\n            <NavLink\r\n              className=\"navContent\"\r\n              style={{ marginLeft: \"0px\" }}\r\n              to=\"/signup\"\r\n            >\r\n              <Button\r\n                marginLeft={\"30px\"}\r\n                backgroundColor={\"#28a4de\"}\r\n                color={\"white\"}\r\n                fontWeight={\"500\"}\r\n              >\r\n                Sign Up\r\n              </Button>\r\n            </NavLink>\r\n          )}\r\n\r\n          {showLogout && (\r\n            <Box\r\n              boxShadow={\r\n                \" rgba(50, 50, 93, 0.25) 0px 6px 12px -2px, rgba(0, 0, 0, 0.3) 0px 3px 7px -3px\"\r\n              }\r\n              position={\"absolute\"}\r\n              top={\"75px\"}\r\n              right={\"20px\"}\r\n              padding={\"10px 40px\"}\r\n              backgroundColor={\"white\"}\r\n            >\r\n              <Text fontSize={\"15px\"}>{email}</Text>\r\n              <Box\r\n                display={\"flex\"}\r\n                alignItems={\"center\"}\r\n                gap={\"10px\"}\r\n                fontSize={\"20px\"}\r\n                cursor={\"pointer\"}\r\n                onClick={handleLogout}\r\n              >\r\n                <Text>Logout</Text>\r\n                <IoMdLogOut color=\"red\" />\r\n              </Box>\r\n            </Box>\r\n          )}\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* responsive navbar  */}\r\n      <Box\r\n        display={{\r\n          base: \"flex\",\r\n          lg: \"none\",\r\n        }}\r\n        justifyContent={\"space-between\"}\r\n        // backgroundColor={\"#27395F\"}\r\n        color={\"#28a4de\"}\r\n        marginBottom={\"50px\"}\r\n        marginTop={\"10px\"}\r\n        boxShadow={\"rgba(17, 17, 26, 0.1) 0px 1px 0px\"}\r\n      >\r\n        <Image src={logoImg} width={\"180px\"}></Image>\r\n        <Box className=\"ThreeLines\" cursor={\"pointer\"}>\r\n          <VscThreeBars\r\n            style={{ height: \"40px\", width: \"30px\" }}\r\n            onClick={() => {\r\n              onToggle();\r\n              isOpen;\r\n            }}\r\n          />\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* navbar Drawer/responsive code  */}\r\n      <Drawer isOpen={isOpen} placement=\"right\" onClose={() => {}}>\r\n        <DrawerOverlay />\r\n        <DrawerContent>\r\n          <DrawerCloseButton onClick={onClose} />\r\n\r\n          <DrawerBody>\r\n            <Box display={\"grid\"} gap={\"15px\"} fontSize={\"20px\"}>\r\n              <Text fontSize={\"14px\"} textDecoration={\"underline\"}>{email}</Text>\r\n              <NavLink className={\"nav-link\"} to=\"/\" onClick={onClose}>\r\n                Home\r\n              </NavLink>\r\n              <Box display={\"flex\"}>\r\n                <NavLink to=\"/posts\" className={\"nav-link\"}>\r\n                  Posts\r\n                </NavLink>{\" \"}\r\n                {/* <ChevronDownIcon\r\n                  style={{\r\n                    position: \"relative\",\r\n                    top: \"5px\",\r\n                    marginLeft: \"10px\",\r\n                  }}\r\n                /> */}\r\n              </Box>\r\n              <Box display={\"flex\"}>\r\n                <NavLink to=\"/course\" className={\"nav-link\"}>\r\n                  Course\r\n                </NavLink>{\" \"}\r\n                {/* <ChevronDownIcon\r\n                  style={{\r\n                    position: \"relative\",\r\n                    top: \"5px\",\r\n                    marginLeft: \"5px\",\r\n                  }}\r\n                /> */}\r\n              </Box>\r\n              {token && <NavLink to=\"/mycourse\" onClick={onClose} className={\"nav-link\"}>\r\n                My Course\r\n              </NavLink>}\r\n              <NavLink to=\"/free\" onClick={onClose} className={\"nav-link\"}>\r\n                Free Resources\r\n              </NavLink>\r\n              {token ? (\r\n                <Text onClick={handleLogout} className={\"nav-link\"}>\r\n                  Logout\r\n                </Text>\r\n              ) : (\r\n                <NavLink to=\"/login\" onClick={onClose} className={\"nav-link\"}>\r\n                  Login\r\n                </NavLink>\r\n              )}\r\n\r\n              <NavLink to=\"/signup\" onClick={onClose} className={\"nav-link\"}>\r\n                Sign Up\r\n              </NavLink>\r\n            </Box>\r\n          </DrawerBody>\r\n\r\n          <DrawerFooter>\r\n            <Button variant=\"outline\" mr={3} onClick={onClose}>\r\n              Cancel\r\n            </Button>\r\n          </DrawerFooter>\r\n        </DrawerContent>\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\nexport default Navbar;","// import React, { useState } from \"react\";\r\n// import { useParams } from \"react-router-dom\";\r\n// import { Navbar } from \"./Navbar\";\r\n// import { Box, Button, Spinner } from \"@chakra-ui/react\";\r\n// import { Spinar } from \"./Spinar\";\r\n// import { YourPDFComponent } from \"./YourPDFComponent\";\r\n\r\n// const PdfViewer = () => {\r\n//   const { link } = useParams();\r\n//   const [isLoading, setIsLoading] = useState(true);\r\n\r\n//   const handleIframeLoad = () => {\r\n//     // This function will be called when the iframe has finished loading\r\n//     setIsLoading(false);\r\n//   };\r\n\r\n//   const handleFullScreen = () => {\r\n//     const iframe = document.getElementById(\"pdfIframe\");\r\n\r\n//     if (iframe) {\r\n//       if (iframe.requestFullscreen) {\r\n//         iframe.requestFullscreen();\r\n//       } else if (iframe.mozRequestFullScreen) {\r\n//         iframe.mozRequestFullScreen();\r\n//       } else if (iframe.webkitRequestFullscreen) {\r\n//         iframe.webkitRequestFullscreen();\r\n//       } else if (iframe.msRequestFullscreen) {\r\n//         iframe.msRequestFullscreen();\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       {/* <Navbar /> */}\r\n//       <Box\r\n//         display={\"flex\"}\r\n//         flexDirection=\"column\"\r\n//         alignItems=\"center\"\r\n//         mt={\"-50px\"}\r\n//         position={\"relative\"}\r\n//       >\r\n//         {isLoading && (\r\n//           <Spinar position=\"absolute\" right=\"0px\" top=\"40px\" color=\"white\" />\r\n//         )}\r\n//         <Button\r\n//           onClick={handleFullScreen}\r\n//           variant=\"outline\"\r\n//           mb={4}\r\n//           position={\"absolute\"}\r\n//           right=\"0px\"\r\n//           top={\"12px\"}\r\n//           color={\"white\"}\r\n//           bg={\"#313131\"}\r\n//           zIndex={1000}\r\n//         >\r\n//           Fullscreen\r\n//         </Button>\r\n//         <iframe\r\n//           id=\"pdfIframe\"\r\n//           title=\"PDF Viewer\"\r\n//           src={\r\n//             link.includes(\"drive\")\r\n//               ? `${decodeURIComponent(link)}`\r\n//               : `https://www.youtube.com/embed/${decodeURIComponent(link)}`\r\n//           }\r\n//           sandbox=\"allow-same-origin allow-scripts allow-popups\"\r\n//           width={\"100%\"}\r\n//           height={\"800px\"}\r\n//           allowFullScreen\r\n//           frameborder=\"0\"\r\n//           onLoad={handleIframeLoad}\r\n//         >\r\n//           iframe\r\n//         </iframe>\r\n//         {/* <YourPDFComponent/> */}\r\n//       </Box>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default PdfViewer;\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams} from \"react-router-dom\";\r\nimport { Box, Button, useQuery } from \"@chakra-ui/react\";\r\nimport { Spinar } from \"./Spinar\";\r\nimport { baseUrl } from \"../BaseUrl\";\r\nimport axios from \"axios\";\r\n\r\nconst PdfViewer = () => {\r\n  const { link } = useParams();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [data, setData] = useState();\r\n  const token = JSON.parse(\r\n    localStorage.getItem(\"DefencePostUserDetails\")\r\n  )?.token;\r\n  const headers = {\r\n    token: token, // Replace with your actual authorization token\r\n    \"Content-Type\": \"application/json\", // Adjust content type as needed\r\n    // Add any other headers you need\r\n  };\r\n\r\n  const handleIframeLoad = () => {\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const getMyCourseData = async() => {\r\n    try {\r\n      setIsLoading(true);\r\n      let myCourseData = await axios.get(`${baseUrl}/file-upload/geturl/${link}`, {\r\n        headers,\r\n      });\r\n      setData(myCourseData?.data);\r\n      setIsLoading(false);\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    getMyCourseData();\r\n  },[])\r\n\r\n  const handleFullScreen = () => {\r\n    const iframe = document.getElementById(\"pdfIframe\");\r\n\r\n    if (iframe) {\r\n      if (iframe.requestFullscreen) {\r\n        iframe.requestFullscreen();\r\n      } else if (iframe.mozRequestFullScreen) {\r\n        iframe.mozRequestFullScreen();\r\n      } else if (iframe.webkitRequestFullscreen) {\r\n        iframe.webkitRequestFullscreen();\r\n      } else if (iframe.msRequestFullscreen) {\r\n        iframe.msRequestFullscreen();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n     \r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        alignItems=\"center\"\r\n        mt=\"-50px\"\r\n        position=\"relative\"\r\n      >\r\n        {isLoading && (\r\n          <Spinar position=\"absolute\" right=\"0px\" top=\"40px\" color=\"white\" />\r\n        )}\r\n        <Button\r\n          onClick={handleFullScreen}\r\n          variant=\"outline\"\r\n          mb={4}\r\n          position=\"absolute\"\r\n          right=\"0px\"\r\n          top=\"12px\"\r\n          color=\"white\"\r\n          bg=\"#313131\"\r\n          zIndex={1000}\r\n        >\r\n          Fullscreen\r\n        </Button>\r\n        {/* \"https://defencepost.s3.amazonaws.com/uploads/2024-01-19T07-06-27_Booklet-1.pdf?AWSAccessKeyId=AKIAVRUVUOIZRIXBVWHZ&Expires=1705655963&Signature=PC46akZJtkHe1l3Hu%2BWlKKOHkSQ%3D\" */}\r\n        <iframe\r\n          title=\"PDF Viewer\"\r\n          src={`https://defencepost.s3.amazonaws.com/${data?.fileName}?AWSAccessKeyId=${data?.accessKeyId}&Expires=${data?.expires}&Signature=${data?.signature}`}\r\n          width=\"100%\"\r\n          height=\"800px\"\r\n          allowFullScreen\r\n          frameborder=\"0\"\r\n          onLoad={handleIframeLoad}\r\n        >\r\n          iframe\r\n        </iframe>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PdfViewer;\r\n"],"names":["baseUrl","_ref","pdf","numPages","setNumPages","useState","pageNumber","setPageNumber","_jsxs","children","_jsx","Document","file","onLoadSuccess","_ref2","Page","_JSON$parse","_singleMyCourseData$f","id","courseId","param","useParams","searchParams","setSearchParams","useSearchParams","headers","token","JSON","parse","localStorage","getItem","singleMyCourseData","setSingleMyCourseData","isLoading","setIsLoading","displayReviewButton","setDisplayReviewButton","rating","setRating","reviewData","setReviewData","toast","useToast","useEffect","async","_myCourseData$data","myCourseData","axios","get","concat","console","log","data","err","getMyCourseData","_Fragment","Spinar","Navbar","Box","textAlign","ml","fontFamily","mt","base","sm","Accordion","allowToggle","folders","map","ele","eleIndex","_ele$contents","AccordionItem","AccordionButton","as","flex","display","gap","alignItems","marginBottom","position","FaFolder","style","color","fontSize","Text","name","AccordionIcon","AccordionPanel","pb","contents","content","index","coursePDF","Link","to","PDFSViewer","justifyContent","AiOutlineFilePdf","marginRight","coursePDFName","margin","width","md","lg","mb","onSubmit","e","_JSON$parse2","_JSON$parse3","preventDefault","userName","email","currentDate","Date","formattedDate","toLocaleDateString","toLocaleTimeString","userReviewData","review","date","post","status","title","duration","isClosable","alert","postReviewData","boxShadow","padding","backgroundColor","borderRadius","fontWeight","BiSad","marginLeft","Rating","count","value","onChange","newRating","size","activeColor","inactiveColor","BiHappy","rows","target","placeholder","outline","marginTop","required","type","cursor","navigate","useNavigate","isOpen","onClose","onToggle","useDisclosure","showPostDropdown","setShowPostDropdown","showCourseDropdown","setShowCourseDropdown","courseData","setCourseData","postData","setPostData","isHovered","setIsHovered","showLogout","setShowLogout","setToken","setUserName","setEmail","handleLogout","obj","window","confirm","setItem","stringify","dataPost","uniquePosts","Array","from","Map","category","values","getPostData","dataCourse","getCourseData","className","gridTemplateColumns","height","top","zIndex","paddingRight","NavLink","Image","src","logoImg","onMouseEnter","handlePostMouseEnter","onMouseLeave","handlePostMouseLeave","ChevronDownIcon","flexDirection","_id","handleCourseMouseEnter","handleCourseMouseLeave","h","onClick","toUpperCase","Button","right","IoMdLogOut","VscThreeBars","Drawer","placement","DrawerOverlay","DrawerContent","DrawerCloseButton","DrawerBody","textDecoration","DrawerFooter","variant","mr","PdfViewer","link","setData","handleFullScreen","iframe","document","getElementById","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","bg","fileName","accessKeyId","expires","signature","allowFullScreen","frameborder","onLoad","handleIframeLoad"],"sourceRoot":""}