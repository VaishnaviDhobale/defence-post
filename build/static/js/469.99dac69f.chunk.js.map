{"version":3,"file":"static/js/469.99dac69f.chunk.js","mappings":"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","sources":["BaseUrl.jsx","Pages/ViewDetails.jsx","components/Navbar.jsx"],"sourcesContent":["\r\n\r\nexport const baseUrl = \"https://backend.defencepost.in\"\r\n// export const baseUrl = \"http://localhost:8000\"","import {\r\n  Box,\r\n  Button,\r\n  Text,\r\n  useToast,\r\n  Image,\r\n  AccordionItem,\r\n  Accordion,\r\n  AccordionButton,\r\n  AccordionIcon,\r\n  AccordionPanel,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\r\nimport Video from \"../components/Video\";\r\nimport { Suspense, lazy, useEffect, useState } from \"react\";\r\nimport { AiOutlineFilePdf } from \"react-icons/ai\";\r\nimport { BiHappy, BiSad, BiSolidLock } from \"react-icons/bi\";\r\nimport pdf from \"../Images/mba.pdf\";\r\nimport axios, { Axios } from \"axios\";\r\nimport Rating from \"react-rating-stars-component\";\r\nimport Img from \"../Images/img.jpg\";\r\nimport { Spinar } from \"../components/Spinar\";\r\nconst CryptoJS = require(\"crypto-js\");\r\nimport { baseUrl } from \"../BaseUrl\";\r\nimport { RxCross2 } from \"react-icons/rx\";\r\nimport { BsCurrencyRupee } from \"react-icons/bs\";\r\nimport { FaFolder, FaLock } from \"react-icons/fa\";\r\nimport Navbar from \"../components/Navbar.jsx\";\r\n\r\nconst ViewPdf = lazy(() => import(\"../components/ViewPdf.jsx\"));\r\nconst ViewReview = lazy(() => import(\"../components/ViewReview\"));\r\n\r\nfunction ViewDetails() {\r\n  let token = JSON.parse(localStorage.getItem(\"DefencePostUserDetails\"))?.token;\r\n  let userName = JSON.parse(\r\n    localStorage.getItem(\"DefencePostUserDetails\")\r\n  )?.userName;\r\n  let email = JSON.parse(localStorage.getItem(\"DefencePostUserDetails\"))?.email;\r\n\r\n  const headers = {\r\n    token: token, // Replace with your actual authorization token\r\n    \"Content-Type\": \"application/json\", // Adjust content type as needed\r\n    // Add any other headers you need\r\n  };\r\n  // css starts\r\n  const inputStyle = {\r\n    border: \"1.5px solid #29a4de\",\r\n    marginBottom: \"20px\",\r\n    outline: \"none\",\r\n    padding: \"10px\",\r\n    width: \"100%\",\r\n    fontSize: \"17.5px\",\r\n    borderRadius: \"10px\",\r\n    color: \"#29a4de\",\r\n  };\r\n\r\n  const button = {\r\n    outline: \"none\",\r\n    padding: \"10px\",\r\n    width: \"100%\",\r\n    backgroundColor: \"#29a4de\",\r\n    cursor: \"pointer\",\r\n    color: \"white\",\r\n    fontSize: \"17.5px\",\r\n  };\r\n  // css ends\r\n  const navigate = useNavigate();\r\n\r\n  let toast = useToast();\r\n\r\n  let [description, setDescription] = useState(true);\r\n  let [preview, setPreview] = useState(false);\r\n  let [review, setReview] = useState(false);\r\n  let [singleCourseData, setSingleCourseData] = useState({});\r\n\r\n  // hide and show add review button\r\n  let [displayReviewButton, setDisplayReviewButton] = useState(false);\r\n\r\n  // rating review\r\n  const [rating, setRating] = useState(0);\r\n  const [reviewData, setReviewData] = useState(\"\");\r\n\r\n  const [allReviewData, setAllReviewData] = useState([]);\r\n\r\n  // coupon\r\n  let [enableCouponFrame, setEnableCouponFrame] = useState(false);\r\n  let [isCoupon, setIsCoupon] = useState(false);\r\n  let [coupon, setCoupon] = useState(\"\");\r\n  let [allCouponData, setAllCouponData] = useState([]);\r\n  let [buy, setBuy] = useState(false);\r\n  let [isLoading, setIsLoading] = useState(false);\r\n\r\n  let isFound = false;\r\n\r\n  let { courseId } = useParams();\r\n\r\n  let getSingleCourseData = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      let dataSingleCourse = await axios.get(`${baseUrl}/course/${courseId}`);\r\n      setSingleCourseData(dataSingleCourse?.data);\r\n      setIsLoading(false);\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      alert(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getSingleCourseData();\r\n  }, [window.location.href]);\r\n\r\n  // console.log(window.location.href);\r\n  let handleReviewClick = () => {\r\n    if (!JSON.parse(localStorage.getItem(\"DefencePostUserDetails\"))?.token) {\r\n      navigate(\"/login\");\r\n    }\r\n    setDisplayReviewButton(!displayReviewButton);\r\n  };\r\n\r\n  let handlePostReview = (e) => {\r\n    e.preventDefault();\r\n\r\n    // console.log(email);\r\n    const currentDate = new Date();\r\n    // Format the date as desired (e.g., \"MM/DD/YYYY HH:MM AM/PM\")\r\n    const formattedDate = `${currentDate.toLocaleDateString()} ${currentDate.toLocaleTimeString()}`;\r\n    let userReviewData = {\r\n      name: userName,\r\n      review: reviewData,\r\n      rating,\r\n      date: formattedDate,\r\n      courseId,\r\n      email,\r\n    };\r\n\r\n    let postReviewData = async () => {\r\n      try {\r\n        let reviewData = await axios.post(\r\n          `${baseUrl}/review/add`,\r\n          userReviewData\r\n        );\r\n        if (reviewData.status == 200) {\r\n          toast({\r\n            title: \"Review Added\",\r\n            // description: \"Have a great day\",\r\n            status: \"success\",\r\n            duration: 4000,\r\n            isClosable: true,\r\n            position: \"top\",\r\n          });\r\n          getReviewData();\r\n\r\n          // Reset form fields\r\n          setRating(0);\r\n          setReviewData(\"\");\r\n\r\n          setDisplayReviewButton(!displayReviewButton);\r\n        } else {\r\n          toast({\r\n            title: \"Something is wrong\",\r\n            status: \"error\",\r\n            duration: 4000,\r\n            isClosable: true,\r\n            position: \"top\",\r\n          });\r\n        }\r\n      } catch (err) {\r\n        alert(err);\r\n      }\r\n    };\r\n\r\n    postReviewData();\r\n  };\r\n\r\n  let getReviewData = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      let reviewsData = await axios.get(`${baseUrl}/review/`);\r\n      let data = reviewsData?.data?.filter((ele, index) => {\r\n        return ele?.courseId == courseId;\r\n      });\r\n      setAllReviewData(data);\r\n      setIsLoading(false);\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      alert(err);\r\n    }\r\n  };\r\n\r\n  //rezorpay payment varification\r\n  const verifyPayment = async (response) => {\r\n    try {\r\n      // Replace with your actual Razorpay key secret\r\n      let keySecretData = await axios.get(`${baseUrl}/payment/getSecretKey`);\r\n      // console.log(keySecretData.data)\r\n      const keySecret = keySecretData?.data;\r\n\r\n      // Concatenate the order ID, payment ID, and your secret key\r\n      const message =\r\n        response?.razorpay_order_id + \"|\" + response?.razorpay_payment_id;\r\n\r\n      // Create HMAC using crypto-js\r\n      const hmac = CryptoJS.HmacSHA256(message, keySecret);\r\n\r\n      // Convert the result to a hexadecimal string\r\n      const signature = CryptoJS.enc.Hex.stringify(hmac);\r\n\r\n      // Verify the signature\r\n      return signature === response?.razorpay_signature;\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  // Test rezorpay\r\n  let checkoutHandler = async (discountPrice) => {\r\n    if (!JSON.parse(localStorage.getItem(\"DefencePostUserDetails\"))?.token) {\r\n      navigate(\"/login\");\r\n    } else {\r\n      try {\r\n        let keyData = await axios.get(`${baseUrl}/payment/getKey`);\r\n        // console.log(keyData.data);\r\n        let data = await axios.post(`${baseUrl}/payment/checkout`, {\r\n          amount: discountPrice || singleCourseData?.sellPrice,\r\n        });\r\n\r\n        const options = {\r\n          key: keyData.data,\r\n          amount: discountPrice || singleCourseData?.sellPrice,\r\n          currency: \"INR\",\r\n          name: \"Defence Post\",\r\n          description: \"Notes\",\r\n          image:\r\n            \"https://media.licdn.com/dms/image/D4D03AQFY0t-eh4N4UQ/profile-displayphoto-shrink_800_800/0/1696600343127?e=1709769600&v=beta&t=6WiaqygVjAbwnn4LeFF7mbv5q7TrZ8U2xR6dxJML2VI\",\r\n          order_id: data?.data?.order?.id,\r\n          handler: function (response) {\r\n            console.log(response);\r\n            if (verifyPayment(response)) {\r\n              // console.log(response);\r\n              alert(\"Payment Successful!\");\r\n              addDetailAfterPayment(\r\n                response,\r\n                discountPrice || singleCourseData?.sellPrice,\r\n                courseId\r\n              );\r\n              // updateting coupon thing\r\n              {\r\n                discountPrice &&\r\n                  allCouponData.map(async (ele, index) => {\r\n                    promotorAmount(\r\n                      Number(singleCourseData?.sellPrice),\r\n                      ele._id,\r\n                      Number(ele.promoterAmount),\r\n                      Number(ele.promoterCommission),\r\n                      ele.studentsCount\r\n                    );\r\n                  });\r\n              }\r\n              assignCourseToUser();\r\n              navigate(\"/mycourse\");\r\n            } else {\r\n              console.error(\"Payment verification failed!\");\r\n              alert(\"Payment verification failed. Please try again\");\r\n            }\r\n          },\r\n          prefill: {\r\n            name: \"Gaurav Kumar\",\r\n            email: \"gauravsmitawa@gmail.com\",\r\n            contact: \"9671381579\",\r\n          },\r\n          notes: {\r\n            address: \"Razorpay Corporate Office\",\r\n          },\r\n          theme: {\r\n            color: \"#489cdb\",\r\n          },\r\n        };\r\n\r\n        // console.log(options);\r\n\r\n        const razor = new window.Razorpay(options);\r\n        // console.log(razor);\r\n        razor.open();\r\n        return 1;\r\n      } catch (err) {\r\n        alert(err);\r\n      }\r\n    }\r\n  };\r\n\r\n  // I have to delete this function after testing and uncomment other onclick thing from buy course. this is post my course\r\n  async function assignCourseToUser() {\r\n    try {\r\n      let myCourseDataObj = {\r\n        CourseName: singleCourseData.name,\r\n        title: singleCourseData.title,\r\n        price: singleCourseData.price,\r\n        discount: singleCourseData.discount,\r\n        sellPrice: singleCourseData.sellPrice,\r\n        thumbnail: singleCourseData.thumbnail,\r\n        previewPDF: singleCourseData.previewPDF,\r\n        previewPDFName: singleCourseData.previewPDFName,\r\n        folders: singleCourseData.folders,\r\n        // coursePDF: singleCourseData.coursePDF,\r\n        // coursePDFName: singleCourseData.coursePDFName,\r\n        courseId: singleCourseData._id,\r\n      };\r\n      // console.log(myCourseDataObj,\"current course\");\r\n      let data = await axios.post(`${baseUrl}/mycourse/add`, myCourseDataObj, {\r\n        headers,\r\n      });\r\n      // console.log(data);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  let addDetailAfterPayment = async (response, amount, courseId) => {\r\n    // alert(\"data getting add\")\r\n    let detailsObj = {\r\n      razorpay_payment_id: response.razorpay_payment_id,\r\n      razorpay_order_id: response.razorpay_order_id,\r\n      razorpay_signature: response.razorpay_signature,\r\n      amount: amount,\r\n      currency: response.currency,\r\n      status: response.status,\r\n      method: response.method,\r\n      bank: response.bank,\r\n      userName: userName,\r\n      userEmailId: email,\r\n      courseName: singleCourseData.name,\r\n      courseId: courseId,\r\n    };\r\n    try {\r\n      let data = await axios.post(`${baseUrl}/payment/addDetails`, {\r\n        detailsObj,\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  let getAllCouponData = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      let coupanData = await axios.get(`${baseUrl}/coupon/`);\r\n      setAllCouponData(coupanData?.data);\r\n      setIsLoading(false);\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      alert(err);\r\n    }\r\n  };\r\n\r\n  // search coupon\r\n  let SearchCoupon = () => {\r\n    allCouponData.map(async (ele, index) => {\r\n      if (ele.coupon == coupon) {\r\n        let dis = (ele.studentDiscount / 100) * singleCourseData.sellPrice;\r\n        // console.log(ele.studentsCount);\r\n        let discountPrice = Number(singleCourseData.sellPrice) - dis;\r\n        isFound = true;\r\n        setEnableCouponFrame(false);\r\n\r\n        // I have to update this on payment done.\r\n        let data = await checkoutHandler(discountPrice);\r\n        // if (data == 1) {\r\n        //   promotorAmount(\r\n        //     Number(singleCourseData.sellPrice),\r\n        //     ele._id,\r\n        //     Number(ele.promoterAmount),\r\n        //     Number(ele.promoterCommission),\r\n        //     ele.studentsCount\r\n        //   );\r\n        // }\r\n      }\r\n    });\r\n\r\n    if (!isFound) {\r\n      toast({\r\n        title: \"Please check your coupon\",\r\n        status: \"error\",\r\n        duration: 4000,\r\n        isClosable: true,\r\n        position: \"top\",\r\n      });\r\n    }\r\n  };\r\n  // update promotor amount function\r\n  async function promotorAmount(\r\n    amount,\r\n    id,\r\n    promoterAmount,\r\n    promoterCommission,\r\n    studentsCount\r\n  ) {\r\n    // alert(\"ok\");\r\n    console.log(amount, id, promoterAmount, promoterCommission, studentsCount);\r\n    try {\r\n      let test = {\r\n        promoterAmount:\r\n          Number(promoterAmount) + (promoterCommission / 100) * amount,\r\n        studentsCount: studentsCount + 1,\r\n      };\r\n\r\n      // console.log(test,\"Test\")\r\n      let data = await axios.patch(`${baseUrl}/coupon/patch/${id}`, test);\r\n      // console.log(data)\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  async function getMyCourseData() {\r\n    try {\r\n      setIsLoading(true);\r\n      let myCourseData = await axios.get(`${baseUrl}/mycourse/`, { headers });\r\n      // console.log(myCourseData.data.data);\r\n      let buyData = myCourseData?.data?.data?.some(\r\n        (obj) => obj.courseId === courseId\r\n      );\r\n      buyData ? setBuy(true) : setBuy(false);\r\n      // console.log(buyData,buy);\r\n      setIsLoading(false);\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  function extractVideoId(url) {\r\n    if (!url) {\r\n      return null; // Return null or handle the case when the URL is undefined\r\n    }\r\n\r\n    const videoIdMatch = url.match(\r\n      /(?:https?:\\/\\/)?(?:www\\.)?(?:youtube\\.com\\/(?:[^\\/\\n\\s]+\\/\\S+\\/|(?:v|e(?:mbed)?)\\/|\\S*?[?&]v=)|youtu\\.be\\/)([a-zA-Z0-9_-]{11})/\r\n    );\r\n    return videoIdMatch ? videoIdMatch[1] : null;\r\n  }\r\n\r\n  // convert text into html\r\n  function ComponentWithJSX({ jsxString }) {\r\n    // Use the dangerouslySetInnerHTML property to render the JSX string as JSX.\r\n    const renderJSXStringAsJSX = () => {\r\n      return { __html: jsxString };\r\n    };\r\n\r\n    return (\r\n      <Box>\r\n        <div dangerouslySetInnerHTML={renderJSXStringAsJSX()} />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    sessionStorage.setItem(\"prevPage\", null);\r\n    getReviewData();\r\n    getAllCouponData();\r\n    getMyCourseData();\r\n  }, []);\r\n\r\n  console.log(singleCourseData, \"current\");\r\n  if (isLoading) {\r\n    return (\r\n      <>\r\n        <Spinar />\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <Box\r\n        position={\"relative\"}\r\n        bottom={\"50px\"}\r\n        fontFamily={\"Barlow\"}\r\n        mt={{ base: \"20px\", sm: \"120px\" }}\r\n      >\r\n        <Box>\r\n          <Box h={\"500px\"}>\r\n            <iframe\r\n              width=\"100%\"\r\n              height=\"65%\"\r\n              src={`https://www.youtube.com/embed/${extractVideoId(\r\n                singleCourseData.introVideo\r\n              )}`}\r\n              title=\"YouTube video player\"\r\n              frameborder=\"0\"\r\n              allowfullscreen\r\n            ></iframe>\r\n          </Box>\r\n        </Box>\r\n        <Image\r\n          borderRadius={\"5px\"}\r\n          position={\"absolute\"}\r\n          w={{ base: \"150px\", sm: \"320px\" }}\r\n          h={{ base: \"100px\", sm: \"210px\" }}\r\n          top={{ base: \"265px\", sm: \"210px\" }}\r\n          left={{\r\n            base: \"20px\",\r\n            sm: \"60px\",\r\n          }}\r\n          src={singleCourseData.thumbnail}\r\n        ></Image>\r\n\r\n        <Box position={\"relative\"} bottom={\"60px\"}>\r\n          <Box textAlign={\"right\"} marginTop={\"-50px\"} marginRight={\"10px\"}>\r\n            <Button\r\n              backgroundColor={\"#29a4de\"}\r\n              color={\"white\"}\r\n              fontWeight={\"500\"}\r\n              // onClick={tryToAddMyCourseData}\r\n              isDisabled={buy}\r\n              onClick={() => setEnableCouponFrame(!enableCouponFrame)}\r\n            >\r\n              {/* <Link>Buy Course</Link> */}\r\n              {buy ? \"Already Taken\" : \"Buy Course\"}\r\n\r\n              {/* <Link to={\"/mycourse\"}>{buy ? \"Already Taken\" : \"Buy Course\" }</Link> */}\r\n            </Button>\r\n            {enableCouponFrame && (\r\n              <Box\r\n                position={\"absolute\"}\r\n                right={{ base: \"10\", md: \"160px\" }}\r\n                top={{ base: \"60px\", md: \"20px\" }}\r\n                boxShadow={\"rgba(0, 0, 0, 0.24) 0px 3px 8px\"}\r\n                padding={\"20px\"}\r\n                borderTopLeftRadius={\"20px\"}\r\n                borderBottomLeftRadius={\"20px\"}\r\n                borderBottomRightRadius={\"20px\"}\r\n                backgroundColor={\"white\"}\r\n                zIndex={1000}\r\n              >\r\n                <Text\r\n                  onClick={() => {\r\n                    setEnableCouponFrame(false);\r\n                  }}\r\n                  mb={\"15px\"}\r\n                  cursor={\"pointer\"}\r\n                  textAlign={\"right\"}\r\n                  position={\"relative\"}\r\n                >\r\n                  <RxCross2\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      right: \"-15px\",\r\n                      top: \"-15px\",\r\n                      color: \"white\",\r\n                      backgroundColor: \"red\",\r\n                      fontWeight: \"bold\",\r\n                      borderRadius: \"50%\",\r\n                      padding: \"2px\",\r\n                      fontSize: \"20px\",\r\n                    }}\r\n                  />\r\n                </Text>\r\n                <Box width={\"250px\"} textAlign={\"center\"}>\r\n                  <Box\r\n                    display={isCoupon ? \"block\" : \"flex\"}\r\n                    justifyContent={\"space-around\"}\r\n                    alignItems={\"center\"}\r\n                  >\r\n                    {isCoupon ? (\r\n                      <input\r\n                        required\r\n                        type=\"text\"\r\n                        placeholder=\"Coupon\"\r\n                        style={inputStyle}\r\n                        onChange={(e) => {\r\n                          setCoupon(e.target.value);\r\n                        }}\r\n                      />\r\n                    ) : (\r\n                      <Text\r\n                        fontSize={\"25px\"}\r\n                        fontWeight={\"bold\"}\r\n                        color={\"green\"}\r\n                        display={\"flex\"}\r\n                        justifyContent={\"center\"}\r\n                        alignItems={\"center\"}\r\n                      >\r\n                        <BsCurrencyRupee\r\n                          style={{\r\n                            color: \"green.300\",\r\n                            fontSize: \"21px\",\r\n                            position: \"relative\",\r\n                            top: \"1px\",\r\n                          }}\r\n                        />{\" \"}\r\n                        {singleCourseData.sellPrice}\r\n                      </Text>\r\n                    )}\r\n                    {!isCoupon && (\r\n                      <Button\r\n                        backgroundColor={\"#29a4de\"}\r\n                        color={\"white\"}\r\n                        fontWeight={\"500\"}\r\n                        onClick={() => {\r\n                          setEnableCouponFrame(false);\r\n                          checkoutHandler();\r\n                        }}\r\n                      >\r\n                        Continue\r\n                      </Button>\r\n                    )}\r\n                    {isCoupon && (\r\n                      <Button\r\n                        backgroundColor={\"#29a4de\"}\r\n                        color={\"white\"}\r\n                        fontWeight={\"500\"}\r\n                        onClick={SearchCoupon}\r\n                      >\r\n                        Add Coupon\r\n                      </Button>\r\n                    )}\r\n                  </Box>\r\n                  <Box mt={\"15px\"}>\r\n                    <Text>\r\n                      {isCoupon ? \"Don't have coupon?\" : \" Do you have coupon?\"}\r\n                      <span\r\n                        style={{\r\n                          color: \"blue\",\r\n                          fontSize: \"15px\",\r\n                          cursor: \"pointer\",\r\n                        }}\r\n                        onClick={() => {\r\n                          setIsCoupon(!isCoupon);\r\n                        }}\r\n                      >\r\n                        {\" \"}\r\n                        Click Here\r\n                      </span>\r\n                    </Text>\r\n                  </Box>\r\n                </Box>\r\n              </Box>\r\n            )}\r\n          </Box>\r\n          <Box margin={{ base: \"20px 20px\", sm: \"30px 60px\" }}>\r\n            {/* Name  */}\r\n            <Box textAlign={\"left\"}>\r\n              <Text fontWeight={\"bold\"} fontSize={\"30px\"}>\r\n                {singleCourseData.title}\r\n              </Text>\r\n\r\n              {/* Price starts */}\r\n              <Box display={\"flex\"} marginTop={\"10px\"} alignItems={\"center\"}>\r\n                <Text fontSize={\"27px\"}>\r\n                  <span\r\n                    style={{\r\n                      fontSize: \"16px\",\r\n                      position: \"relative\",\r\n                      bottom: \"5px\",\r\n                    }}\r\n                  >\r\n                    ₹\r\n                  </span>\r\n                  {singleCourseData.sellPrice} {/* //price */}\r\n                </Text>\r\n                <Text color={\"Gray\"} marginLeft={\"10px\"}>\r\n                  <del>₹{singleCourseData.price}</del> {/* //old price */}\r\n                </Text>\r\n                <Text marginLeft={\"10px\"} color={\"green\"}>\r\n                  ( {singleCourseData.discount}% OFF )\r\n                </Text>\r\n              </Box>\r\n              {/* Price ends */}\r\n            </Box>\r\n\r\n            {/* View Navbar  */}\r\n            <Box\r\n              textAlign={\"left\"}\r\n              marginTop={\"25px\"}\r\n              //   border={\"1px solid red\"}\r\n              width={{\r\n                base: \"100%\",\r\n                lg: \"25%\",\r\n              }}\r\n              display={\"flex\"}\r\n              justifyContent={\"space-between\"}\r\n              paddingBottom={\"10px\"}\r\n              className=\"view\"\r\n              fontWeight={\"bold\"}\r\n              fontSize={\"20px\"}\r\n              gap={{ sm: \"40px\", sm: \"50px\" }}\r\n            >\r\n              <Text\r\n                onClick={() => {\r\n                  setDescription(true);\r\n                  setReview(false);\r\n                  setPreview(false);\r\n                }}\r\n              >\r\n                <Text color={description ? \"#29a4de\" : \"black\"}>\r\n                  Description\r\n                </Text>\r\n              </Text>\r\n              <Text\r\n                color={preview ? \"#29a4de\" : \"black\"}\r\n                onClick={() => {\r\n                  setPreview(true);\r\n                  setReview(false);\r\n                  setDescription(false);\r\n                }}\r\n              >\r\n                Preview\r\n              </Text>\r\n              <Text\r\n                color={review ? \"#29a4de\" : \"black\"}\r\n                onClick={() => {\r\n                  setReview(true);\r\n                  setDescription(false);\r\n                  setPreview(false);\r\n                }}\r\n              >\r\n                Feedback\r\n              </Text>\r\n            </Box>\r\n            <hr style={{ marginBottom: \"40px\" }} />\r\n\r\n            <Box marginBottom={\"50px\"}>\r\n              {description && (\r\n                <Box>\r\n                  {\" \"}\r\n                  <Text fontSize={\"35px\"} fontWeight={\"bold\"}>\r\n                    {\" \"}\r\n                    Description\r\n                  </Text>\r\n                  <Text textAlign={\"left\"} marginTop={\"20px\"}>\r\n                    {/* {singleCourseData.description} */}\r\n                    <h3>\r\n                      <ComponentWithJSX\r\n                        jsxString={singleCourseData?.description}\r\n                      />\r\n                    </h3>\r\n                  </Text>\r\n                </Box>\r\n              )}\r\n\r\n              {preview && (\r\n                <Box>\r\n                  {singleCourseData?.previewPDF?.map((ele, index) => {\r\n                    return (\r\n                      <Suspense fallback={<Spinar />}>\r\n                        <ViewPdf\r\n                          link={ele}\r\n                          name={singleCourseData.name}\r\n                          tag=\"free\"\r\n                          courseName={singleCourseData.previewPDFName[index]}\r\n                        />\r\n                      </Suspense>\r\n                    );\r\n                  })}\r\n\r\n                  {/* This is for paid  */}\r\n                  <Link to={buy && `/mycourse`}>\r\n                    <Box mt={\"-21px\"}>\r\n                      <Accordion allowToggle>\r\n                        {singleCourseData?.folders?.map((ele, eleIndex) => {\r\n                          return (\r\n                            <AccordionItem key={eleIndex}>\r\n                              <h2>\r\n                                <AccordionButton>\r\n                                  <Box\r\n                                    as=\"span\"\r\n                                    flex=\"1\"\r\n                                    textAlign=\"left\"\r\n                                    display={\"flex\"}\r\n                                    gap={\"20px\"}\r\n                                    alignItems={\"center\"}\r\n                                    marginBottom={\"20px\"}\r\n                                    position={\"relative\"}\r\n                                    borderBottom=\"none\"\r\n                                  >\r\n                                    <FaFolder\r\n                                      style={{\r\n                                        color: \"#F8D775\",\r\n                                        fontSize: \"40px\",\r\n                                      }}\r\n                                    />\r\n                                    <Text fontSize={\"20px\"}> {ele?.name}</Text>\r\n                                  </Box>\r\n                                  <AccordionIcon />\r\n                                </AccordionButton>\r\n                              </h2>\r\n                              <AccordionPanel pb={4}>\r\n                                {ele?.contents?.map((content, index) => {\r\n                                  return (\r\n                                    <Box\r\n                                      // display={\"flex\"}\r\n                                      gap={\"20px\"}\r\n                                      alignItems={\"center\"}\r\n                                      marginBottom={\"20px\"}\r\n                                      position={\"relative\"}\r\n                                      key={index}\r\n                                    >\r\n                                      <Suspense fallback={<Spinar />}>\r\n                                        <ViewPdf\r\n                                          link={ele}\r\n                                          name={singleCourseData.name}\r\n                                          tag=\"paid\"\r\n                                          courseName={content?.coursePDFName}\r\n                                        />\r\n                                      </Suspense>\r\n                                    </Box>\r\n                                  );\r\n                                })}\r\n                              </AccordionPanel>\r\n                            </AccordionItem>\r\n                          );\r\n                        })}\r\n                      </Accordion>\r\n                    </Box>\r\n                  </Link>\r\n                </Box>\r\n              )}\r\n\r\n              {review && (\r\n                <Box>\r\n                  <Button\r\n                    marginBottom={\"30px\"}\r\n                    backgroundColor={\"#29a4de\"}\r\n                    color={\"white\"}\r\n                    fontWeight={\"500\"}\r\n                    onClick={handleReviewClick}\r\n                  >\r\n                    {displayReviewButton ? \"Hide Feedback\" : \"Add Feedback\"}\r\n                  </Button>\r\n                  {displayReviewButton && (\r\n                    <Box\r\n                      margin={\"auto\"}\r\n                      width={{ base: \"100%\", sm: \"100%\", md: \"60%\", lg: \"40%\" }}\r\n                      mb={\"0p8x\"}\r\n                    >\r\n                      <form onSubmit={handlePostReview}>\r\n                        {/* Star rating component */}\r\n                        <Box\r\n                          textAlign={\"left\"}\r\n                          boxShadow=\"rgba(50, 50, 93, 0.25) 0px 2px 5px -1px, rgba(0, 0, 0, 0.3) 0px 1px 3px -1px\"\r\n                          padding={\"20px\"}\r\n                          backgroundColor={\"#e7e8ea\"}\r\n                          borderRadius={\"10px\"}\r\n                        >\r\n                          <Text\r\n                            fontSize={\"20px\"}\r\n                            fontWeight={\"bold\"}\r\n                            marginBottom={\"20px\"}\r\n                          >\r\n                            Give Your Feedback\r\n                          </Text>\r\n                          <Box\r\n                            display={\"flex\"}\r\n                            gap={\"20px\"}\r\n                            alignItems={\"center\"}\r\n                          >\r\n                            <Box>\r\n                              <BiSad\r\n                                fontSize={\"25px\"}\r\n                                style={{ marginLeft: \"3px\" }}\r\n                              />\r\n                              <Text>Poor</Text>\r\n                            </Box>\r\n                            <Box\r\n                              // width={\"250px\"}\r\n                              // m={\"auto\"}\r\n                              display={\"flex\"}\r\n                              alignItems={\"center\"}\r\n                              gap={\"20px\"}\r\n                              // border={\"1px solid red\"}\r\n                            >\r\n                              <Rating\r\n                                count={5} // Number of stars\r\n                                value={rating} // Current rating value\r\n                                onChange={(newRating) => setRating(newRating)} // Handle rating change\r\n                                size={45} // Size of the stars\r\n                                activeColor=\"#daa520\" // Color of the active (filled) stars\r\n                                inactiveColor=\"#c0bebf\" // Color of the inactive (empty) stars\r\n                                fontSize=\"20px\"\r\n                              />\r\n                            </Box>\r\n                            <Box>\r\n                              <BiHappy\r\n                                fontSize={\"25px\"}\r\n                                style={{ marginLeft: \"3px\" }}\r\n                              />\r\n                              <Text>Best</Text>\r\n                            </Box>\r\n                          </Box>\r\n                        </Box>\r\n\r\n                        {/* textarea  */}\r\n                        <Box\r\n                          boxShadow=\"rgba(50, 50, 93, 0.25) 0px 2px 5px -1px, rgba(0, 0, 0, 0.3) 0px 1px 3px -1px\"\r\n                          padding={\"20px\"}\r\n                          borderRadius={\"10px\"}\r\n                          mt={\"15px\"}\r\n                          backgroundColor={\"#e7e8ea\"}\r\n                        >\r\n                          <Text\r\n                            fontSize={\"20px\"}\r\n                            fontWeight={\"bold\"}\r\n                            textAlign={\"left\"}\r\n                            // marginBottom={\"20px\"}\r\n                          >\r\n                            Write-Up\r\n                          </Text>\r\n\r\n                          <textarea\r\n                            name=\"\"\r\n                            id=\"\"\r\n                            rows=\"3\"\r\n                            value={reviewData}\r\n                            onChange={(e) => setReviewData(e.target.value)}\r\n                            placeholder=\"Write your review...\"\r\n                            style={{\r\n                              // border: \"1px solid gray\",\r\n                              boxShadow:\r\n                                \"rgba(50, 50, 93, 0.25) 0px 2px 5px -1px, rgba(0, 0, 0, 0.3) 0px 1px 3px -1px\",\r\n                              outline: \"none\",\r\n                              padding: \"20px\",\r\n                              fontSize: \"19px\",\r\n                              width: \"100%\",\r\n                              borderRadius: \"10px\",\r\n                              marginTop: \"10px\",\r\n                            }}\r\n                            required\r\n                          ></textarea>\r\n                        </Box>\r\n                        <br />\r\n                        <input\r\n                          type=\"submit\"\r\n                          value=\"Submit Feedback\"\r\n                          style={{\r\n                            padding: \"8px 20px\",\r\n                            backgroundColor: \"#29a4de\",\r\n                            color: \"white\",\r\n                            borderRadius: \"5px\",\r\n                            cursor: \"pointer\",\r\n                            // marginTop: \"10px\",\r\n                            marginBottom: \"50px\",\r\n                          }}\r\n                        />\r\n                      </form>\r\n                    </Box>\r\n                  )}\r\n                  <Box>\r\n                    {allReviewData.reverse().map((ele, index) => {\r\n                      return (\r\n                        <Suspense fallback={<Spinar />}>\r\n                          <ViewReview data={ele} />\r\n                        </Suspense>\r\n                      );\r\n                    })}\r\n                  </Box>\r\n                </Box>\r\n              )}\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ViewDetails;\r\n","import { NavLink, useNavigate } from \"react-router-dom\";\r\nimport { Box, Image, Select, Input, Button, Text } from \"@chakra-ui/react\";\r\nimport logoImg from \"../Images/Logo-black.jpeg\";\r\n// import { VscThreeBars } from \"react-icons/vsc\";\r\nimport { IoReorderThreeOutline } from \"react-icons/io5\";\r\nimport { ChevronDownIcon } from \"@chakra-ui/icons\";\r\nimport { IoMdLogOut } from \"react-icons/io\";\r\nimport \"../css/navbar.css\";\r\nimport \"animate.css/animate.min.css\";\r\nimport { VscThreeBars } from \"react-icons/vsc\";\r\n\r\n// import for Drawer\r\nimport {\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerFooter,\r\n  DrawerHeader,\r\n  DrawerOverlay,\r\n  DrawerContent,\r\n  DrawerCloseButton,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { AlertBox } from \"./AlertBox\";\r\nimport { baseUrl } from \"../BaseUrl\";\r\n\r\n// import \"../css/navbar.css\";\r\n function Navbar() {\r\nconst navigate = useNavigate();\r\n  const { isOpen, onClose, onToggle } = useDisclosure();\r\n  const [showPostDropdown, setShowPostDropdown] = useState(false);\r\n  const [showCourseDropdown, setShowCourseDropdown] = useState(false);\r\n  const [courseData, setCourseData] = useState([]);\r\n  const [postData, setPostData] = useState([]);\r\n  const [isHovered, setIsHovered] = useState(true);\r\n\r\n  // logout\r\n  let [showLogout, setShowLogout] = useState(false);\r\n  let [token, setToken] = useState(\r\n    JSON.parse(localStorage.getItem(\"DefencePostUserDetails\"))?.token\r\n  );\r\n  let [userName, setUserName] = useState(\r\n    JSON.parse(localStorage.getItem(\"DefencePostUserDetails\"))?.userName\r\n  );\r\n  let [email, setEmail] = useState(\r\n    JSON.parse(localStorage.getItem(\"DefencePostUserDetails\"))?.email\r\n  );\r\n\r\n\r\n  const handlePostMouseEnter = () => {\r\n    setShowPostDropdown(true);\r\n  };\r\n\r\n  const handlePostMouseLeave = () => {\r\n    setShowPostDropdown(false);\r\n  };\r\n\r\n  // Course dropdown handle\r\n  const handleCourseMouseEnter = () => {\r\n    setShowCourseDropdown(true);\r\n  };\r\n\r\n  const handleCourseMouseLeave = () => {\r\n    setShowCourseDropdown(false);\r\n  };\r\n\r\n  // get all course data\r\n  let getCourseData = async () => {\r\n    try {\r\n      let dataCourse = await axios.get(`${baseUrl}/course/`);\r\n      setCourseData(dataCourse.data);\r\n    } catch (err) {\r\n      alert(err);\r\n    }\r\n  };\r\n\r\n  // get all course data\r\n  let getPostData = async () => {\r\n    try {\r\n      let dataPost = await axios.get(`${baseUrl}/post/`);\r\n      \r\n      // Extract unique categories using Set\r\n      const uniquePosts = Array.from(new Map(dataPost.data.map(post => [post.category, post])).values());\r\n  \r\n      // Set the unique categories in your state or wherever needed\r\n      setPostData(uniquePosts);\r\n    } catch (err) {\r\n      alert(err);\r\n    }\r\n  };\r\n  \r\n\r\n  // handle logout\r\n  let handleLogout = () => {\r\n    const userResponse = window.confirm(\"Are you sure you want to logout?\");\r\n    let obj = { token: null, userName: null, email: null };\r\n    if (userResponse) {\r\n      localStorage.setItem(\"DefencePostUserDetails\", JSON.stringify(obj));\r\n      navigate(\"/\")\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPostData();\r\n    getCourseData();\r\n  }, []);\r\n\r\n  \r\n  // console.log(postData);\r\n  return (\r\n    <>\r\n      <Box\r\n        className=\"header\"\r\n        display={{\r\n          base: \"none\",\r\n          lg: \"grid\",\r\n        }}\r\n        gridTemplateColumns={token ? \"30% 1fr\" : \"30% 1fr 10%\"}\r\n        alignItems={\"center\"}\r\n        backgroundColor={\"white\"}\r\n        color={\"black\"}\r\n        boxShadow={\r\n          \"rgba(0, 0, 0, 0.1) 0px 4px 6px -1px, rgba(0, 0, 0, 0.06) 0px 2px 4px -1px\"\r\n        }\r\n        fontFamily={\"Barlow\"}\r\n        height={\"70px\"}\r\n        position={\"fixed\"} //pehele sticky than mene ye add kiya he\r\n        width={\"100%\"} // isko add kiya he\r\n        top={\"0px\"}\r\n        marginBottom={\"50px\"}\r\n        zIndex={1000}\r\n        paddingRight={\"30px\"}\r\n        // mb={\"740px\"}\r\n      >\r\n        <NavLink className=\"logo nav-link\" to={\"/\"}>\r\n          <Image src={logoImg} width={\"200px\"} height={\"100%\"}></Image>\r\n        </NavLink>\r\n\r\n        <Box\r\n          className=\"nav\"\r\n          display={\"flex\"}\r\n          justifyContent={\"flex-end\"}\r\n          fontSize={\"18px\"}\r\n          alignItems={\"center\"}\r\n        >\r\n          <NavLink className=\"navContent nav-link\" to=\"/\">\r\n            Home\r\n          </NavLink>\r\n          <Box\r\n            display={\"flex\"}\r\n            className=\"navContent\"\r\n            // border={\"1px solid red\"}\r\n            // paddingBottom={\"2px\"}\r\n            onMouseEnter={handlePostMouseEnter}\r\n            onMouseLeave={handlePostMouseLeave}\r\n          >\r\n            <NavLink className=\"nav-link\" to=\"/posts\">\r\n              Posts\r\n            </NavLink>{\" \"}\r\n            <ChevronDownIcon\r\n              style={{ position: \"relative\", top: \"5px\", marginLeft: \"5px\" }}\r\n            />\r\n            {showPostDropdown && (\r\n              <Box\r\n                className={`dropdown ${\r\n                  isHovered ? \"animate_animated animate_zoomIn\" : \"\"\r\n                }`}\r\n                position={\"absolute\"}\r\n                top={\"45px\"}\r\n                display={\"flex\"}\r\n                flexDirection={\"column\"}\r\n                backgroundColor={\"white\"}\r\n                textAlign={\"left\"}\r\n                boxShadow=\"rgba(0, 0, 0, 0.16) 0px 1px 4px\"\r\n                padding={\"10px 20px\"}\r\n                borderRadius={\"10px\"}\r\n              >\r\n                {postData.map((ele, index) => {\r\n                  return (\r\n                    <NavLink to={`/singlepostpage/${ele._id}/${index}/${ele.category}`}>\r\n                      {ele.category}\r\n                    </NavLink>\r\n                  );\r\n                })}\r\n              </Box>\r\n            )}\r\n          </Box>\r\n\r\n          <Box\r\n            display={\"flex\"}\r\n            className=\"navContent\"\r\n            onMouseEnter={handleCourseMouseEnter}\r\n            onMouseLeave={handleCourseMouseLeave}\r\n          >\r\n            <NavLink to=\"/course\" className={\"nav-link\"}>\r\n              Course\r\n            </NavLink>{\" \"}\r\n            <ChevronDownIcon\r\n              style={{ position: \"relative\", top: \"5px\", marginLeft: \"5px\" }}\r\n            />\r\n            {showCourseDropdown && (\r\n              <Box\r\n                className={`dropdown ${\r\n                  isHovered ? \"animate_animated animate_zoomIn\" : \"\"\r\n                }`}\r\n                position={\"absolute\"}\r\n                top={\"45px\"}\r\n                display={\"flex\"}\r\n                flexDirection={\"column\"}\r\n                backgroundColor={\"white\"}\r\n                textAlign={\"left\"}\r\n                padding={\"10px 20px\"}\r\n                borderRadius={\"10px\"}\r\n                boxShadow=\"rgba(0, 0, 0, 0.16) 0px 1px 4px\"\r\n              >\r\n                {showCourseDropdown &&\r\n                  courseData.map((ele, index) => {\r\n                    return (\r\n                      <NavLink\r\n                        to={`/viewdetails/${ele._id}`}\r\n                        className={\"nav-link\"}\r\n                      >\r\n                        {ele.name}\r\n                      </NavLink>\r\n                    );\r\n                  })}\r\n              </Box>\r\n            )}\r\n          </Box>\r\n          {token && (\r\n            <NavLink className=\"navContent nav-link\" to=\"/mycourse\">\r\n              My Course\r\n            </NavLink>\r\n          )}\r\n\r\n          <NavLink className=\"navContent nav-link\" to=\"/free\">\r\n            Free\r\n          </NavLink>\r\n\r\n          {/* Data */}\r\n          {email == \"masaieducation17@gmail.com\" && (\r\n            <NavLink className=\"navContent nav-link\" to={\"/datahub\"}>\r\n              DataHub\r\n            </NavLink>\r\n          )}\r\n\r\n          {!token && (\r\n            <NavLink className=\"navContent nav-link\" to=\"/login\">\r\n              Login\r\n            </NavLink>\r\n          )}\r\n          {token && (\r\n            <Text\r\n              backgroundColor={\"green.300\"}\r\n              borderRadius={\"50%\"}\r\n              width={\"40px\"}\r\n              h={\"40px\"}\r\n              // marginRight={\"20px\"}\r\n              color={\"white\"}\r\n              ml={\"20px\"}\r\n              cursor={\"pointer\"}\r\n              display={\"flex\"}\r\n              alignItems={\"center\"}\r\n              justifyContent={\"center\"}\r\n              onClick={() => {\r\n                setShowLogout(!showLogout);\r\n              }}\r\n            >\r\n              {userName[0].toUpperCase()}\r\n            </Text>\r\n          )}\r\n        </Box>\r\n        <Box display={\"flex\"} gap={\"10px\"}>\r\n          {!token && (\r\n            <NavLink\r\n              className=\"navContent\"\r\n              style={{ marginLeft: \"0px\" }}\r\n              to=\"/signup\"\r\n            >\r\n              <Button\r\n                marginLeft={\"30px\"}\r\n                backgroundColor={\"#28a4de\"}\r\n                color={\"white\"}\r\n                fontWeight={\"500\"}\r\n              >\r\n                Sign Up\r\n              </Button>\r\n            </NavLink>\r\n          )}\r\n\r\n          {showLogout && (\r\n            <Box\r\n              boxShadow={\r\n                \" rgba(50, 50, 93, 0.25) 0px 6px 12px -2px, rgba(0, 0, 0, 0.3) 0px 3px 7px -3px\"\r\n              }\r\n              position={\"absolute\"}\r\n              top={\"75px\"}\r\n              right={\"20px\"}\r\n              padding={\"10px 40px\"}\r\n              backgroundColor={\"white\"}\r\n            >\r\n              <Text fontSize={\"15px\"}>{email}</Text>\r\n              <Box\r\n                display={\"flex\"}\r\n                alignItems={\"center\"}\r\n                gap={\"10px\"}\r\n                fontSize={\"20px\"}\r\n                cursor={\"pointer\"}\r\n                onClick={handleLogout}\r\n              >\r\n                <Text>Logout</Text>\r\n                <IoMdLogOut color=\"red\" />\r\n              </Box>\r\n            </Box>\r\n          )}\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* responsive navbar  */}\r\n      <Box\r\n        display={{\r\n          base: \"flex\",\r\n          lg: \"none\",\r\n        }}\r\n        justifyContent={\"space-between\"}\r\n        // backgroundColor={\"#27395F\"}\r\n        color={\"#28a4de\"}\r\n        marginBottom={\"50px\"}\r\n        marginTop={\"10px\"}\r\n        boxShadow={\"rgba(17, 17, 26, 0.1) 0px 1px 0px\"}\r\n      >\r\n        <Image src={logoImg} width={\"180px\"}></Image>\r\n        <Box className=\"ThreeLines\" cursor={\"pointer\"}>\r\n          <VscThreeBars\r\n            style={{ height: \"40px\", width: \"30px\" }}\r\n            onClick={() => {\r\n              onToggle();\r\n              isOpen;\r\n            }}\r\n          />\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* navbar Drawer/responsive code  */}\r\n      <Drawer isOpen={isOpen} placement=\"right\" onClose={() => {}}>\r\n        <DrawerOverlay />\r\n        <DrawerContent>\r\n          <DrawerCloseButton onClick={onClose} />\r\n\r\n          <DrawerBody>\r\n            <Box display={\"grid\"} gap={\"15px\"} fontSize={\"20px\"}>\r\n              <Text fontSize={\"14px\"} textDecoration={\"underline\"}>{email}</Text>\r\n              <NavLink className={\"nav-link\"} to=\"/\" onClick={onClose}>\r\n                Home\r\n              </NavLink>\r\n              <Box display={\"flex\"}>\r\n                <NavLink to=\"/posts\" className={\"nav-link\"}>\r\n                  Posts\r\n                </NavLink>{\" \"}\r\n                {/* <ChevronDownIcon\r\n                  style={{\r\n                    position: \"relative\",\r\n                    top: \"5px\",\r\n                    marginLeft: \"10px\",\r\n                  }}\r\n                /> */}\r\n              </Box>\r\n              <Box display={\"flex\"}>\r\n                <NavLink to=\"/course\" className={\"nav-link\"}>\r\n                  Course\r\n                </NavLink>{\" \"}\r\n                {/* <ChevronDownIcon\r\n                  style={{\r\n                    position: \"relative\",\r\n                    top: \"5px\",\r\n                    marginLeft: \"5px\",\r\n                  }}\r\n                /> */}\r\n              </Box>\r\n              {token && <NavLink to=\"/mycourse\" onClick={onClose} className={\"nav-link\"}>\r\n                My Course\r\n              </NavLink>}\r\n              <NavLink to=\"/free\" onClick={onClose} className={\"nav-link\"}>\r\n                Free Resources\r\n              </NavLink>\r\n              {token ? (\r\n                <Text onClick={handleLogout} className={\"nav-link\"}>\r\n                  Logout\r\n                </Text>\r\n              ) : (\r\n                <NavLink to=\"/login\" onClick={onClose} className={\"nav-link\"}>\r\n                  Login\r\n                </NavLink>\r\n              )}\r\n\r\n              <NavLink to=\"/signup\" onClick={onClose} className={\"nav-link\"}>\r\n                Sign Up\r\n              </NavLink>\r\n            </Box>\r\n          </DrawerBody>\r\n\r\n          <DrawerFooter>\r\n            <Button variant=\"outline\" mr={3} onClick={onClose}>\r\n              Cancel\r\n            </Button>\r\n          </DrawerFooter>\r\n        </DrawerContent>\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\nexport default Navbar;"],"names":["baseUrl","CryptoJS","require","ViewPdf","lazy","ViewReview","_JSON$parse","_JSON$parse2","_JSON$parse3","_singleCourseData$pre","_singleCourseData$fol","token","JSON","parse","localStorage","getItem","userName","email","headers","navigate","useNavigate","toast","useToast","description","setDescription","useState","preview","setPreview","review","setReview","singleCourseData","setSingleCourseData","displayReviewButton","setDisplayReviewButton","rating","setRating","reviewData","setReviewData","allReviewData","setAllReviewData","enableCouponFrame","setEnableCouponFrame","isCoupon","setIsCoupon","coupon","setCoupon","allCouponData","setAllCouponData","buy","setBuy","isLoading","setIsLoading","isFound","courseId","useParams","useEffect","async","dataSingleCourse","axios","get","concat","data","err","alert","getSingleCourseData","window","location","href","getReviewData","_reviewsData$data","reviewsData","filter","ele","index","checkoutHandler","_JSON$parse5","_data$data","_data$data$order","keyData","post","amount","discountPrice","sellPrice","options","key","currency","name","image","order_id","order","id","handler","response","console","log","keySecretData","keySecret","message","razorpay_order_id","razorpay_payment_id","hmac","HmacSHA256","enc","Hex","stringify","razorpay_signature","verifyPayment","addDetailAfterPayment","map","promoterAmount","promoterCommission","studentsCount","test","Number","patch","promotorAmount","_id","myCourseDataObj","CourseName","title","price","discount","thumbnail","previewPDF","previewPDFName","folders","assignCourseToUser","error","prefill","contact","notes","address","theme","color","Razorpay","open","detailsObj","status","method","bank","userEmailId","courseName","ComponentWithJSX","_ref","jsxString","_jsx","Box","children","dangerouslySetInnerHTML","__html","sessionStorage","setItem","coupanData","getAllCouponData","_myCourseData$data","_myCourseData$data$da","myCourseData","buyData","some","obj","getMyCourseData","_Fragment","Spinar","_jsxs","Navbar","position","bottom","fontFamily","mt","base","sm","h","width","height","src","url","videoIdMatch","match","extractVideoId","introVideo","frameborder","allowfullscreen","Image","borderRadius","w","top","left","textAlign","marginTop","marginRight","Button","backgroundColor","fontWeight","isDisabled","onClick","right","md","boxShadow","padding","borderTopLeftRadius","borderBottomLeftRadius","borderBottomRightRadius","zIndex","Text","mb","cursor","RxCross2","style","fontSize","display","justifyContent","alignItems","required","type","placeholder","border","marginBottom","outline","onChange","e","target","value","BsCurrencyRupee","SearchCoupon","dis","studentDiscount","duration","isClosable","margin","marginLeft","lg","paddingBottom","className","gap","Suspense","fallback","link","tag","Link","to","Accordion","allowToggle","eleIndex","_ele$contents","AccordionItem","AccordionButton","as","flex","borderBottom","FaFolder","AccordionIcon","AccordionPanel","pb","contents","content","coursePDFName","handleReviewClick","_JSON$parse4","onSubmit","preventDefault","currentDate","Date","formattedDate","toLocaleDateString","toLocaleTimeString","userReviewData","date","postReviewData","BiSad","Rating","count","newRating","size","activeColor","inactiveColor","BiHappy","rows","reverse","isOpen","onClose","onToggle","useDisclosure","showPostDropdown","setShowPostDropdown","showCourseDropdown","setShowCourseDropdown","courseData","setCourseData","postData","setPostData","isHovered","setIsHovered","showLogout","setShowLogout","setToken","setUserName","setEmail","handleLogout","confirm","dataPost","uniquePosts","Array","from","Map","category","values","getPostData","dataCourse","getCourseData","gridTemplateColumns","paddingRight","NavLink","logoImg","onMouseEnter","handlePostMouseEnter","onMouseLeave","handlePostMouseLeave","ChevronDownIcon","flexDirection","handleCourseMouseEnter","handleCourseMouseLeave","ml","toUpperCase","IoMdLogOut","VscThreeBars","Drawer","placement","DrawerOverlay","DrawerContent","DrawerCloseButton","DrawerBody","textDecoration","DrawerFooter","variant","mr"],"sourceRoot":""}