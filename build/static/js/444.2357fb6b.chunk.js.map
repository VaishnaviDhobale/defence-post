{"version":3,"file":"static/js/444.2357fb6b.chunk.js","mappings":"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","sources":["BaseUrl.jsx","Pages/Course.jsx","components/Navbar.jsx"],"sourcesContent":["\r\n\r\nexport const baseUrl = \"https://backend.defencepost.in\"\r\n// export const baseUrl = \"http://localhost:8000\"","\r\nimport { Box } from \"@chakra-ui/react\";\r\nimport { useState, useEffect, lazy, Suspense } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Spinar } from \"../components/Spinar\";\r\nimport { baseUrl } from \"../BaseUrl\";\r\nimport Navbar from \"../components/Navbar.jsx\";\r\n\r\nconst SingleCourse = lazy(() => import(\"../components/SingleCourse.jsx\"));\r\n\r\nfunction Course() {\r\n  const [courseData, setCourseData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const getCourseData = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const { data } = await axios.get(`${baseUrl}/course/`);\r\n      setCourseData(data);\r\n    } catch (err) {\r\n      alert(err);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"prevPage\", null);\r\n    getCourseData();\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return <Spinar />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <Box\r\n        display=\"grid\"\r\n        gridTemplateColumns={{\r\n          base: \"repeat(1, 1fr)\",\r\n          sm: \"repeat(1, 1fr)\",\r\n          md: \"repeat(2, 1fr)\",\r\n          lg: \"repeat(3, 1fr)\",\r\n        }}\r\n        gap=\"50px\"\r\n        margin={{ base: \"-10px 20px\", sm: \"100px 60px\" }}\r\n        fontFamily=\"Barlow\"\r\n      >\r\n        {courseData.map((ele) => (\r\n          <Suspense key={ele._id} fallback={<Spinar />}>\r\n            <SingleCourse data={ele} />\r\n          </Suspense>\r\n        ))}\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Course;\r\n","import { NavLink, useNavigate } from \"react-router-dom\";\r\nimport { Box, Image, Select, Input, Button, Text } from \"@chakra-ui/react\";\r\nimport logoImg from \"../Images/Logo-black.jpeg\";\r\n// import { VscThreeBars } from \"react-icons/vsc\";\r\nimport { IoReorderThreeOutline } from \"react-icons/io5\";\r\nimport { ChevronDownIcon } from \"@chakra-ui/icons\";\r\nimport { IoMdLogOut } from \"react-icons/io\";\r\nimport \"../css/navbar.css\";\r\nimport \"animate.css/animate.min.css\";\r\nimport { VscThreeBars } from \"react-icons/vsc\";\r\n\r\n// import for Drawer\r\nimport {\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerFooter,\r\n  DrawerHeader,\r\n  DrawerOverlay,\r\n  DrawerContent,\r\n  DrawerCloseButton,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { AlertBox } from \"./AlertBox\";\r\nimport { baseUrl } from \"../BaseUrl\";\r\n\r\n// import \"../css/navbar.css\";\r\n function Navbar() {\r\nconst navigate = useNavigate();\r\n  const { isOpen, onClose, onToggle } = useDisclosure();\r\n  const [showPostDropdown, setShowPostDropdown] = useState(false);\r\n  const [showCourseDropdown, setShowCourseDropdown] = useState(false);\r\n  const [courseData, setCourseData] = useState([]);\r\n  const [postData, setPostData] = useState([]);\r\n  const [isHovered, setIsHovered] = useState(true);\r\n\r\n  // logout\r\n  let [showLogout, setShowLogout] = useState(false);\r\n  let [token, setToken] = useState(\r\n    JSON.parse(localStorage.getItem(\"DefencePostUserDetails\"))?.token\r\n  );\r\n  let [userName, setUserName] = useState(\r\n    JSON.parse(localStorage.getItem(\"DefencePostUserDetails\"))?.userName\r\n  );\r\n  let [email, setEmail] = useState(\r\n    JSON.parse(localStorage.getItem(\"DefencePostUserDetails\"))?.email\r\n  );\r\n\r\n\r\n  const handlePostMouseEnter = () => {\r\n    setShowPostDropdown(true);\r\n  };\r\n\r\n  const handlePostMouseLeave = () => {\r\n    setShowPostDropdown(false);\r\n  };\r\n\r\n  // Course dropdown handle\r\n  const handleCourseMouseEnter = () => {\r\n    setShowCourseDropdown(true);\r\n  };\r\n\r\n  const handleCourseMouseLeave = () => {\r\n    setShowCourseDropdown(false);\r\n  };\r\n\r\n  // get all course data\r\n  let getCourseData = async () => {\r\n    try {\r\n      let dataCourse = await axios.get(`${baseUrl}/course/`);\r\n      setCourseData(dataCourse.data);\r\n    } catch (err) {\r\n      alert(err);\r\n    }\r\n  };\r\n\r\n  // get all course data\r\n  let getPostData = async () => {\r\n    try {\r\n      let dataPost = await axios.get(`${baseUrl}/post/`);\r\n      \r\n      // Extract unique categories using Set\r\n      const uniquePosts = Array.from(new Map(dataPost.data.map(post => [post.category, post])).values());\r\n  \r\n      // Set the unique categories in your state or wherever needed\r\n      setPostData(uniquePosts);\r\n    } catch (err) {\r\n      alert(err);\r\n    }\r\n  };\r\n  \r\n\r\n  // handle logout\r\n  let handleLogout = () => {\r\n    const userResponse = window.confirm(\"Are you sure you want to logout?\");\r\n    let obj = { token: null, userName: null, email: null };\r\n    if (userResponse) {\r\n      localStorage.setItem(\"DefencePostUserDetails\", JSON.stringify(obj));\r\n      navigate(\"/\")\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPostData();\r\n    getCourseData();\r\n  }, []);\r\n\r\n  \r\n  // console.log(postData);\r\n  return (\r\n    <>\r\n      <Box\r\n        className=\"header\"\r\n        display={{\r\n          base: \"none\",\r\n          lg: \"grid\",\r\n        }}\r\n        gridTemplateColumns={token ? \"30% 1fr\" : \"30% 1fr 10%\"}\r\n        alignItems={\"center\"}\r\n        backgroundColor={\"white\"}\r\n        color={\"black\"}\r\n        boxShadow={\r\n          \"rgba(0, 0, 0, 0.1) 0px 4px 6px -1px, rgba(0, 0, 0, 0.06) 0px 2px 4px -1px\"\r\n        }\r\n        fontFamily={\"Barlow\"}\r\n        height={\"70px\"}\r\n        position={\"fixed\"} //pehele sticky than mene ye add kiya he\r\n        width={\"100%\"} // isko add kiya he\r\n        top={\"0px\"}\r\n        marginBottom={\"50px\"}\r\n        zIndex={1000}\r\n        paddingRight={\"30px\"}\r\n        // mb={\"740px\"}\r\n      >\r\n        <NavLink className=\"logo nav-link\" to={\"/\"}>\r\n          <Image src={logoImg} width={\"200px\"} height={\"100%\"}></Image>\r\n        </NavLink>\r\n\r\n        <Box\r\n          className=\"nav\"\r\n          display={\"flex\"}\r\n          justifyContent={\"flex-end\"}\r\n          fontSize={\"18px\"}\r\n          alignItems={\"center\"}\r\n        >\r\n          <NavLink className=\"navContent nav-link\" to=\"/\">\r\n            Home\r\n          </NavLink>\r\n          <Box\r\n            display={\"flex\"}\r\n            className=\"navContent\"\r\n            // border={\"1px solid red\"}\r\n            // paddingBottom={\"2px\"}\r\n            onMouseEnter={handlePostMouseEnter}\r\n            onMouseLeave={handlePostMouseLeave}\r\n          >\r\n            <NavLink className=\"nav-link\" to=\"/posts\">\r\n              Posts\r\n            </NavLink>{\" \"}\r\n            <ChevronDownIcon\r\n              style={{ position: \"relative\", top: \"5px\", marginLeft: \"5px\" }}\r\n            />\r\n            {showPostDropdown && (\r\n              <Box\r\n                className={`dropdown ${\r\n                  isHovered ? \"animate_animated animate_zoomIn\" : \"\"\r\n                }`}\r\n                position={\"absolute\"}\r\n                top={\"45px\"}\r\n                display={\"flex\"}\r\n                flexDirection={\"column\"}\r\n                backgroundColor={\"white\"}\r\n                textAlign={\"left\"}\r\n                boxShadow=\"rgba(0, 0, 0, 0.16) 0px 1px 4px\"\r\n                padding={\"10px 20px\"}\r\n                borderRadius={\"10px\"}\r\n              >\r\n                {postData.map((ele, index) => {\r\n                  return (\r\n                    <NavLink to={`/singlepostpage/${ele._id}/${index}/${ele.category}`}>\r\n                      {ele.category}\r\n                    </NavLink>\r\n                  );\r\n                })}\r\n              </Box>\r\n            )}\r\n          </Box>\r\n\r\n          <Box\r\n            display={\"flex\"}\r\n            className=\"navContent\"\r\n            onMouseEnter={handleCourseMouseEnter}\r\n            onMouseLeave={handleCourseMouseLeave}\r\n          >\r\n            <NavLink to=\"/course\" className={\"nav-link\"}>\r\n              Course\r\n            </NavLink>{\" \"}\r\n            <ChevronDownIcon\r\n              style={{ position: \"relative\", top: \"5px\", marginLeft: \"5px\" }}\r\n            />\r\n            {showCourseDropdown && (\r\n              <Box\r\n                className={`dropdown ${\r\n                  isHovered ? \"animate_animated animate_zoomIn\" : \"\"\r\n                }`}\r\n                position={\"absolute\"}\r\n                top={\"45px\"}\r\n                display={\"flex\"}\r\n                flexDirection={\"column\"}\r\n                backgroundColor={\"white\"}\r\n                textAlign={\"left\"}\r\n                padding={\"10px 20px\"}\r\n                borderRadius={\"10px\"}\r\n                boxShadow=\"rgba(0, 0, 0, 0.16) 0px 1px 4px\"\r\n              >\r\n                {showCourseDropdown &&\r\n                  courseData.map((ele, index) => {\r\n                    return (\r\n                      <NavLink\r\n                        to={`/viewdetails/${ele._id}`}\r\n                        className={\"nav-link\"}\r\n                      >\r\n                        {ele.name}\r\n                      </NavLink>\r\n                    );\r\n                  })}\r\n              </Box>\r\n            )}\r\n          </Box>\r\n          {token && (\r\n            <NavLink className=\"navContent nav-link\" to=\"/mycourse\">\r\n              My Course\r\n            </NavLink>\r\n          )}\r\n\r\n          <NavLink className=\"navContent nav-link\" to=\"/free\">\r\n            Free\r\n          </NavLink>\r\n\r\n          {/* Data */}\r\n          {email == \"masaieducation17@gmail.com\" && (\r\n            <NavLink className=\"navContent nav-link\" to={\"/datahub\"}>\r\n              DataHub\r\n            </NavLink>\r\n          )}\r\n\r\n          {!token && (\r\n            <NavLink className=\"navContent nav-link\" to=\"/login\">\r\n              Login\r\n            </NavLink>\r\n          )}\r\n          {token && (\r\n            <Text\r\n              backgroundColor={\"green.300\"}\r\n              borderRadius={\"50%\"}\r\n              width={\"40px\"}\r\n              h={\"40px\"}\r\n              // marginRight={\"20px\"}\r\n              color={\"white\"}\r\n              ml={\"20px\"}\r\n              cursor={\"pointer\"}\r\n              display={\"flex\"}\r\n              alignItems={\"center\"}\r\n              justifyContent={\"center\"}\r\n              onClick={() => {\r\n                setShowLogout(!showLogout);\r\n              }}\r\n            >\r\n              {userName[0].toUpperCase()}\r\n            </Text>\r\n          )}\r\n        </Box>\r\n        <Box display={\"flex\"} gap={\"10px\"}>\r\n          {!token && (\r\n            <NavLink\r\n              className=\"navContent\"\r\n              style={{ marginLeft: \"0px\" }}\r\n              to=\"/signup\"\r\n            >\r\n              <Button\r\n                marginLeft={\"30px\"}\r\n                backgroundColor={\"#28a4de\"}\r\n                color={\"white\"}\r\n                fontWeight={\"500\"}\r\n              >\r\n                Sign Up\r\n              </Button>\r\n            </NavLink>\r\n          )}\r\n\r\n          {showLogout && (\r\n            <Box\r\n              boxShadow={\r\n                \" rgba(50, 50, 93, 0.25) 0px 6px 12px -2px, rgba(0, 0, 0, 0.3) 0px 3px 7px -3px\"\r\n              }\r\n              position={\"absolute\"}\r\n              top={\"75px\"}\r\n              right={\"20px\"}\r\n              padding={\"10px 40px\"}\r\n              backgroundColor={\"white\"}\r\n            >\r\n              <Text fontSize={\"15px\"}>{email}</Text>\r\n              <Box\r\n                display={\"flex\"}\r\n                alignItems={\"center\"}\r\n                gap={\"10px\"}\r\n                fontSize={\"20px\"}\r\n                cursor={\"pointer\"}\r\n                onClick={handleLogout}\r\n              >\r\n                <Text>Logout</Text>\r\n                <IoMdLogOut color=\"red\" />\r\n              </Box>\r\n            </Box>\r\n          )}\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* responsive navbar  */}\r\n      <Box\r\n        display={{\r\n          base: \"flex\",\r\n          lg: \"none\",\r\n        }}\r\n        justifyContent={\"space-between\"}\r\n        // backgroundColor={\"#27395F\"}\r\n        color={\"#28a4de\"}\r\n        marginBottom={\"50px\"}\r\n        marginTop={\"10px\"}\r\n        boxShadow={\"rgba(17, 17, 26, 0.1) 0px 1px 0px\"}\r\n      >\r\n        <Image src={logoImg} width={\"180px\"}></Image>\r\n        <Box className=\"ThreeLines\" cursor={\"pointer\"}>\r\n          <VscThreeBars\r\n            style={{ height: \"40px\", width: \"30px\" }}\r\n            onClick={() => {\r\n              onToggle();\r\n              isOpen;\r\n            }}\r\n          />\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* navbar Drawer/responsive code  */}\r\n      <Drawer isOpen={isOpen} placement=\"right\" onClose={() => {}}>\r\n        <DrawerOverlay />\r\n        <DrawerContent>\r\n          <DrawerCloseButton onClick={onClose} />\r\n\r\n          <DrawerBody>\r\n            <Box display={\"grid\"} gap={\"15px\"} fontSize={\"20px\"}>\r\n              <Text fontSize={\"14px\"} textDecoration={\"underline\"}>{email}</Text>\r\n              <NavLink className={\"nav-link\"} to=\"/\" onClick={onClose}>\r\n                Home\r\n              </NavLink>\r\n              <Box display={\"flex\"}>\r\n                <NavLink to=\"/posts\" className={\"nav-link\"}>\r\n                  Posts\r\n                </NavLink>{\" \"}\r\n                {/* <ChevronDownIcon\r\n                  style={{\r\n                    position: \"relative\",\r\n                    top: \"5px\",\r\n                    marginLeft: \"10px\",\r\n                  }}\r\n                /> */}\r\n              </Box>\r\n              <Box display={\"flex\"}>\r\n                <NavLink to=\"/course\" className={\"nav-link\"}>\r\n                  Course\r\n                </NavLink>{\" \"}\r\n                {/* <ChevronDownIcon\r\n                  style={{\r\n                    position: \"relative\",\r\n                    top: \"5px\",\r\n                    marginLeft: \"5px\",\r\n                  }}\r\n                /> */}\r\n              </Box>\r\n              {token && <NavLink to=\"/mycourse\" onClick={onClose} className={\"nav-link\"}>\r\n                My Course\r\n              </NavLink>}\r\n              <NavLink to=\"/free\" onClick={onClose} className={\"nav-link\"}>\r\n                Free Resources\r\n              </NavLink>\r\n              {token ? (\r\n                <Text onClick={handleLogout} className={\"nav-link\"}>\r\n                  Logout\r\n                </Text>\r\n              ) : (\r\n                <NavLink to=\"/login\" onClick={onClose} className={\"nav-link\"}>\r\n                  Login\r\n                </NavLink>\r\n              )}\r\n\r\n              <NavLink to=\"/signup\" onClick={onClose} className={\"nav-link\"}>\r\n                Sign Up\r\n              </NavLink>\r\n            </Box>\r\n          </DrawerBody>\r\n\r\n          <DrawerFooter>\r\n            <Button variant=\"outline\" mr={3} onClick={onClose}>\r\n              Cancel\r\n            </Button>\r\n          </DrawerFooter>\r\n        </DrawerContent>\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\nexport default Navbar;"],"names":["baseUrl","SingleCourse","lazy","courseData","setCourseData","useState","isLoading","setIsLoading","useEffect","localStorage","setItem","async","data","axios","get","concat","err","alert","getCourseData","_jsx","Spinar","_jsxs","_Fragment","children","Navbar","Box","display","gridTemplateColumns","base","sm","md","lg","gap","margin","fontFamily","map","ele","Suspense","fallback","_id","_JSON$parse","_JSON$parse2","_JSON$parse3","navigate","useNavigate","isOpen","onClose","onToggle","useDisclosure","showPostDropdown","setShowPostDropdown","showCourseDropdown","setShowCourseDropdown","postData","setPostData","isHovered","setIsHovered","showLogout","setShowLogout","token","setToken","JSON","parse","getItem","userName","setUserName","email","setEmail","handleLogout","obj","window","confirm","stringify","dataPost","uniquePosts","Array","from","Map","post","category","values","getPostData","dataCourse","className","alignItems","backgroundColor","color","boxShadow","height","position","width","top","marginBottom","zIndex","paddingRight","NavLink","to","Image","src","logoImg","justifyContent","fontSize","onMouseEnter","handlePostMouseEnter","onMouseLeave","handlePostMouseLeave","ChevronDownIcon","style","marginLeft","flexDirection","textAlign","padding","borderRadius","index","handleCourseMouseEnter","handleCourseMouseLeave","name","Text","h","ml","cursor","onClick","toUpperCase","Button","fontWeight","right","IoMdLogOut","marginTop","VscThreeBars","Drawer","placement","DrawerOverlay","DrawerContent","DrawerCloseButton","DrawerBody","textDecoration","DrawerFooter","variant","mr"],"sourceRoot":""}