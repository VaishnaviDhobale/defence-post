{"version":3,"file":"static/js/741.5840573d.chunk.js","mappings":"gIAEO,MAAMA,EAAU,gC,qJCMvB,MAAMC,GAAiBC,EAAAA,EAAAA,OAAK,IAAM,gCAwFlC,QAtFA,WAAqB,IAADC,EAClB,IAAIC,EAAkE,QAA7DD,EAAGE,KAAKC,MAAMC,aAAaC,QAAQ,kCAA0B,IAAAL,OAAA,EAA1DA,EAA4DC,MACxE,MAAMK,EAAU,CACdL,MAAOA,EACP,eAAgB,oBAIlB,IAAKM,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,KAClCC,EAAWC,IAAgBF,EAAAA,EAAAA,WAAS,GAkBzC,OAJAG,EAAAA,EAAAA,YAAU,MAZVC,iBACE,IAAK,IAADC,EACFH,GAAa,GACb,IAAII,QAAqBC,EAAAA,EAAMC,IAAI,GAADC,OAAIrB,EAAAA,EAAO,cAAc,CAAES,YAC7DE,EAAwB,OAAZO,QAAY,IAAZA,GAAkB,QAAND,EAAZC,EAAcI,YAAI,IAAAL,OAAN,EAAZA,EAAoBK,MAChCR,GAAa,EACf,CAAE,MAAOS,GACPT,GAAa,GACbU,QAAQC,IAAIF,EACd,CACF,CAGEG,EAAiB,GAChB,IAECb,GAEAc,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAACG,EAAAA,EAAM,OAMXC,EAAAA,EAAAA,MAAAH,EAAAA,SAAA,CAAAC,SAAA,EACAF,EAAAA,EAAAA,KAACK,EAAAA,QAAM,IACiB,KAAb,OAARtB,QAAQ,IAARA,OAAQ,EAARA,EAAUuB,SAAiB7B,GAwB1BuB,EAAAA,EAAAA,KAACO,EAAAA,GAAG,CACFC,QAAQ,OACRC,oBAAqB,CACnBC,KAAM,iBACNC,GAAI,iBACJC,GAAI,iBACJC,GAAI,kBAENC,IAAI,OACJC,OAAQ,CAAEL,KAAM,YAAaC,GAAI,cACjCK,WAAW,SAAQd,SAEV,OAARnB,QAAQ,IAARA,OAAQ,EAARA,EAAUkC,KAAI,CAACC,EAAKC,KAEjBnB,EAAAA,EAAAA,KAACoB,EAAAA,SAAQ,CAACC,UAAUrB,EAAAA,EAAAA,KAACG,EAAAA,EAAM,IAAID,UAC7BF,EAAAA,EAAAA,KAAC1B,EAAc,CAAaqB,KAAMuB,GAAbC,UAtC7Bf,EAAAA,EAAAA,MAACG,EAAAA,GAAG,CAAAL,SAAA,EACFF,EAAAA,EAAAA,KAACsB,EAAAA,EAAI,CACHC,WAAW,OACXC,SAAS,OACTR,WAAW,SACXS,UAAU,SACVC,UAAW,QAAQxB,SACpB,2DAGDF,EAAAA,EAAAA,KAAC2B,EAAAA,GAAI,CAACC,GAAI,UAAU1B,UAClBF,EAAAA,EAAAA,KAAC6B,EAAAA,EAAM,CACLC,GAAG,IACHC,GAAI,UACJC,KAAK,KACLhB,WAAW,SACXiB,MAAO,QAAQ/B,SAChB,2BA6Bb,C,kVC8TA,QAhYC,WAAmB,IAAD1B,EAAA0D,EAAAC,EACnB,MAAMC,GAAWC,EAAAA,EAAAA,OACT,OAAEC,EAAM,QAAEC,EAAO,SAAEC,IAAaC,EAAAA,EAAAA,MAC/BC,EAAkBC,IAAuB1D,EAAAA,EAAAA,WAAS,IAClD2D,EAAoBC,IAAyB5D,EAAAA,EAAAA,WAAS,IACtD6D,EAAYC,IAAiB9D,EAAAA,EAAAA,UAAS,KACtC+D,EAAUC,IAAehE,EAAAA,EAAAA,UAAS,KAClCiE,EAAWC,IAAgBlE,EAAAA,EAAAA,WAAS,GAG3C,IAAKmE,EAAYC,IAAiBpE,EAAAA,EAAAA,WAAS,IACtCR,EAAO6E,IAAYrE,EAAAA,EAAAA,UACoC,QAD5BT,EAC9BE,KAAKC,MAAMC,aAAaC,QAAQ,kCAA0B,IAAAL,OAAA,EAA1DA,EAA4DC,QAEzD8E,EAAUC,IAAevE,EAAAA,EAAAA,UAC8B,QADtBiD,EACpCxD,KAAKC,MAAMC,aAAaC,QAAQ,kCAA0B,IAAAqD,OAAA,EAA1DA,EAA4DqB,WAEzDE,EAAOC,IAAYzE,EAAAA,EAAAA,UACoC,QAD5BkD,EAC9BzD,KAAKC,MAAMC,aAAaC,QAAQ,kCAA0B,IAAAsD,OAAA,EAA1DA,EAA4DsB,OAgD1DE,EAAeA,KAEjB,IAAIC,EAAM,CAAEnF,MAAO,KAAM8E,SAAU,KAAME,MAAO,MAD3BI,OAAOC,QAAQ,sCAGlClF,aAAamF,QAAQ,yBAA0BrF,KAAKsF,UAAUJ,IAC9DxB,EAAS,KACX,EAUF,OAPAhD,EAAAA,EAAAA,YAAU,KAzBQC,WAChB,IACE,IAAI4E,QAAiBzE,EAAAA,EAAMC,IAAI,GAADC,OAAIrB,EAAAA,EAAO,WAGzC,MAAM6F,EAAcC,MAAMC,KAAK,IAAIC,IAAIJ,EAAStE,KAAKsB,KAAIqD,GAAQ,CAACA,EAAKC,SAAUD,MAAQE,UAGzFvB,EAAYiB,EACd,CAAE,MAAOtE,GACP6E,MAAM7E,EACR,GAeA8E,GApCkBrF,WAClB,IACE,IAAIsF,QAAmBnF,EAAAA,EAAMC,IAAI,GAADC,OAAIrB,EAAAA,EAAO,aAC3C0E,EAAc4B,EAAWhF,KAC3B,CAAE,MAAOC,GACP6E,MAAM7E,EACR,GA+BAgF,EAAe,GACd,KAKDxE,EAAAA,EAAAA,MAAAH,EAAAA,SAAA,CAAAC,SAAA,EACEE,EAAAA,EAAAA,MAACG,EAAAA,GAAG,CACFsE,UAAU,SACVrE,QAAS,CACPE,KAAM,OACNG,GAAI,QAENJ,oBAAqBhC,EAAQ,UAAY,cACzCqG,WAAY,SACZC,gBAAiB,QACjB9C,MAAO,QACP+C,UACE,4EAEFhE,WAAY,SACZiE,OAAQ,OACRC,SAAU,QACVC,MAAO,OACPC,IAAK,MACLC,aAAc,OACdC,OAAQ,IACRC,aAAc,OACdrF,SAAA,EAEAF,EAAAA,EAAAA,KAACwF,EAAAA,GAAO,CAACX,UAAU,gBAAgBjD,GAAI,IAAI1B,UACzCF,EAAAA,EAAAA,KAACyF,EAAAA,EAAK,CAACC,IAAKC,EAASR,MAAO,QAASF,OAAQ,YAG/C7E,EAAAA,EAAAA,MAACG,EAAAA,GAAG,CACFsE,UAAU,MACVrE,QAAS,OACToF,eAAgB,WAChBpE,SAAU,OACVsD,WAAY,SAAS5E,SAAA,EAErBF,EAAAA,EAAAA,KAACwF,EAAAA,GAAO,CAACX,UAAU,sBAAsBjD,GAAG,IAAG1B,SAAC,UAGhDE,EAAAA,EAAAA,MAACG,EAAAA,GAAG,CACFC,QAAS,OACTqE,UAAU,aAGVgB,aAxGmBC,KAC3BnD,GAAoB,EAAK,EAwGjBoD,aArGmBC,KAC3BrD,GAAoB,EAAM,EAoGiBzC,SAAA,EAEnCF,EAAAA,EAAAA,KAACwF,EAAAA,GAAO,CAACX,UAAU,WAAWjD,GAAG,SAAQ1B,SAAC,UAE/B,KACXF,EAAAA,EAAAA,KAACiG,EAAAA,EAAe,CACdC,MAAO,CAAEhB,SAAU,WAAYE,IAAK,MAAOe,WAAY,SAExDzD,IACC1C,EAAAA,EAAAA,KAACO,EAAAA,GAAG,CACFsE,UAAS,YAAAnF,OACPwD,EAAY,kCAAoC,IAElDgC,SAAU,WACVE,IAAK,OACL5E,QAAS,OACT4F,cAAe,SACfrB,gBAAiB,QACjBtD,UAAW,OACXuD,UAAU,kCACVqB,QAAS,YACTC,aAAc,OAAOpG,SAEpB8C,EAAS/B,KAAI,CAACC,EAAKC,KAEhBnB,EAAAA,EAAAA,KAACwF,EAAAA,GAAO,CAAC5D,GAAE,mBAAAlC,OAAqBwB,EAAIqF,IAAG,KAAA7G,OAAIyB,EAAK,KAAAzB,OAAIwB,EAAIqD,UAAWrE,SAChEgB,EAAIqD,mBAQjBnE,EAAAA,EAAAA,MAACG,EAAAA,GAAG,CACFC,QAAS,OACTqE,UAAU,aACVgB,aArIqBW,KAC7B3D,GAAsB,EAAK,EAqInBkD,aAlIqBU,KAC7B5D,GAAsB,EAAM,EAiIiB3C,SAAA,EAErCF,EAAAA,EAAAA,KAACwF,EAAAA,GAAO,CAAC5D,GAAG,UAAUiD,UAAW,WAAW3E,SAAC,WAElC,KACXF,EAAAA,EAAAA,KAACiG,EAAAA,EAAe,CACdC,MAAO,CAAEhB,SAAU,WAAYE,IAAK,MAAOe,WAAY,SAExDvD,IACC5C,EAAAA,EAAAA,KAACO,EAAAA,GAAG,CACFsE,UAAS,YAAAnF,OACPwD,EAAY,kCAAoC,IAElDgC,SAAU,WACVE,IAAK,OACL5E,QAAS,OACT4F,cAAe,SACfrB,gBAAiB,QACjBtD,UAAW,OACX4E,QAAS,YACTC,aAAc,OACdtB,UAAU,kCAAiC9E,SAE1C0C,GACCE,EAAW7B,KAAI,CAACC,EAAKC,KAEjBnB,EAAAA,EAAAA,KAACwF,EAAAA,GAAO,CACN5D,GAAE,gBAAAlC,OAAkBwB,EAAIqF,KACxB1B,UAAW,WAAW3E,SAErBgB,EAAIwF,cAOlBjI,IACCuB,EAAAA,EAAAA,KAACwF,EAAAA,GAAO,CAACX,UAAU,sBAAsBjD,GAAG,YAAW1B,SAAC,eAK1DF,EAAAA,EAAAA,KAACwF,EAAAA,GAAO,CAACX,UAAU,sBAAsBjD,GAAG,QAAO1B,SAAC,SAK1C,8BAATuD,IACCzD,EAAAA,EAAAA,KAACwF,EAAAA,GAAO,CAACX,UAAU,sBAAsBjD,GAAI,WAAW1B,SAAC,aAKzDzB,IACAuB,EAAAA,EAAAA,KAACwF,EAAAA,GAAO,CAACX,UAAU,sBAAsBjD,GAAG,SAAQ1B,SAAC,UAItDzB,IACCuB,EAAAA,EAAAA,KAACsB,EAAAA,EAAI,CACHyD,gBAAiB,YACjBuB,aAAc,MACdnB,MAAO,OACPwB,EAAG,OAEH1E,MAAO,QACP2E,GAAI,OACJC,OAAQ,UACRrG,QAAS,OACTsE,WAAY,SACZc,eAAgB,SAChBkB,QAASA,KACPzD,GAAeD,EAAW,EAC1BlD,SAEDqD,EAAS,GAAGwD,oBAInB3G,EAAAA,EAAAA,MAACG,EAAAA,GAAG,CAACC,QAAS,OAAQM,IAAK,OAAOZ,SAAA,EAC9BzB,IACAuB,EAAAA,EAAAA,KAACwF,EAAAA,GAAO,CACNX,UAAU,aACVqB,MAAO,CAAEC,WAAY,OACrBvE,GAAG,UAAS1B,UAEZF,EAAAA,EAAAA,KAAC6B,EAAAA,EAAM,CACLsE,WAAY,OACZpB,gBAAiB,UACjB9C,MAAO,QACPV,WAAY,MAAMrB,SACnB,cAMJkD,IACChD,EAAAA,EAAAA,MAACG,EAAAA,GAAG,CACFyE,UACE,iFAEFE,SAAU,WACVE,IAAK,OACL4B,MAAO,OACPX,QAAS,YACTtB,gBAAiB,QAAQ7E,SAAA,EAEzBF,EAAAA,EAAAA,KAACsB,EAAAA,EAAI,CAACE,SAAU,OAAOtB,SAAEuD,KACzBrD,EAAAA,EAAAA,MAACG,EAAAA,GAAG,CACFC,QAAS,OACTsE,WAAY,SACZhE,IAAK,OACLU,SAAU,OACVqF,OAAQ,UACRC,QAASnD,EAAazD,SAAA,EAEtBF,EAAAA,EAAAA,KAACsB,EAAAA,EAAI,CAAApB,SAAC,YACNF,EAAAA,EAAAA,KAACiH,EAAAA,IAAU,CAAChF,MAAM,qBAQ5B7B,EAAAA,EAAAA,MAACG,EAAAA,GAAG,CACFC,QAAS,CACPE,KAAM,OACNG,GAAI,QAEN+E,eAAgB,gBAEhB3D,MAAO,UACPoD,aAAc,OACd3D,UAAW,OACXsD,UAAW,oCAAoC9E,SAAA,EAE/CF,EAAAA,EAAAA,KAACyF,EAAAA,EAAK,CAACC,IAAKC,EAASR,MAAO,WAC5BnF,EAAAA,EAAAA,KAACO,EAAAA,GAAG,CAACsE,UAAU,aAAagC,OAAQ,UAAU3G,UAC5CF,EAAAA,EAAAA,KAACkH,EAAAA,IAAY,CACXhB,MAAO,CAAEjB,OAAQ,OAAQE,MAAO,QAChC2B,QAASA,KACPtE,GACM,UAOdpC,EAAAA,EAAAA,MAAC+G,EAAAA,EAAM,CAAC7E,OAAQA,EAAQ8E,UAAU,QAAQ7E,QAASA,OAASrC,SAAA,EAC1DF,EAAAA,EAAAA,KAACqH,EAAAA,EAAa,KACdjH,EAAAA,EAAAA,MAACkH,EAAAA,EAAa,CAAApH,SAAA,EACZF,EAAAA,EAAAA,KAACuH,EAAAA,EAAiB,CAACT,QAASvE,KAE5BvC,EAAAA,EAAAA,KAACwH,EAAAA,EAAU,CAAAtH,UACTE,EAAAA,EAAAA,MAACG,EAAAA,GAAG,CAACC,QAAS,OAAQM,IAAK,OAAQU,SAAU,OAAOtB,SAAA,EAClDF,EAAAA,EAAAA,KAACsB,EAAAA,EAAI,CAACE,SAAU,OAAQiG,eAAgB,YAAYvH,SAAEuD,KACtDzD,EAAAA,EAAAA,KAACwF,EAAAA,GAAO,CAACX,UAAW,WAAYjD,GAAG,IAAIkF,QAASvE,EAAQrC,SAAC,UAGzDE,EAAAA,EAAAA,MAACG,EAAAA,GAAG,CAACC,QAAS,OAAON,SAAA,EACnBF,EAAAA,EAAAA,KAACwF,EAAAA,GAAO,CAAC5D,GAAG,SAASiD,UAAW,WAAW3E,SAAC,UAEjC,QASbE,EAAAA,EAAAA,MAACG,EAAAA,GAAG,CAACC,QAAS,OAAON,SAAA,EACnBF,EAAAA,EAAAA,KAACwF,EAAAA,GAAO,CAAC5D,GAAG,UAAUiD,UAAW,WAAW3E,SAAC,WAElC,OASZzB,IAASuB,EAAAA,EAAAA,KAACwF,EAAAA,GAAO,CAAC5D,GAAG,YAAYkF,QAASvE,EAASsC,UAAW,WAAW3E,SAAC,eAG3EF,EAAAA,EAAAA,KAACwF,EAAAA,GAAO,CAAC5D,GAAG,QAAQkF,QAASvE,EAASsC,UAAW,WAAW3E,SAAC,mBAG5DzB,GACCuB,EAAAA,EAAAA,KAACsB,EAAAA,EAAI,CAACwF,QAASnD,EAAckB,UAAW,WAAW3E,SAAC,YAIpDF,EAAAA,EAAAA,KAACwF,EAAAA,GAAO,CAAC5D,GAAG,SAASkF,QAASvE,EAASsC,UAAW,WAAW3E,SAAC,WAKhEF,EAAAA,EAAAA,KAACwF,EAAAA,GAAO,CAAC5D,GAAG,UAAUkF,QAASvE,EAASsC,UAAW,WAAW3E,SAAC,kBAMnEF,EAAAA,EAAAA,KAAC0H,EAAAA,EAAY,CAAAxH,UACXF,EAAAA,EAAAA,KAAC6B,EAAAA,EAAM,CAAC8F,QAAQ,UAAUC,GAAI,EAAGd,QAASvE,EAAQrC,SAAC,qBAQ/D,C","sources":["BaseUrl.jsx","Pages/MyCourse.jsx","components/Navbar.jsx"],"sourcesContent":["\r\n\r\nexport const baseUrl = \"https://backend.defencepost.in\"\r\n// export const baseUrl = \"http://localhost:8000\"","import axios from \"axios\";\r\nimport { Box, Text, Button } from \"@chakra-ui/react\";\r\nimport { Suspense, lazy, useEffect, useState } from \"react\";\r\n\r\nimport { Spinar } from \"../components/Spinar\";\r\nimport { baseUrl } from \"../BaseUrl\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Navbar from \"../components/Navbar\";\r\nconst SingleMyCourse = lazy(() => import(\"../components/SingleMyCourse\"));\r\n\r\nfunction MyCourse() {\r\n  let token = JSON.parse(localStorage.getItem(\"DefencePostUserDetails\"))?.token;\r\n  const headers = {\r\n    token: token, // Replace with your actual authorization token\r\n    \"Content-Type\": \"application/json\", // Adjust content type as needed\r\n    // Add any other headers you need\r\n  };\r\n\r\n  let [myCourse, setMyCourse] = useState([]);\r\n  let [isLoading, setIsLoading] = useState(false);\r\n\r\n  async function getMyCourseData() {\r\n    try {\r\n      setIsLoading(true);\r\n      let myCourseData = await axios.get(`${baseUrl}/mycourse/`, { headers });\r\n      setMyCourse(myCourseData?.data?.data);\r\n      setIsLoading(false);\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getMyCourseData();\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <>\r\n        <Spinar />\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <Navbar />\r\n      {myCourse?.length === 0 || !token ? (\r\n        <Box>\r\n          <Text\r\n            fontWeight=\"bold\"\r\n            fontSize=\"20px\"\r\n            fontFamily=\"Barlow\"\r\n            textAlign=\"center\"\r\n            marginTop={\"160px\"}\r\n          >\r\n            Start your CDS journey with our interactive Booklets.\r\n          </Text>\r\n          <Link to={\"/course\"}>\r\n            <Button\r\n              mt=\"4\"\r\n              bg={\"#28a4de\"}\r\n              size=\"lg\"\r\n              fontFamily=\"Barlow\"\r\n              color={\"white\"}\r\n            >\r\n              Explore Courses\r\n            </Button>\r\n          </Link>\r\n        </Box>\r\n      ) : (\r\n        <Box\r\n          display=\"grid\"\r\n          gridTemplateColumns={{\r\n            base: \"repeat(1, 1fr)\",\r\n            sm: \"repeat(1, 1fr)\",\r\n            md: \"repeat(2, 1fr)\",\r\n            lg: \"repeat(3, 1fr)\",\r\n          }}\r\n          gap=\"50px\"\r\n          margin={{ base: \"30px 20px\", sm: \"100px 60px\" }}\r\n          fontFamily=\"Barlow\"\r\n        >\r\n          {myCourse?.map((ele, index) => {\r\n            return (\r\n              <Suspense fallback={<Spinar />}>\r\n                <SingleMyCourse key={index} data={ele} />\r\n              </Suspense>\r\n            );\r\n          })}\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n}\r\nexport default MyCourse;\r\n","import { NavLink, useNavigate } from \"react-router-dom\";\r\nimport { Box, Image, Select, Input, Button, Text } from \"@chakra-ui/react\";\r\nimport logoImg from \"../Images/Logo-black.jpeg\";\r\n// import { VscThreeBars } from \"react-icons/vsc\";\r\nimport { IoReorderThreeOutline } from \"react-icons/io5\";\r\nimport { ChevronDownIcon } from \"@chakra-ui/icons\";\r\nimport { IoMdLogOut } from \"react-icons/io\";\r\nimport \"../css/navbar.css\";\r\nimport \"animate.css/animate.min.css\";\r\nimport { VscThreeBars } from \"react-icons/vsc\";\r\n\r\n// import for Drawer\r\nimport {\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerFooter,\r\n  DrawerHeader,\r\n  DrawerOverlay,\r\n  DrawerContent,\r\n  DrawerCloseButton,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { AlertBox } from \"./AlertBox\";\r\nimport { baseUrl } from \"../BaseUrl\";\r\n\r\n// import \"../css/navbar.css\";\r\n function Navbar() {\r\nconst navigate = useNavigate();\r\n  const { isOpen, onClose, onToggle } = useDisclosure();\r\n  const [showPostDropdown, setShowPostDropdown] = useState(false);\r\n  const [showCourseDropdown, setShowCourseDropdown] = useState(false);\r\n  const [courseData, setCourseData] = useState([]);\r\n  const [postData, setPostData] = useState([]);\r\n  const [isHovered, setIsHovered] = useState(true);\r\n\r\n  // logout\r\n  let [showLogout, setShowLogout] = useState(false);\r\n  let [token, setToken] = useState(\r\n    JSON.parse(localStorage.getItem(\"DefencePostUserDetails\"))?.token\r\n  );\r\n  let [userName, setUserName] = useState(\r\n    JSON.parse(localStorage.getItem(\"DefencePostUserDetails\"))?.userName\r\n  );\r\n  let [email, setEmail] = useState(\r\n    JSON.parse(localStorage.getItem(\"DefencePostUserDetails\"))?.email\r\n  );\r\n\r\n\r\n  const handlePostMouseEnter = () => {\r\n    setShowPostDropdown(true);\r\n  };\r\n\r\n  const handlePostMouseLeave = () => {\r\n    setShowPostDropdown(false);\r\n  };\r\n\r\n  // Course dropdown handle\r\n  const handleCourseMouseEnter = () => {\r\n    setShowCourseDropdown(true);\r\n  };\r\n\r\n  const handleCourseMouseLeave = () => {\r\n    setShowCourseDropdown(false);\r\n  };\r\n\r\n  // get all course data\r\n  let getCourseData = async () => {\r\n    try {\r\n      let dataCourse = await axios.get(`${baseUrl}/course/`);\r\n      setCourseData(dataCourse.data);\r\n    } catch (err) {\r\n      alert(err);\r\n    }\r\n  };\r\n\r\n  // get all course data\r\n  let getPostData = async () => {\r\n    try {\r\n      let dataPost = await axios.get(`${baseUrl}/post/`);\r\n      \r\n      // Extract unique categories using Set\r\n      const uniquePosts = Array.from(new Map(dataPost.data.map(post => [post.category, post])).values());\r\n  \r\n      // Set the unique categories in your state or wherever needed\r\n      setPostData(uniquePosts);\r\n    } catch (err) {\r\n      alert(err);\r\n    }\r\n  };\r\n  \r\n\r\n  // handle logout\r\n  let handleLogout = () => {\r\n    const userResponse = window.confirm(\"Are you sure you want to logout?\");\r\n    let obj = { token: null, userName: null, email: null };\r\n    if (userResponse) {\r\n      localStorage.setItem(\"DefencePostUserDetails\", JSON.stringify(obj));\r\n      navigate(\"/\")\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPostData();\r\n    getCourseData();\r\n  }, []);\r\n\r\n  \r\n  // console.log(postData);\r\n  return (\r\n    <>\r\n      <Box\r\n        className=\"header\"\r\n        display={{\r\n          base: \"none\",\r\n          lg: \"grid\",\r\n        }}\r\n        gridTemplateColumns={token ? \"30% 1fr\" : \"30% 1fr 10%\"}\r\n        alignItems={\"center\"}\r\n        backgroundColor={\"white\"}\r\n        color={\"black\"}\r\n        boxShadow={\r\n          \"rgba(0, 0, 0, 0.1) 0px 4px 6px -1px, rgba(0, 0, 0, 0.06) 0px 2px 4px -1px\"\r\n        }\r\n        fontFamily={\"Barlow\"}\r\n        height={\"70px\"}\r\n        position={\"fixed\"} //pehele sticky than mene ye add kiya he\r\n        width={\"100%\"} // isko add kiya he\r\n        top={\"0px\"}\r\n        marginBottom={\"50px\"}\r\n        zIndex={1000}\r\n        paddingRight={\"30px\"}\r\n        // mb={\"740px\"}\r\n      >\r\n        <NavLink className=\"logo nav-link\" to={\"/\"}>\r\n          <Image src={logoImg} width={\"200px\"} height={\"100%\"}></Image>\r\n        </NavLink>\r\n\r\n        <Box\r\n          className=\"nav\"\r\n          display={\"flex\"}\r\n          justifyContent={\"flex-end\"}\r\n          fontSize={\"18px\"}\r\n          alignItems={\"center\"}\r\n        >\r\n          <NavLink className=\"navContent nav-link\" to=\"/\">\r\n            Home\r\n          </NavLink>\r\n          <Box\r\n            display={\"flex\"}\r\n            className=\"navContent\"\r\n            // border={\"1px solid red\"}\r\n            // paddingBottom={\"2px\"}\r\n            onMouseEnter={handlePostMouseEnter}\r\n            onMouseLeave={handlePostMouseLeave}\r\n          >\r\n            <NavLink className=\"nav-link\" to=\"/posts\">\r\n              Posts\r\n            </NavLink>{\" \"}\r\n            <ChevronDownIcon\r\n              style={{ position: \"relative\", top: \"5px\", marginLeft: \"5px\" }}\r\n            />\r\n            {showPostDropdown && (\r\n              <Box\r\n                className={`dropdown ${\r\n                  isHovered ? \"animate_animated animate_zoomIn\" : \"\"\r\n                }`}\r\n                position={\"absolute\"}\r\n                top={\"45px\"}\r\n                display={\"flex\"}\r\n                flexDirection={\"column\"}\r\n                backgroundColor={\"white\"}\r\n                textAlign={\"left\"}\r\n                boxShadow=\"rgba(0, 0, 0, 0.16) 0px 1px 4px\"\r\n                padding={\"10px 20px\"}\r\n                borderRadius={\"10px\"}\r\n              >\r\n                {postData.map((ele, index) => {\r\n                  return (\r\n                    <NavLink to={`/singlepostpage/${ele._id}/${index}/${ele.category}`}>\r\n                      {ele.category}\r\n                    </NavLink>\r\n                  );\r\n                })}\r\n              </Box>\r\n            )}\r\n          </Box>\r\n\r\n          <Box\r\n            display={\"flex\"}\r\n            className=\"navContent\"\r\n            onMouseEnter={handleCourseMouseEnter}\r\n            onMouseLeave={handleCourseMouseLeave}\r\n          >\r\n            <NavLink to=\"/course\" className={\"nav-link\"}>\r\n              Course\r\n            </NavLink>{\" \"}\r\n            <ChevronDownIcon\r\n              style={{ position: \"relative\", top: \"5px\", marginLeft: \"5px\" }}\r\n            />\r\n            {showCourseDropdown && (\r\n              <Box\r\n                className={`dropdown ${\r\n                  isHovered ? \"animate_animated animate_zoomIn\" : \"\"\r\n                }`}\r\n                position={\"absolute\"}\r\n                top={\"45px\"}\r\n                display={\"flex\"}\r\n                flexDirection={\"column\"}\r\n                backgroundColor={\"white\"}\r\n                textAlign={\"left\"}\r\n                padding={\"10px 20px\"}\r\n                borderRadius={\"10px\"}\r\n                boxShadow=\"rgba(0, 0, 0, 0.16) 0px 1px 4px\"\r\n              >\r\n                {showCourseDropdown &&\r\n                  courseData.map((ele, index) => {\r\n                    return (\r\n                      <NavLink\r\n                        to={`/viewdetails/${ele._id}`}\r\n                        className={\"nav-link\"}\r\n                      >\r\n                        {ele.name}\r\n                      </NavLink>\r\n                    );\r\n                  })}\r\n              </Box>\r\n            )}\r\n          </Box>\r\n          {token && (\r\n            <NavLink className=\"navContent nav-link\" to=\"/mycourse\">\r\n              My Course\r\n            </NavLink>\r\n          )}\r\n\r\n          <NavLink className=\"navContent nav-link\" to=\"/free\">\r\n            Free\r\n          </NavLink>\r\n\r\n          {/* Data */}\r\n          {email == \"masaieducation17@gmail.com\" && (\r\n            <NavLink className=\"navContent nav-link\" to={\"/datahub\"}>\r\n              DataHub\r\n            </NavLink>\r\n          )}\r\n\r\n          {!token && (\r\n            <NavLink className=\"navContent nav-link\" to=\"/login\">\r\n              Login\r\n            </NavLink>\r\n          )}\r\n          {token && (\r\n            <Text\r\n              backgroundColor={\"green.300\"}\r\n              borderRadius={\"50%\"}\r\n              width={\"40px\"}\r\n              h={\"40px\"}\r\n              // marginRight={\"20px\"}\r\n              color={\"white\"}\r\n              ml={\"20px\"}\r\n              cursor={\"pointer\"}\r\n              display={\"flex\"}\r\n              alignItems={\"center\"}\r\n              justifyContent={\"center\"}\r\n              onClick={() => {\r\n                setShowLogout(!showLogout);\r\n              }}\r\n            >\r\n              {userName[0].toUpperCase()}\r\n            </Text>\r\n          )}\r\n        </Box>\r\n        <Box display={\"flex\"} gap={\"10px\"}>\r\n          {!token && (\r\n            <NavLink\r\n              className=\"navContent\"\r\n              style={{ marginLeft: \"0px\" }}\r\n              to=\"/signup\"\r\n            >\r\n              <Button\r\n                marginLeft={\"30px\"}\r\n                backgroundColor={\"#28a4de\"}\r\n                color={\"white\"}\r\n                fontWeight={\"500\"}\r\n              >\r\n                Sign Up\r\n              </Button>\r\n            </NavLink>\r\n          )}\r\n\r\n          {showLogout && (\r\n            <Box\r\n              boxShadow={\r\n                \" rgba(50, 50, 93, 0.25) 0px 6px 12px -2px, rgba(0, 0, 0, 0.3) 0px 3px 7px -3px\"\r\n              }\r\n              position={\"absolute\"}\r\n              top={\"75px\"}\r\n              right={\"20px\"}\r\n              padding={\"10px 40px\"}\r\n              backgroundColor={\"white\"}\r\n            >\r\n              <Text fontSize={\"15px\"}>{email}</Text>\r\n              <Box\r\n                display={\"flex\"}\r\n                alignItems={\"center\"}\r\n                gap={\"10px\"}\r\n                fontSize={\"20px\"}\r\n                cursor={\"pointer\"}\r\n                onClick={handleLogout}\r\n              >\r\n                <Text>Logout</Text>\r\n                <IoMdLogOut color=\"red\" />\r\n              </Box>\r\n            </Box>\r\n          )}\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* responsive navbar  */}\r\n      <Box\r\n        display={{\r\n          base: \"flex\",\r\n          lg: \"none\",\r\n        }}\r\n        justifyContent={\"space-between\"}\r\n        // backgroundColor={\"#27395F\"}\r\n        color={\"#28a4de\"}\r\n        marginBottom={\"50px\"}\r\n        marginTop={\"10px\"}\r\n        boxShadow={\"rgba(17, 17, 26, 0.1) 0px 1px 0px\"}\r\n      >\r\n        <Image src={logoImg} width={\"180px\"}></Image>\r\n        <Box className=\"ThreeLines\" cursor={\"pointer\"}>\r\n          <VscThreeBars\r\n            style={{ height: \"40px\", width: \"30px\" }}\r\n            onClick={() => {\r\n              onToggle();\r\n              isOpen;\r\n            }}\r\n          />\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* navbar Drawer/responsive code  */}\r\n      <Drawer isOpen={isOpen} placement=\"right\" onClose={() => {}}>\r\n        <DrawerOverlay />\r\n        <DrawerContent>\r\n          <DrawerCloseButton onClick={onClose} />\r\n\r\n          <DrawerBody>\r\n            <Box display={\"grid\"} gap={\"15px\"} fontSize={\"20px\"}>\r\n              <Text fontSize={\"14px\"} textDecoration={\"underline\"}>{email}</Text>\r\n              <NavLink className={\"nav-link\"} to=\"/\" onClick={onClose}>\r\n                Home\r\n              </NavLink>\r\n              <Box display={\"flex\"}>\r\n                <NavLink to=\"/posts\" className={\"nav-link\"}>\r\n                  Posts\r\n                </NavLink>{\" \"}\r\n                {/* <ChevronDownIcon\r\n                  style={{\r\n                    position: \"relative\",\r\n                    top: \"5px\",\r\n                    marginLeft: \"10px\",\r\n                  }}\r\n                /> */}\r\n              </Box>\r\n              <Box display={\"flex\"}>\r\n                <NavLink to=\"/course\" className={\"nav-link\"}>\r\n                  Course\r\n                </NavLink>{\" \"}\r\n                {/* <ChevronDownIcon\r\n                  style={{\r\n                    position: \"relative\",\r\n                    top: \"5px\",\r\n                    marginLeft: \"5px\",\r\n                  }}\r\n                /> */}\r\n              </Box>\r\n              {token && <NavLink to=\"/mycourse\" onClick={onClose} className={\"nav-link\"}>\r\n                My Course\r\n              </NavLink>}\r\n              <NavLink to=\"/free\" onClick={onClose} className={\"nav-link\"}>\r\n                Free Resources\r\n              </NavLink>\r\n              {token ? (\r\n                <Text onClick={handleLogout} className={\"nav-link\"}>\r\n                  Logout\r\n                </Text>\r\n              ) : (\r\n                <NavLink to=\"/login\" onClick={onClose} className={\"nav-link\"}>\r\n                  Login\r\n                </NavLink>\r\n              )}\r\n\r\n              <NavLink to=\"/signup\" onClick={onClose} className={\"nav-link\"}>\r\n                Sign Up\r\n              </NavLink>\r\n            </Box>\r\n          </DrawerBody>\r\n\r\n          <DrawerFooter>\r\n            <Button variant=\"outline\" mr={3} onClick={onClose}>\r\n              Cancel\r\n            </Button>\r\n          </DrawerFooter>\r\n        </DrawerContent>\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\nexport default Navbar;"],"names":["baseUrl","SingleMyCourse","lazy","_JSON$parse","token","JSON","parse","localStorage","getItem","headers","myCourse","setMyCourse","useState","isLoading","setIsLoading","useEffect","async","_myCourseData$data","myCourseData","axios","get","concat","data","err","console","log","getMyCourseData","_jsx","_Fragment","children","Spinar","_jsxs","Navbar","length","Box","display","gridTemplateColumns","base","sm","md","lg","gap","margin","fontFamily","map","ele","index","Suspense","fallback","Text","fontWeight","fontSize","textAlign","marginTop","Link","to","Button","mt","bg","size","color","_JSON$parse2","_JSON$parse3","navigate","useNavigate","isOpen","onClose","onToggle","useDisclosure","showPostDropdown","setShowPostDropdown","showCourseDropdown","setShowCourseDropdown","courseData","setCourseData","postData","setPostData","isHovered","setIsHovered","showLogout","setShowLogout","setToken","userName","setUserName","email","setEmail","handleLogout","obj","window","confirm","setItem","stringify","dataPost","uniquePosts","Array","from","Map","post","category","values","alert","getPostData","dataCourse","getCourseData","className","alignItems","backgroundColor","boxShadow","height","position","width","top","marginBottom","zIndex","paddingRight","NavLink","Image","src","logoImg","justifyContent","onMouseEnter","handlePostMouseEnter","onMouseLeave","handlePostMouseLeave","ChevronDownIcon","style","marginLeft","flexDirection","padding","borderRadius","_id","handleCourseMouseEnter","handleCourseMouseLeave","name","h","ml","cursor","onClick","toUpperCase","right","IoMdLogOut","VscThreeBars","Drawer","placement","DrawerOverlay","DrawerContent","DrawerCloseButton","DrawerBody","textDecoration","DrawerFooter","variant","mr"],"sourceRoot":""}